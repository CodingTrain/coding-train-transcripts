{
  "id": "5knjfjzbgqkfjbelzdsj5s3crq",
  "version": "91ee9c0c3df30478510ff8c8a3a545add1ad0259ad3a9f78fba57fbc05ee64f7",
  "input": {
    "audio": "https://upcdn.io/FW25b4F/raw/coding-train/j6txbhwP9jo.m4a"
  },
  "logs": "Transcribe with large-v2 model\nDetected language: English\n  0%|          | 0/5835 [00:00<?, ?frames/s]\n 51%|█████     | 2960/5835 [00:08<00:07, 363.35frames/s]\n100%|██████████| 5835/5835 [00:16<00:00, 357.45frames/s]\n100%|██████████| 5835/5835 [00:16<00:00, 358.33frames/s]\n",
  "output": {
    "detected_language": "english",
    "segments": [
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 1.2,
        "id": 0,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 0,
        "temperature": 0,
        "text": " I want to try an experiment.",
        "tokens": [
          50364,
          286,
          528,
          281,
          853,
          364,
          5120,
          13,
          50424
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 3.54,
        "id": 1,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 1.2,
        "temperature": 0,
        "text": " Can I boil down one of my full coding challenge",
        "tokens": [
          50424,
          1664,
          286,
          13329,
          760,
          472,
          295,
          452,
          1577,
          17720,
          3430,
          50541
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 4.92,
        "id": 2,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 3.54,
        "temperature": 0,
        "text": " videos into one minute?",
        "tokens": [
          50541,
          2145,
          666,
          472,
          3456,
          30,
          50610
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 6.32,
        "id": 3,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 4.92,
        "temperature": 0,
        "text": " I'm going to take it easy on myself",
        "tokens": [
          50610,
          286,
          478,
          516,
          281,
          747,
          309,
          1858,
          322,
          2059,
          50680
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 8.44,
        "id": 4,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 6.32,
        "temperature": 0,
        "text": " and start with the recursive tree, which",
        "tokens": [
          50680,
          293,
          722,
          365,
          264,
          20560,
          488,
          4230,
          11,
          597,
          50786
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 10.64,
        "id": 5,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 8.44,
        "temperature": 0,
        "text": " was only about a 15-minute video in the first place.",
        "tokens": [
          50786,
          390,
          787,
          466,
          257,
          2119,
          12,
          18256,
          960,
          294,
          264,
          700,
          1081,
          13,
          50896
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 12.8,
        "id": 6,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 10.64,
        "temperature": 0,
        "text": " Step number one, start with a blank canvas.",
        "tokens": [
          50896,
          5470,
          1230,
          472,
          11,
          722,
          365,
          257,
          8247,
          16267,
          13,
          51004
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 14.56,
        "id": 7,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 12.8,
        "temperature": 0,
        "text": " Set a line color and a stroke weight.",
        "tokens": [
          51004,
          8928,
          257,
          1622,
          2017,
          293,
          257,
          12403,
          3364,
          13,
          51092
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 16.72,
        "id": 8,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 14.56,
        "temperature": 0,
        "text": " Translate to the bottom middle of the canvas, which",
        "tokens": [
          51092,
          6531,
          17593,
          281,
          264,
          2767,
          2808,
          295,
          264,
          16267,
          11,
          597,
          51200
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 18.28,
        "id": 9,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 16.72,
        "temperature": 0,
        "text": " is where the tree will grow from.",
        "tokens": [
          51200,
          307,
          689,
          264,
          4230,
          486,
          1852,
          490,
          13,
          51278
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 20.76,
        "id": 10,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 18.28,
        "temperature": 0,
        "text": " Then write a function to draw a branch, which is just",
        "tokens": [
          51278,
          1396,
          2464,
          257,
          2445,
          281,
          2642,
          257,
          9819,
          11,
          597,
          307,
          445,
          51402
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 22,
        "id": 11,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 20.76,
        "temperature": 0,
        "text": " a single vertical line.",
        "tokens": [
          51402,
          257,
          2167,
          9429,
          1622,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 24.68,
        "id": 12,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 22,
        "temperature": 0,
        "text": " With the magic of recursion, the branch function",
        "tokens": [
          51464,
          2022,
          264,
          5585,
          295,
          20560,
          313,
          11,
          264,
          9819,
          2445,
          51598
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 27.84,
        "id": 13,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 24.68,
        "temperature": 0,
        "text": " can call itself, shrinking the length the next time.",
        "tokens": [
          51598,
          393,
          818,
          2564,
          11,
          41684,
          264,
          4641,
          264,
          958,
          565,
          13,
          51756
        ]
      },
      {
        "avg_logprob": -0.2220748990599872,
        "compression_ratio": 1.6783783783783783,
        "end": 29.6,
        "id": 14,
        "no_speech_prob": 0.0020826717372983694,
        "seek": 0,
        "start": 27.84,
        "temperature": 0,
        "text": " But this would end up in an infinite loop,",
        "tokens": [
          51756,
          583,
          341,
          576,
          917,
          493,
          294,
          364,
          13785,
          6367,
          11,
          51844
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 31.12,
        "id": 15,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 29.6,
        "temperature": 0,
        "text": " so we better have an exit condition",
        "tokens": [
          50364,
          370,
          321,
          1101,
          362,
          364,
          11043,
          4188,
          50440
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 33.44,
        "id": 16,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 31.12,
        "temperature": 0,
        "text": " to stop drawing when the branch gets too short.",
        "tokens": [
          50440,
          281,
          1590,
          6316,
          562,
          264,
          9819,
          2170,
          886,
          2099,
          13,
          50556
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 34.68,
        "id": 17,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 33.44,
        "temperature": 0,
        "text": " Then we can add an angle.",
        "tokens": [
          50556,
          1396,
          321,
          393,
          909,
          364,
          5802,
          13,
          50618
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 37.64,
        "id": 18,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 34.68,
        "temperature": 0,
        "text": " Translate to the end of the branch to draw the next one.",
        "tokens": [
          50618,
          6531,
          17593,
          281,
          264,
          917,
          295,
          264,
          9819,
          281,
          2642,
          264,
          958,
          472,
          13,
          50766
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 40.2,
        "id": 19,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 37.64,
        "temperature": 0,
        "text": " Then we can rotate off to the right by some angle.",
        "tokens": [
          50766,
          1396,
          321,
          393,
          13121,
          766,
          281,
          264,
          558,
          538,
          512,
          5802,
          13,
          50894
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 42.400000000000006,
        "id": 20,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 40.2,
        "temperature": 0,
        "text": " We can also recursively rotate off to the left.",
        "tokens": [
          50894,
          492,
          393,
          611,
          20560,
          3413,
          13121,
          766,
          281,
          264,
          1411,
          13,
          51004
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 43.88,
        "id": 21,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 42.400000000000006,
        "temperature": 0,
        "text": " Throw a little push and pop in there",
        "tokens": [
          51004,
          22228,
          257,
          707,
          2944,
          293,
          1665,
          294,
          456,
          51078
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 45.400000000000006,
        "id": 22,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 43.88,
        "temperature": 0,
        "text": " so that each time we draw a branch,",
        "tokens": [
          51078,
          370,
          300,
          1184,
          565,
          321,
          2642,
          257,
          9819,
          11,
          51154
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 47.040000000000006,
        "id": 23,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 45.400000000000006,
        "temperature": 0,
        "text": " we're starting from the right position.",
        "tokens": [
          51154,
          321,
          434,
          2891,
          490,
          264,
          558,
          2535,
          13,
          51236
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 49.08,
        "id": 24,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 47.040000000000006,
        "temperature": 0,
        "text": " There we go, a fractal tree in P5.js.",
        "tokens": [
          51236,
          821,
          321,
          352,
          11,
          257,
          17948,
          304,
          4230,
          294,
          430,
          20,
          13,
          25530,
          13,
          51338
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 51.64,
        "id": 25,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 49.08,
        "temperature": 0,
        "text": " You can watch the full video for a much longer explanation.",
        "tokens": [
          51338,
          509,
          393,
          1159,
          264,
          1577,
          960,
          337,
          257,
          709,
          2854,
          10835,
          13,
          51466
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 53.16,
        "id": 26,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 51.64,
        "temperature": 0,
        "text": " The Coded Train Passenger Showcase",
        "tokens": [
          51466,
          440,
          383,
          12340,
          28029,
          430,
          8356,
          1321,
          6895,
          9765,
          51542
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 56.120000000000005,
        "id": 27,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 53.16,
        "temperature": 0,
        "text": " is full of your beautiful recursive trees.",
        "tokens": [
          51542,
          307,
          1577,
          295,
          428,
          2238,
          20560,
          488,
          5852,
          13,
          51690
        ]
      },
      {
        "avg_logprob": -0.23427820484540615,
        "compression_ratio": 1.8217522658610272,
        "end": 59.36,
        "id": 28,
        "no_speech_prob": 0.000020145309463259764,
        "seek": 2960,
        "start": 56.120000000000005,
        "temperature": 0,
        "text": " If you're watching this right now, add your own.",
        "tokens": [
          51690,
          759,
          291,
          434,
          1976,
          341,
          558,
          586,
          11,
          909,
          428,
          1065,
          13,
          51852
        ]
      }
    ],
    "transcription": " I want to try an experiment. Can I boil down one of my full coding challenge videos into one minute? I'm going to take it easy on myself and start with the recursive tree, which was only about a 15-minute video in the first place. Step number one, start with a blank canvas. Set a line color and a stroke weight. Translate to the bottom middle of the canvas, which is where the tree will grow from. Then write a function to draw a branch, which is just a single vertical line. With the magic of recursion, the branch function can call itself, shrinking the length the next time. But this would end up in an infinite loop, so we better have an exit condition to stop drawing when the branch gets too short. Then we can add an angle. Translate to the end of the branch to draw the next one. Then we can rotate off to the right by some angle. We can also recursively rotate off to the left. Throw a little push and pop in there so that each time we draw a branch, we're starting from the right position. There we go, a fractal tree in P5.js. You can watch the full video for a much longer explanation. The Coded Train Passenger Showcase is full of your beautiful recursive trees. If you're watching this right now, add your own.",
    "translation": null
  },
  "error": null,
  "status": "succeeded",
  "created_at": "2023-09-26T20:41:41.639776Z",
  "started_at": "2023-09-26T20:43:03.736718Z",
  "completed_at": "2023-09-26T20:43:21.265254Z",
  "webhook": "https://83ceaa0b612c.ngrok.app/?video_id=j6txbhwP9jo",
  "webhook_events_filter": [
    "completed"
  ],
  "metrics": {
    "predict_time": 17.528536
  },
  "urls": {
    "cancel": "https://api.replicate.com/v1/predictions/5knjfjzbgqkfjbelzdsj5s3crq/cancel",
    "get": "https://api.replicate.com/v1/predictions/5knjfjzbgqkfjbelzdsj5s3crq"
  }
}