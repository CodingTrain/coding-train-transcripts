{
  "id": "b7byqgzbtjqphdqjxn2hfq3isi",
  "version": "91ee9c0c3df30478510ff8c8a3a545add1ad0259ad3a9f78fba57fbc05ee64f7",
  "input": {
    "audio": "https://upcdn.io/FW25b4F/raw/coding-train/enNfb6p3j_g.m4a"
  },
  "logs": "Transcribe with large-v2 model\nDetected language: English\n  0%|          | 0/137822 [00:00<?, ?frames/s]\n  2%|▏         | 2980/137822 [00:05<04:20, 518.58frames/s]\n  4%|▍         | 5596/137822 [00:11<04:46, 461.48frames/s]\n  6%|▌         | 8508/137822 [00:17<04:19, 498.69frames/s]\n  8%|▊         | 11196/137822 [00:23<04:31, 467.03frames/s]\n 10%|█         | 14016/137822 [00:29<04:27, 461.99frames/s]\n 12%|█▏        | 16688/137822 [00:34<04:03, 498.35frames/s]\n 14%|█▍        | 19466/137822 [00:38<03:37, 545.09frames/s]\n 16%|█▌        | 22018/137822 [00:42<03:28, 556.54frames/s]\n 18%|█▊        | 24726/137822 [00:47<03:26, 548.17frames/s]\n 20%|██        | 27706/137822 [00:53<03:28, 527.06frames/s]\n 22%|██▏       | 30282/137822 [00:58<03:23, 528.98frames/s]\n 24%|██▍       | 33004/137822 [01:02<03:06, 561.42frames/s]\n 26%|██▌       | 35720/137822 [01:07<02:59, 570.22frames/s]\n 28%|██▊       | 38648/137822 [01:13<03:00, 550.05frames/s]\n 30%|███       | 41600/137822 [01:19<03:01, 530.29frames/s]\n 32%|███▏      | 44300/137822 [01:24<03:00, 517.57frames/s]\n 34%|███▍      | 47300/137822 [01:29<02:42, 557.87frames/s]\n 36%|███▌      | 49824/137822 [01:33<02:39, 553.07frames/s]\n 38%|███▊      | 52688/137822 [01:38<02:26, 579.58frames/s]\n 40%|████      | 55336/137822 [01:42<02:20, 586.56frames/s]\n 42%|████▏     | 57964/137822 [01:48<02:28, 535.98frames/s]\n 44%|████▎     | 60292/137822 [01:52<02:17, 562.96frames/s]\n 46%|████▌     | 63060/137822 [01:56<02:08, 582.68frames/s]\n 48%|████▊     | 65516/137822 [02:02<02:18, 522.33frames/s]\n 49%|████▉     | 68192/137822 [02:06<02:00, 576.85frames/s]\n 51%|█████     | 70480/137822 [02:10<02:01, 554.88frames/s]\n 53%|█████▎    | 73280/137822 [02:14<01:50, 583.82frames/s]\n 54%|█████▍    | 75068/137822 [02:18<01:51, 561.30frames/s]\n 57%|█████▋    | 77920/137822 [02:22<01:35, 625.21frames/s]\n 58%|█████▊    | 80484/137822 [02:26<01:34, 606.43frames/s]\n 61%|██████    | 83480/137822 [02:31<01:28, 614.61frames/s]\n 63%|██████▎   | 86180/137822 [02:35<01:24, 608.27frames/s]\n 65%|██████▍   | 89180/137822 [02:39<01:11, 680.50frames/s]\n 66%|██████▌   | 91180/137822 [02:43<01:14, 628.99frames/s]\n 68%|██████▊   | 93980/137822 [02:47<01:10, 619.58frames/s]\n 70%|███████   | 96680/137822 [02:54<01:16, 537.93frames/s]\n 72%|███████▏  | 99380/137822 [02:58<01:08, 563.00frames/s]\n 74%|███████▍  | 102280/137822 [03:04<01:05, 545.99frames/s]\n 76%|███████▋  | 105180/137822 [03:09<01:01, 535.01frames/s]\n 78%|███████▊  | 107780/137822 [03:15<00:58, 513.97frames/s]\n 80%|███████▉  | 110080/137822 [03:21<00:58, 472.89frames/s]\n 82%|████████▏ | 112880/137822 [03:27<00:52, 472.78frames/s]\n 84%|████████▍ | 115880/137822 [03:35<00:50, 436.64frames/s]\n 86%|████████▌ | 118480/137822 [03:41<00:44, 435.90frames/s]\n 88%|████████▊ | 121480/137822 [03:49<00:39, 414.97frames/s]\n 90%|█████████ | 124080/137822 [03:53<00:30, 453.29frames/s]\n 92%|█████████▏| 126980/137822 [04:00<00:23, 453.38frames/s]\n 94%|█████████▍| 129580/137822 [04:06<00:19, 433.09frames/s]\n 96%|█████████▌| 132080/137822 [04:12<00:13, 426.64frames/s]\n 98%|█████████▊| 134380/137822 [04:19<00:08, 404.70frames/s]\n 99%|█████████▉| 136880/137822 [04:28<00:02, 355.34frames/s]\n99%|█████████▉| 136880/137822 [04:39<00:01, 489.52frames/s]\n",
  "output": {
    "detected_language": "english",
    "segments": [
      {
        "avg_logprob": -0.28301384489415055,
        "compression_ratio": 1.6319444444444444,
        "end": 4.4,
        "id": 0,
        "no_speech_prob": 0.14562289416790009,
        "seek": 0,
        "start": 0,
        "temperature": 0,
        "text": " Hello and welcome to a very special coding challenge video.",
        "tokens": [
          50364,
          2425,
          293,
          2928,
          281,
          257,
          588,
          2121,
          17720,
          3430,
          960,
          13,
          50584
        ]
      },
      {
        "avg_logprob": -0.28301384489415055,
        "compression_ratio": 1.6319444444444444,
        "end": 8,
        "id": 1,
        "no_speech_prob": 0.14562289416790009,
        "seek": 0,
        "start": 4.4,
        "temperature": 0,
        "text": " This video is part of Support P5 2020.",
        "tokens": [
          50584,
          639,
          960,
          307,
          644,
          295,
          18073,
          430,
          20,
          4808,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.28301384489415055,
        "compression_ratio": 1.6319444444444444,
        "end": 12.48,
        "id": 2,
        "no_speech_prob": 0.14562289416790009,
        "seek": 0,
        "start": 8,
        "temperature": 0,
        "text": " I know it's 2021, but part of the campaign to raise money for the Processing Foundation",
        "tokens": [
          50764,
          286,
          458,
          309,
          311,
          7201,
          11,
          457,
          644,
          295,
          264,
          5129,
          281,
          5300,
          1460,
          337,
          264,
          31093,
          278,
          10335,
          50988
        ]
      },
      {
        "avg_logprob": -0.28301384489415055,
        "compression_ratio": 1.6319444444444444,
        "end": 13.6,
        "id": 3,
        "no_speech_prob": 0.14562289416790009,
        "seek": 0,
        "start": 12.48,
        "temperature": 0,
        "text": " in 2020.",
        "tokens": [
          50988,
          294,
          4808,
          13,
          51044
        ]
      },
      {
        "avg_logprob": -0.28301384489415055,
        "compression_ratio": 1.6319444444444444,
        "end": 18.44,
        "id": 4,
        "no_speech_prob": 0.14562289416790009,
        "seek": 0,
        "start": 13.6,
        "temperature": 0,
        "text": " One of the rewards for making a donation was request a topic for a coding train video.",
        "tokens": [
          51044,
          1485,
          295,
          264,
          17203,
          337,
          1455,
          257,
          19724,
          390,
          5308,
          257,
          4829,
          337,
          257,
          17720,
          3847,
          960,
          13,
          51286
        ]
      },
      {
        "avg_logprob": -0.28301384489415055,
        "compression_ratio": 1.6319444444444444,
        "end": 22.8,
        "id": 5,
        "no_speech_prob": 0.14562289416790009,
        "seek": 0,
        "start": 18.44,
        "temperature": 0,
        "text": " And I'm here finally in the summer of 2021 to fulfill these requests.",
        "tokens": [
          51286,
          400,
          286,
          478,
          510,
          2721,
          294,
          264,
          4266,
          295,
          7201,
          281,
          13875,
          613,
          12475,
          13,
          51504
        ]
      },
      {
        "avg_logprob": -0.28301384489415055,
        "compression_ratio": 1.6319444444444444,
        "end": 28.080000000000002,
        "id": 6,
        "no_speech_prob": 0.14562289416790009,
        "seek": 0,
        "start": 22.8,
        "temperature": 0,
        "text": " This video was is thanks to the generous donation from Jason Oswald, chair of computer science",
        "tokens": [
          51504,
          639,
          960,
          390,
          307,
          3231,
          281,
          264,
          14537,
          19724,
          490,
          11181,
          8875,
          33262,
          11,
          6090,
          295,
          3820,
          3497,
          51768
        ]
      },
      {
        "avg_logprob": -0.28301384489415055,
        "compression_ratio": 1.6319444444444444,
        "end": 29.8,
        "id": 7,
        "no_speech_prob": 0.14562289416790009,
        "seek": 0,
        "start": 28.080000000000002,
        "temperature": 0,
        "text": " at Germantown Academy.",
        "tokens": [
          51768,
          412,
          3848,
          394,
          648,
          11735,
          13,
          51854
        ]
      },
      {
        "avg_logprob": -0.22765171813964843,
        "compression_ratio": 1.9248120300751879,
        "end": 33.88,
        "id": 8,
        "no_speech_prob": 0.0495619997382164,
        "seek": 2980,
        "start": 29.8,
        "temperature": 0,
        "text": " If you're not familiar with the Processing Foundation, it is the organization that maintains",
        "tokens": [
          50364,
          759,
          291,
          434,
          406,
          4963,
          365,
          264,
          31093,
          278,
          10335,
          11,
          309,
          307,
          264,
          4475,
          300,
          33385,
          50568
        ]
      },
      {
        "avg_logprob": -0.22765171813964843,
        "compression_ratio": 1.9248120300751879,
        "end": 35.88,
        "id": 9,
        "no_speech_prob": 0.0495619997382164,
        "seek": 2980,
        "start": 33.88,
        "temperature": 0,
        "text": " P5.js processing.",
        "tokens": [
          50568,
          430,
          20,
          13,
          25530,
          9007,
          13,
          50668
        ]
      },
      {
        "avg_logprob": -0.22765171813964843,
        "compression_ratio": 1.9248120300751879,
        "end": 40.08,
        "id": 10,
        "no_speech_prob": 0.0495619997382164,
        "seek": 2980,
        "start": 35.88,
        "temperature": 0,
        "text": " You can learn all about the Processing Foundation at the Processing Foundation website.",
        "tokens": [
          50668,
          509,
          393,
          1466,
          439,
          466,
          264,
          31093,
          278,
          10335,
          412,
          264,
          31093,
          278,
          10335,
          3144,
          13,
          50878
        ]
      },
      {
        "avg_logprob": -0.22765171813964843,
        "compression_ratio": 1.9248120300751879,
        "end": 43.36,
        "id": 11,
        "no_speech_prob": 0.0495619997382164,
        "seek": 2980,
        "start": 40.08,
        "temperature": 0,
        "text": " And that's where you too can also make a donation.",
        "tokens": [
          50878,
          400,
          300,
          311,
          689,
          291,
          886,
          393,
          611,
          652,
          257,
          19724,
          13,
          51042
        ]
      },
      {
        "avg_logprob": -0.22765171813964843,
        "compression_ratio": 1.9248120300751879,
        "end": 47.08,
        "id": 12,
        "no_speech_prob": 0.0495619997382164,
        "seek": 2980,
        "start": 43.36,
        "temperature": 0,
        "text": " So much of what I do on the coding train, actually, basically all of what I do on the",
        "tokens": [
          51042,
          407,
          709,
          295,
          437,
          286,
          360,
          322,
          264,
          17720,
          3847,
          11,
          767,
          11,
          1936,
          439,
          295,
          437,
          286,
          360,
          322,
          264,
          51228
        ]
      },
      {
        "avg_logprob": -0.22765171813964843,
        "compression_ratio": 1.9248120300751879,
        "end": 52.16,
        "id": 13,
        "no_speech_prob": 0.0495619997382164,
        "seek": 2980,
        "start": 47.08,
        "temperature": 0,
        "text": " coding train would not be possible without the Processing Foundation's support and community.",
        "tokens": [
          51228,
          17720,
          3847,
          576,
          406,
          312,
          1944,
          1553,
          264,
          31093,
          278,
          10335,
          311,
          1406,
          293,
          1768,
          13,
          51482
        ]
      },
      {
        "avg_logprob": -0.22765171813964843,
        "compression_ratio": 1.9248120300751879,
        "end": 55.96,
        "id": 14,
        "no_speech_prob": 0.0495619997382164,
        "seek": 2980,
        "start": 52.16,
        "temperature": 0,
        "text": " And it's the anything that I could do to give back I am thrilled to be able to do.",
        "tokens": [
          51482,
          400,
          309,
          311,
          264,
          1340,
          300,
          286,
          727,
          360,
          281,
          976,
          646,
          286,
          669,
          18744,
          281,
          312,
          1075,
          281,
          360,
          13,
          51672
        ]
      },
      {
        "avg_logprob": -0.2675363283890944,
        "compression_ratio": 1.6209677419354838,
        "end": 61.56,
        "id": 15,
        "no_speech_prob": 0.01853952743113041,
        "seek": 5596,
        "start": 55.96,
        "temperature": 0,
        "text": " So what function did Jason request that I explore in this particular video?",
        "tokens": [
          50364,
          407,
          437,
          2445,
          630,
          11181,
          5308,
          300,
          286,
          6839,
          294,
          341,
          1729,
          960,
          30,
          50644
        ]
      },
      {
        "avg_logprob": -0.2675363283890944,
        "compression_ratio": 1.6209677419354838,
        "end": 65.12,
        "id": 16,
        "no_speech_prob": 0.01853952743113041,
        "seek": 5596,
        "start": 61.56,
        "temperature": 0,
        "text": " It is the Bezier function.",
        "tokens": [
          50644,
          467,
          307,
          264,
          879,
          33352,
          2445,
          13,
          50822
        ]
      },
      {
        "avg_logprob": -0.2675363283890944,
        "compression_ratio": 1.6209677419354838,
        "end": 70.92,
        "id": 17,
        "no_speech_prob": 0.01853952743113041,
        "seek": 5596,
        "start": 65.12,
        "temperature": 0,
        "text": " The Bezier function draws a Bezier curve named for the French engineer Pierre Bezier, who",
        "tokens": [
          50822,
          440,
          879,
          33352,
          2445,
          20045,
          257,
          879,
          33352,
          7605,
          4926,
          337,
          264,
          5522,
          11403,
          28461,
          879,
          33352,
          11,
          567,
          51112
        ]
      },
      {
        "avg_logprob": -0.2675363283890944,
        "compression_ratio": 1.6209677419354838,
        "end": 76.58,
        "id": 18,
        "no_speech_prob": 0.01853952743113041,
        "seek": 5596,
        "start": 70.92,
        "temperature": 0,
        "text": " was working on I think modeling Renault cars in the 1960s and developed this curve.",
        "tokens": [
          51112,
          390,
          1364,
          322,
          286,
          519,
          15983,
          23068,
          723,
          5163,
          294,
          264,
          16157,
          82,
          293,
          4743,
          341,
          7605,
          13,
          51395
        ]
      },
      {
        "avg_logprob": -0.2675363283890944,
        "compression_ratio": 1.6209677419354838,
        "end": 81.84,
        "id": 19,
        "no_speech_prob": 0.01853952743113041,
        "seek": 5596,
        "start": 76.58,
        "temperature": 0,
        "text": " So in this video, I both want to demonstrate the Bezier function itself as it exists in",
        "tokens": [
          51395,
          407,
          294,
          341,
          960,
          11,
          286,
          1293,
          528,
          281,
          11698,
          264,
          879,
          33352,
          2445,
          2564,
          382,
          309,
          8198,
          294,
          51658
        ]
      },
      {
        "avg_logprob": -0.2675363283890944,
        "compression_ratio": 1.6209677419354838,
        "end": 85.08,
        "id": 20,
        "no_speech_prob": 0.01853952743113041,
        "seek": 5596,
        "start": 81.84,
        "temperature": 0,
        "text": " P5.js, as well as the math behind it.",
        "tokens": [
          51658,
          430,
          20,
          13,
          25530,
          11,
          382,
          731,
          382,
          264,
          5221,
          2261,
          309,
          13,
          51820
        ]
      },
      {
        "avg_logprob": -0.22144087844007598,
        "compression_ratio": 1.6655629139072847,
        "end": 86.84,
        "id": 21,
        "no_speech_prob": 0.18228304386138916,
        "seek": 8508,
        "start": 85.2,
        "temperature": 0,
        "text": " But what if you didn't have that function?",
        "tokens": [
          50370,
          583,
          437,
          498,
          291,
          994,
          380,
          362,
          300,
          2445,
          30,
          50452
        ]
      },
      {
        "avg_logprob": -0.22144087844007598,
        "compression_ratio": 1.6655629139072847,
        "end": 91.44,
        "id": 22,
        "no_speech_prob": 0.18228304386138916,
        "seek": 8508,
        "start": 86.84,
        "temperature": 0,
        "text": " Could you get that curve on the screen just through your own calculations?",
        "tokens": [
          50452,
          7497,
          291,
          483,
          300,
          7605,
          322,
          264,
          2568,
          445,
          807,
          428,
          1065,
          20448,
          30,
          50682
        ]
      },
      {
        "avg_logprob": -0.22144087844007598,
        "compression_ratio": 1.6655629139072847,
        "end": 95.6,
        "id": 23,
        "no_speech_prob": 0.18228304386138916,
        "seek": 8508,
        "start": 91.44,
        "temperature": 0,
        "text": " In learning about the Bezier curve, your first stop should really be Rune Madsen's Programming",
        "tokens": [
          50682,
          682,
          2539,
          466,
          264,
          879,
          33352,
          7605,
          11,
          428,
          700,
          1590,
          820,
          534,
          312,
          497,
          2613,
          5326,
          6748,
          311,
          8338,
          2810,
          50890
        ]
      },
      {
        "avg_logprob": -0.22144087844007598,
        "compression_ratio": 1.6655629139072847,
        "end": 96.84,
        "id": 24,
        "no_speech_prob": 0.18228304386138916,
        "seek": 8508,
        "start": 95.6,
        "temperature": 0,
        "text": " Design Systems book.",
        "tokens": [
          50890,
          12748,
          27059,
          1446,
          13,
          50952
        ]
      },
      {
        "avg_logprob": -0.22144087844007598,
        "compression_ratio": 1.6655629139072847,
        "end": 101.56,
        "id": 25,
        "no_speech_prob": 0.18228304386138916,
        "seek": 8508,
        "start": 96.84,
        "temperature": 0,
        "text": " In the shapes chapter in the custom shapes section, he has a wonderful explanation of",
        "tokens": [
          50952,
          682,
          264,
          10854,
          7187,
          294,
          264,
          2375,
          10854,
          3541,
          11,
          415,
          575,
          257,
          3715,
          10835,
          295,
          51188
        ]
      },
      {
        "avg_logprob": -0.22144087844007598,
        "compression_ratio": 1.6655629139072847,
        "end": 106.6,
        "id": 26,
        "no_speech_prob": 0.18228304386138916,
        "seek": 8508,
        "start": 101.56,
        "temperature": 0,
        "text": " what a Bezier curve is, how it works, and what kinds of designs and shapes you can create",
        "tokens": [
          51188,
          437,
          257,
          879,
          33352,
          7605,
          307,
          11,
          577,
          309,
          1985,
          11,
          293,
          437,
          3685,
          295,
          11347,
          293,
          10854,
          291,
          393,
          1884,
          51440
        ]
      },
      {
        "avg_logprob": -0.22144087844007598,
        "compression_ratio": 1.6655629139072847,
        "end": 107.6,
        "id": 27,
        "no_speech_prob": 0.18228304386138916,
        "seek": 8508,
        "start": 106.6,
        "temperature": 0,
        "text": " in P5.js.",
        "tokens": [
          51440,
          294,
          430,
          20,
          13,
          25530,
          13,
          51490
        ]
      },
      {
        "avg_logprob": -0.22144087844007598,
        "compression_ratio": 1.6655629139072847,
        "end": 111.96,
        "id": 28,
        "no_speech_prob": 0.18228304386138916,
        "seek": 8508,
        "start": 107.6,
        "temperature": 0,
        "text": " Really, everything that I want to cover in this video is very well explained there.",
        "tokens": [
          51490,
          4083,
          11,
          1203,
          300,
          286,
          528,
          281,
          2060,
          294,
          341,
          960,
          307,
          588,
          731,
          8825,
          456,
          13,
          51708
        ]
      },
      {
        "avg_logprob": -0.23798612564329116,
        "compression_ratio": 1.858267716535433,
        "end": 116.32,
        "id": 29,
        "no_speech_prob": 0.0020827408879995346,
        "seek": 11196,
        "start": 111.96,
        "temperature": 0,
        "text": " You might also want to wander your way over to the Wikipedia page for the Bezier curve.",
        "tokens": [
          50364,
          509,
          1062,
          611,
          528,
          281,
          27541,
          428,
          636,
          670,
          281,
          264,
          28999,
          3028,
          337,
          264,
          879,
          33352,
          7605,
          13,
          50582
        ]
      },
      {
        "avg_logprob": -0.23798612564329116,
        "compression_ratio": 1.858267716535433,
        "end": 120.39999999999999,
        "id": 30,
        "no_speech_prob": 0.0020827408879995346,
        "seek": 11196,
        "start": 116.32,
        "temperature": 0,
        "text": " There you can find all the math behind how the curve is calculated.",
        "tokens": [
          50582,
          821,
          291,
          393,
          915,
          439,
          264,
          5221,
          2261,
          577,
          264,
          7605,
          307,
          15598,
          13,
          50786
        ]
      },
      {
        "avg_logprob": -0.23798612564329116,
        "compression_ratio": 1.858267716535433,
        "end": 126.55999999999999,
        "id": 31,
        "no_speech_prob": 0.0020827408879995346,
        "seek": 11196,
        "start": 120.39999999999999,
        "temperature": 0,
        "text": " Now, what is most commonly referred to as a Bezier curve is actually known as a cubic",
        "tokens": [
          50786,
          823,
          11,
          437,
          307,
          881,
          12719,
          10839,
          281,
          382,
          257,
          879,
          33352,
          7605,
          307,
          767,
          2570,
          382,
          257,
          28733,
          51094
        ]
      },
      {
        "avg_logprob": -0.23798612564329116,
        "compression_ratio": 1.858267716535433,
        "end": 127.55999999999999,
        "id": 32,
        "no_speech_prob": 0.0020827408879995346,
        "seek": 11196,
        "start": 126.55999999999999,
        "temperature": 0,
        "text": " Bezier curve.",
        "tokens": [
          51094,
          879,
          33352,
          7605,
          13,
          51144
        ]
      },
      {
        "avg_logprob": -0.23798612564329116,
        "compression_ratio": 1.858267716535433,
        "end": 133.12,
        "id": 33,
        "no_speech_prob": 0.0020827408879995346,
        "seek": 11196,
        "start": 127.55999999999999,
        "temperature": 0,
        "text": " There's such thing as a linear Bezier curve, which is really just a line, a quadratic Bezier",
        "tokens": [
          51144,
          821,
          311,
          1270,
          551,
          382,
          257,
          8213,
          879,
          33352,
          7605,
          11,
          597,
          307,
          534,
          445,
          257,
          1622,
          11,
          257,
          37262,
          879,
          33352,
          51422
        ]
      },
      {
        "avg_logprob": -0.23798612564329116,
        "compression_ratio": 1.858267716535433,
        "end": 135.48,
        "id": 34,
        "no_speech_prob": 0.0020827408879995346,
        "seek": 11196,
        "start": 133.12,
        "temperature": 0,
        "text": " curve, and a cubic Bezier curve.",
        "tokens": [
          51422,
          7605,
          11,
          293,
          257,
          28733,
          879,
          33352,
          7605,
          13,
          51540
        ]
      },
      {
        "avg_logprob": -0.23798612564329116,
        "compression_ratio": 1.858267716535433,
        "end": 140.16,
        "id": 35,
        "no_speech_prob": 0.0020827408879995346,
        "seek": 11196,
        "start": 135.48,
        "temperature": 0,
        "text": " The Bezier function in P5.js itself is the cubic Bezier curve, and that's what you usually",
        "tokens": [
          51540,
          440,
          879,
          33352,
          2445,
          294,
          430,
          20,
          13,
          25530,
          2564,
          307,
          264,
          28733,
          879,
          33352,
          7605,
          11,
          293,
          300,
          311,
          437,
          291,
          2673,
          51774
        ]
      },
      {
        "avg_logprob": -0.23607247670491535,
        "compression_ratio": 1.7389162561576355,
        "end": 143.04,
        "id": 36,
        "no_speech_prob": 0.10816213488578796,
        "seek": 14016,
        "start": 140.16,
        "temperature": 0,
        "text": " find in things like Adobe Illustrator as well.",
        "tokens": [
          50364,
          915,
          294,
          721,
          411,
          24862,
          37788,
          19802,
          382,
          731,
          13,
          50508
        ]
      },
      {
        "avg_logprob": -0.23607247670491535,
        "compression_ratio": 1.7389162561576355,
        "end": 147.6,
        "id": 37,
        "no_speech_prob": 0.10816213488578796,
        "seek": 14016,
        "start": 143.04,
        "temperature": 0,
        "text": " A Bezier curve always has two anchor points.",
        "tokens": [
          50508,
          316,
          879,
          33352,
          7605,
          1009,
          575,
          732,
          18487,
          2793,
          13,
          50736
        ]
      },
      {
        "avg_logprob": -0.23607247670491535,
        "compression_ratio": 1.7389162561576355,
        "end": 153.04,
        "id": 38,
        "no_speech_prob": 0.10816213488578796,
        "seek": 14016,
        "start": 147.6,
        "temperature": 0,
        "text": " A linear Bezier curve is just a line between those two points.",
        "tokens": [
          50736,
          316,
          8213,
          879,
          33352,
          7605,
          307,
          445,
          257,
          1622,
          1296,
          729,
          732,
          2793,
          13,
          51008
        ]
      },
      {
        "avg_logprob": -0.23607247670491535,
        "compression_ratio": 1.7389162561576355,
        "end": 158.44,
        "id": 39,
        "no_speech_prob": 0.10816213488578796,
        "seek": 14016,
        "start": 153.04,
        "temperature": 0,
        "text": " What's special about Bezier curves, what makes them curvy, is the fact that in addition to",
        "tokens": [
          51008,
          708,
          311,
          2121,
          466,
          879,
          33352,
          19490,
          11,
          437,
          1669,
          552,
          1262,
          11869,
          11,
          307,
          264,
          1186,
          300,
          294,
          4500,
          281,
          51278
        ]
      },
      {
        "avg_logprob": -0.23607247670491535,
        "compression_ratio": 1.7389162561576355,
        "end": 161.76,
        "id": 40,
        "no_speech_prob": 0.10816213488578796,
        "seek": 14016,
        "start": 158.44,
        "temperature": 0,
        "text": " the anchor points, there are also control points.",
        "tokens": [
          51278,
          264,
          18487,
          2793,
          11,
          456,
          366,
          611,
          1969,
          2793,
          13,
          51444
        ]
      },
      {
        "avg_logprob": -0.23607247670491535,
        "compression_ratio": 1.7389162561576355,
        "end": 166.88,
        "id": 41,
        "no_speech_prob": 0.10816213488578796,
        "seek": 14016,
        "start": 161.76,
        "temperature": 0,
        "text": " A quadratic Bezier curve involves just one control point.",
        "tokens": [
          51444,
          316,
          37262,
          879,
          33352,
          7605,
          11626,
          445,
          472,
          1969,
          935,
          13,
          51700
        ]
      },
      {
        "avg_logprob": -0.25215405593683693,
        "compression_ratio": 1.568421052631579,
        "end": 170.56,
        "id": 42,
        "no_speech_prob": 0.0012448204215615988,
        "seek": 16688,
        "start": 166.92,
        "temperature": 0,
        "text": " So I'm going to renumber these points now.",
        "tokens": [
          50366,
          407,
          286,
          478,
          516,
          281,
          8124,
          4182,
          613,
          2793,
          586,
          13,
          50548
        ]
      },
      {
        "avg_logprob": -0.25215405593683693,
        "compression_ratio": 1.568421052631579,
        "end": 176.78,
        "id": 43,
        "no_speech_prob": 0.0012448204215615988,
        "seek": 16688,
        "start": 170.56,
        "temperature": 0,
        "text": " The middle point is the control point, and it's like a gravitational pull.",
        "tokens": [
          50548,
          440,
          2808,
          935,
          307,
          264,
          1969,
          935,
          11,
          293,
          309,
          311,
          411,
          257,
          28538,
          2235,
          13,
          50859
        ]
      },
      {
        "avg_logprob": -0.25215405593683693,
        "compression_ratio": 1.568421052631579,
        "end": 185.07999999999998,
        "id": 44,
        "no_speech_prob": 0.0012448204215615988,
        "seek": 16688,
        "start": 176.78,
        "temperature": 0,
        "text": " If I were to pull this point down, the curve would also be pulled down.",
        "tokens": [
          50859,
          759,
          286,
          645,
          281,
          2235,
          341,
          935,
          760,
          11,
          264,
          7605,
          576,
          611,
          312,
          7373,
          760,
          13,
          51274
        ]
      },
      {
        "avg_logprob": -0.25215405593683693,
        "compression_ratio": 1.568421052631579,
        "end": 192.96,
        "id": 45,
        "no_speech_prob": 0.0012448204215615988,
        "seek": 16688,
        "start": 185.07999999999998,
        "temperature": 0,
        "text": " And if you're thinking what I'm thinking, a cubic Bezier curve has two control points.",
        "tokens": [
          51274,
          400,
          498,
          291,
          434,
          1953,
          437,
          286,
          478,
          1953,
          11,
          257,
          28733,
          879,
          33352,
          7605,
          575,
          732,
          1969,
          2793,
          13,
          51668
        ]
      },
      {
        "avg_logprob": -0.25215405593683693,
        "compression_ratio": 1.568421052631579,
        "end": 194.66,
        "id": 46,
        "no_speech_prob": 0.0012448204215615988,
        "seek": 16688,
        "start": 192.96,
        "temperature": 0,
        "text": " Four points in total.",
        "tokens": [
          51668,
          7451,
          2793,
          294,
          3217,
          13,
          51753
        ]
      },
      {
        "avg_logprob": -0.23662834167480468,
        "compression_ratio": 1.6076555023923444,
        "end": 198.06,
        "id": 47,
        "no_speech_prob": 0.0012643521185964346,
        "seek": 19466,
        "start": 194.66,
        "temperature": 0,
        "text": " Both of them controlling the shape of the curve.",
        "tokens": [
          50364,
          6767,
          295,
          552,
          14905,
          264,
          3909,
          295,
          264,
          7605,
          13,
          50534
        ]
      },
      {
        "avg_logprob": -0.23662834167480468,
        "compression_ratio": 1.6076555023923444,
        "end": 203.98,
        "id": 48,
        "no_speech_prob": 0.0012643521185964346,
        "seek": 19466,
        "start": 198.06,
        "temperature": 0,
        "text": " Additionally, a single Bezier curve, which has these four points, can be extended to",
        "tokens": [
          50534,
          19927,
          11,
          257,
          2167,
          879,
          33352,
          7605,
          11,
          597,
          575,
          613,
          1451,
          2793,
          11,
          393,
          312,
          10913,
          281,
          50830
        ]
      },
      {
        "avg_logprob": -0.23662834167480468,
        "compression_ratio": 1.6076555023923444,
        "end": 206.82,
        "id": 49,
        "no_speech_prob": 0.0012643521185964346,
        "seek": 19466,
        "start": 203.98,
        "temperature": 0,
        "text": " what's known as a Bezier spline.",
        "tokens": [
          50830,
          437,
          311,
          2570,
          382,
          257,
          879,
          33352,
          4732,
          533,
          13,
          50972
        ]
      },
      {
        "avg_logprob": -0.23662834167480468,
        "compression_ratio": 1.6076555023923444,
        "end": 215.04,
        "id": 50,
        "no_speech_prob": 0.0012643521185964346,
        "seek": 19466,
        "start": 206.82,
        "temperature": 0,
        "text": " By adding more control points along a sequence, we can create continuous geometry that bends",
        "tokens": [
          50972,
          3146,
          5127,
          544,
          1969,
          2793,
          2051,
          257,
          8310,
          11,
          321,
          393,
          1884,
          10957,
          18426,
          300,
          42990,
          51383
        ]
      },
      {
        "avg_logprob": -0.23662834167480468,
        "compression_ratio": 1.6076555023923444,
        "end": 218.42,
        "id": 51,
        "no_speech_prob": 0.0012643521185964346,
        "seek": 19466,
        "start": 215.04,
        "temperature": 0,
        "text": " according to a sequence of Bezier vertices.",
        "tokens": [
          51383,
          4650,
          281,
          257,
          8310,
          295,
          879,
          33352,
          32053,
          13,
          51552
        ]
      },
      {
        "avg_logprob": -0.23662834167480468,
        "compression_ratio": 1.6076555023923444,
        "end": 220.18,
        "id": 52,
        "no_speech_prob": 0.0012643521185964346,
        "seek": 19466,
        "start": 218.42,
        "temperature": 0,
        "text": " But I'm getting ahead of myself.",
        "tokens": [
          51552,
          583,
          286,
          478,
          1242,
          2286,
          295,
          2059,
          13,
          51640
        ]
      },
      {
        "avg_logprob": -0.3046816835309019,
        "compression_ratio": 1.8877551020408163,
        "end": 229.34,
        "id": 53,
        "no_speech_prob": 0.0048294574953615665,
        "seek": 22018,
        "start": 220.18,
        "temperature": 0,
        "text": " Let's start by exploring the Bezier function in p5.",
        "tokens": [
          50364,
          961,
          311,
          722,
          538,
          12736,
          264,
          879,
          33352,
          2445,
          294,
          280,
          20,
          13,
          50822
        ]
      },
      {
        "avg_logprob": -0.3046816835309019,
        "compression_ratio": 1.8877551020408163,
        "end": 232.94,
        "id": 54,
        "no_speech_prob": 0.0048294574953615665,
        "seek": 22018,
        "start": 229.34,
        "temperature": 0,
        "text": " Before I write the Bezier function, I just want to lay out where I imagine the anchor",
        "tokens": [
          50822,
          4546,
          286,
          2464,
          264,
          879,
          33352,
          2445,
          11,
          286,
          445,
          528,
          281,
          2360,
          484,
          689,
          286,
          3811,
          264,
          18487,
          51002
        ]
      },
      {
        "avg_logprob": -0.3046816835309019,
        "compression_ratio": 1.8877551020408163,
        "end": 234.54000000000002,
        "id": 55,
        "no_speech_prob": 0.0048294574953615665,
        "seek": 22018,
        "start": 232.94,
        "temperature": 0,
        "text": " points and control points to be.",
        "tokens": [
          51002,
          2793,
          293,
          1969,
          2793,
          281,
          312,
          13,
          51082
        ]
      },
      {
        "avg_logprob": -0.3046816835309019,
        "compression_ratio": 1.8877551020408163,
        "end": 236.34,
        "id": 56,
        "no_speech_prob": 0.0048294574953615665,
        "seek": 22018,
        "start": 234.54000000000002,
        "temperature": 0,
        "text": " So I'm going to draw four points.",
        "tokens": [
          51082,
          407,
          286,
          478,
          516,
          281,
          2642,
          1451,
          2793,
          13,
          51172
        ]
      },
      {
        "avg_logprob": -0.3046816835309019,
        "compression_ratio": 1.8877551020408163,
        "end": 238.82,
        "id": 57,
        "no_speech_prob": 0.0048294574953615665,
        "seek": 22018,
        "start": 236.34,
        "temperature": 0,
        "text": " Anchor point, control point, control point, anchor point.",
        "tokens": [
          51172,
          39547,
          284,
          935,
          11,
          1969,
          935,
          11,
          1969,
          935,
          11,
          18487,
          935,
          13,
          51296
        ]
      },
      {
        "avg_logprob": -0.3046816835309019,
        "compression_ratio": 1.8877551020408163,
        "end": 243.64000000000001,
        "id": 58,
        "no_speech_prob": 0.0048294574953615665,
        "seek": 22018,
        "start": 238.82,
        "temperature": 0,
        "text": " The Bezier function itself takes eight arguments, four pairs of xy points.",
        "tokens": [
          51296,
          440,
          879,
          33352,
          2445,
          2564,
          2516,
          3180,
          12869,
          11,
          1451,
          15494,
          295,
          2031,
          88,
          2793,
          13,
          51537
        ]
      },
      {
        "avg_logprob": -0.3046816835309019,
        "compression_ratio": 1.8877551020408163,
        "end": 247.26000000000002,
        "id": 59,
        "no_speech_prob": 0.0048294574953615665,
        "seek": 22018,
        "start": 243.64000000000001,
        "temperature": 0,
        "text": " Anchor control, control, anchor.",
        "tokens": [
          51537,
          39547,
          284,
          1969,
          11,
          1969,
          11,
          18487,
          13,
          51718
        ]
      },
      {
        "avg_logprob": -0.2217767451836811,
        "compression_ratio": 1.724907063197026,
        "end": 254.45999999999998,
        "id": 60,
        "no_speech_prob": 0.000047576195356668904,
        "seek": 24726,
        "start": 248.26,
        "temperature": 0,
        "text": " Interestingly, the Bezier function natively tries to create an enclosed shape with a fill.",
        "tokens": [
          50414,
          30564,
          11,
          264,
          879,
          33352,
          2445,
          8470,
          356,
          9898,
          281,
          1884,
          364,
          42089,
          3909,
          365,
          257,
          2836,
          13,
          50724
        ]
      },
      {
        "avg_logprob": -0.2217767451836811,
        "compression_ratio": 1.724907063197026,
        "end": 255.73999999999998,
        "id": 61,
        "no_speech_prob": 0.000047576195356668904,
        "seek": 24726,
        "start": 254.45999999999998,
        "temperature": 0,
        "text": " Is this what you expected?",
        "tokens": [
          50724,
          1119,
          341,
          437,
          291,
          5176,
          30,
          50788
        ]
      },
      {
        "avg_logprob": -0.2217767451836811,
        "compression_ratio": 1.724907063197026,
        "end": 260.82,
        "id": 62,
        "no_speech_prob": 0.000047576195356668904,
        "seek": 24726,
        "start": 255.73999999999998,
        "temperature": 0,
        "text": " I always expect the curve itself to end up much closer to the control point, but we'll",
        "tokens": [
          50788,
          286,
          1009,
          2066,
          264,
          7605,
          2564,
          281,
          917,
          493,
          709,
          4966,
          281,
          264,
          1969,
          935,
          11,
          457,
          321,
          603,
          51042
        ]
      },
      {
        "avg_logprob": -0.2217767451836811,
        "compression_ratio": 1.724907063197026,
        "end": 264.34,
        "id": 63,
        "no_speech_prob": 0.000047576195356668904,
        "seek": 24726,
        "start": 260.82,
        "temperature": 0,
        "text": " see in a moment when I start to look at the math why it's not coming all the way up to",
        "tokens": [
          51042,
          536,
          294,
          257,
          1623,
          562,
          286,
          722,
          281,
          574,
          412,
          264,
          5221,
          983,
          309,
          311,
          406,
          1348,
          439,
          264,
          636,
          493,
          281,
          51218
        ]
      },
      {
        "avg_logprob": -0.2217767451836811,
        "compression_ratio": 1.724907063197026,
        "end": 265.86,
        "id": 64,
        "no_speech_prob": 0.000047576195356668904,
        "seek": 24726,
        "start": 264.34,
        "temperature": 0,
        "text": " that control point.",
        "tokens": [
          51218,
          300,
          1969,
          935,
          13,
          51294
        ]
      },
      {
        "avg_logprob": -0.2217767451836811,
        "compression_ratio": 1.724907063197026,
        "end": 267.02,
        "id": 65,
        "no_speech_prob": 0.000047576195356668904,
        "seek": 24726,
        "start": 265.86,
        "temperature": 0,
        "text": " So we can see a little better.",
        "tokens": [
          51294,
          407,
          321,
          393,
          536,
          257,
          707,
          1101,
          13,
          51352
        ]
      },
      {
        "avg_logprob": -0.2217767451836811,
        "compression_ratio": 1.724907063197026,
        "end": 271.82,
        "id": 66,
        "no_speech_prob": 0.000047576195356668904,
        "seek": 24726,
        "start": 267.02,
        "temperature": 0,
        "text": " Let me move one with the mouse.",
        "tokens": [
          51352,
          961,
          385,
          1286,
          472,
          365,
          264,
          9719,
          13,
          51592
        ]
      },
      {
        "avg_logprob": -0.2217767451836811,
        "compression_ratio": 1.724907063197026,
        "end": 277.06,
        "id": 67,
        "no_speech_prob": 0.000047576195356668904,
        "seek": 24726,
        "start": 271.82,
        "temperature": 0,
        "text": " Now as I move this control point around, we can see how the Bezier curve itself responds.",
        "tokens": [
          51592,
          823,
          382,
          286,
          1286,
          341,
          1969,
          935,
          926,
          11,
          321,
          393,
          536,
          577,
          264,
          879,
          33352,
          7605,
          2564,
          27331,
          13,
          51854
        ]
      },
      {
        "avg_logprob": -0.18861254867242308,
        "compression_ratio": 1.652542372881356,
        "end": 284.9,
        "id": 68,
        "no_speech_prob": 0.00006814760126871988,
        "seek": 27706,
        "start": 277.06,
        "temperature": 0,
        "text": " Let me add a couple more lines.",
        "tokens": [
          50364,
          961,
          385,
          909,
          257,
          1916,
          544,
          3876,
          13,
          50756
        ]
      },
      {
        "avg_logprob": -0.18861254867242308,
        "compression_ratio": 1.652542372881356,
        "end": 289.06,
        "id": 69,
        "no_speech_prob": 0.00006814760126871988,
        "seek": 27706,
        "start": 284.9,
        "temperature": 0,
        "text": " One thing you might notice now is that these lines are tangent to the curve.",
        "tokens": [
          50756,
          1485,
          551,
          291,
          1062,
          3449,
          586,
          307,
          300,
          613,
          3876,
          366,
          27747,
          281,
          264,
          7605,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.18861254867242308,
        "compression_ratio": 1.652542372881356,
        "end": 292.38,
        "id": 70,
        "no_speech_prob": 0.00006814760126871988,
        "seek": 27706,
        "start": 289.06,
        "temperature": 0,
        "text": " That's an important mathematical principle here in the Bezier curve.",
        "tokens": [
          50964,
          663,
          311,
          364,
          1021,
          18894,
          8665,
          510,
          294,
          264,
          879,
          33352,
          7605,
          13,
          51130
        ]
      },
      {
        "avg_logprob": -0.18861254867242308,
        "compression_ratio": 1.652542372881356,
        "end": 296.3,
        "id": 71,
        "no_speech_prob": 0.00006814760126871988,
        "seek": 27706,
        "start": 292.38,
        "temperature": 0,
        "text": " As an exercise, I might suggest can you make your own Bezier curve tool, but you can move",
        "tokens": [
          51130,
          1018,
          364,
          5380,
          11,
          286,
          1062,
          3402,
          393,
          291,
          652,
          428,
          1065,
          879,
          33352,
          7605,
          2290,
          11,
          457,
          291,
          393,
          1286,
          51326
        ]
      },
      {
        "avg_logprob": -0.18861254867242308,
        "compression_ratio": 1.652542372881356,
        "end": 298.38,
        "id": 72,
        "no_speech_prob": 0.00006814760126871988,
        "seek": 27706,
        "start": 296.3,
        "temperature": 0,
        "text": " all the points around individually.",
        "tokens": [
          51326,
          439,
          264,
          2793,
          926,
          16652,
          13,
          51430
        ]
      },
      {
        "avg_logprob": -0.18861254867242308,
        "compression_ratio": 1.652542372881356,
        "end": 302.82,
        "id": 73,
        "no_speech_prob": 0.00006814760126871988,
        "seek": 27706,
        "start": 298.38,
        "temperature": 0,
        "text": " Now before I move on to the math behind the Bezier curve, I think it's worth exploring",
        "tokens": [
          51430,
          823,
          949,
          286,
          1286,
          322,
          281,
          264,
          5221,
          2261,
          264,
          879,
          33352,
          7605,
          11,
          286,
          519,
          309,
          311,
          3163,
          12736,
          51652
        ]
      },
      {
        "avg_logprob": -0.22978359315453506,
        "compression_ratio": 1.5885416666666667,
        "end": 313.86,
        "id": 74,
        "no_speech_prob": 0.012430866248905659,
        "seek": 30282,
        "start": 303.02,
        "temperature": 0,
        "text": " what the Bezier vertex function does in p5.js as well.",
        "tokens": [
          50374,
          437,
          264,
          879,
          33352,
          28162,
          2445,
          775,
          294,
          280,
          20,
          13,
          25530,
          382,
          731,
          13,
          50916
        ]
      },
      {
        "avg_logprob": -0.22978359315453506,
        "compression_ratio": 1.5885416666666667,
        "end": 319.21999999999997,
        "id": 75,
        "no_speech_prob": 0.012430866248905659,
        "seek": 30282,
        "start": 313.86,
        "temperature": 0,
        "text": " Here we can see with begin shape and end shape, we can set single vertices.",
        "tokens": [
          50916,
          1692,
          321,
          393,
          536,
          365,
          1841,
          3909,
          293,
          917,
          3909,
          11,
          321,
          393,
          992,
          2167,
          32053,
          13,
          51184
        ]
      },
      {
        "avg_logprob": -0.22978359315453506,
        "compression_ratio": 1.5885416666666667,
        "end": 325.58,
        "id": 76,
        "no_speech_prob": 0.012430866248905659,
        "seek": 30282,
        "start": 319.21999999999997,
        "temperature": 0,
        "text": " So if there are only two vertices, then I have a line that connects those two vertices.",
        "tokens": [
          51184,
          407,
          498,
          456,
          366,
          787,
          732,
          32053,
          11,
          550,
          286,
          362,
          257,
          1622,
          300,
          16967,
          729,
          732,
          32053,
          13,
          51502
        ]
      },
      {
        "avg_logprob": -0.22978359315453506,
        "compression_ratio": 1.5885416666666667,
        "end": 330.03999999999996,
        "id": 77,
        "no_speech_prob": 0.012430866248905659,
        "seek": 30282,
        "start": 325.58,
        "temperature": 0,
        "text": " A Bezier vertex, and it's giving me an error because I haven't finished here, not only",
        "tokens": [
          51502,
          316,
          879,
          33352,
          28162,
          11,
          293,
          309,
          311,
          2902,
          385,
          364,
          6713,
          570,
          286,
          2378,
          380,
          4335,
          510,
          11,
          406,
          787,
          51725
        ]
      },
      {
        "avg_logprob": -0.2378770164821459,
        "compression_ratio": 1.7477477477477477,
        "end": 335.56,
        "id": 78,
        "no_speech_prob": 0.08386565744876862,
        "seek": 33004,
        "start": 330.04,
        "temperature": 0,
        "text": " sets the next point that you're defining along the way of a shape, but two control",
        "tokens": [
          50364,
          6352,
          264,
          958,
          935,
          300,
          291,
          434,
          17827,
          2051,
          264,
          636,
          295,
          257,
          3909,
          11,
          457,
          732,
          1969,
          50640
        ]
      },
      {
        "avg_logprob": -0.2378770164821459,
        "compression_ratio": 1.7477477477477477,
        "end": 341.20000000000005,
        "id": 79,
        "no_speech_prob": 0.08386565744876862,
        "seek": 33004,
        "start": 335.56,
        "temperature": 0,
        "text": " points along the way that determine how you curve between this first vertex, which has",
        "tokens": [
          50640,
          2793,
          2051,
          264,
          636,
          300,
          6997,
          577,
          291,
          7605,
          1296,
          341,
          700,
          28162,
          11,
          597,
          575,
          50922
        ]
      },
      {
        "avg_logprob": -0.2378770164821459,
        "compression_ratio": 1.7477477477477477,
        "end": 346.72,
        "id": 80,
        "no_speech_prob": 0.08386565744876862,
        "seek": 33004,
        "start": 341.20000000000005,
        "temperature": 0,
        "text": " to be specified with the plain vertex function, and the next vertex, which is the last two",
        "tokens": [
          50922,
          281,
          312,
          22206,
          365,
          264,
          11121,
          28162,
          2445,
          11,
          293,
          264,
          958,
          28162,
          11,
          597,
          307,
          264,
          1036,
          732,
          51198
        ]
      },
      {
        "avg_logprob": -0.2378770164821459,
        "compression_ratio": 1.7477477477477477,
        "end": 350.84000000000003,
        "id": 81,
        "no_speech_prob": 0.08386565744876862,
        "seek": 33004,
        "start": 346.72,
        "temperature": 0,
        "text": " arguments of the Bezier vertex function.",
        "tokens": [
          51198,
          12869,
          295,
          264,
          879,
          33352,
          28162,
          2445,
          13,
          51404
        ]
      },
      {
        "avg_logprob": -0.2378770164821459,
        "compression_ratio": 1.7477477477477477,
        "end": 357.20000000000005,
        "id": 82,
        "no_speech_prob": 0.08386565744876862,
        "seek": 33004,
        "start": 350.84000000000003,
        "temperature": 0,
        "text": " Now you see I have precisely the same curve that I had before, but instead of the full",
        "tokens": [
          51404,
          823,
          291,
          536,
          286,
          362,
          13402,
          264,
          912,
          7605,
          300,
          286,
          632,
          949,
          11,
          457,
          2602,
          295,
          264,
          1577,
          51722
        ]
      },
      {
        "avg_logprob": -0.23579840374808025,
        "compression_ratio": 1.721189591078067,
        "end": 362.15999999999997,
        "id": 83,
        "no_speech_prob": 0.18471288681030273,
        "seek": 35720,
        "start": 357.2,
        "temperature": 0,
        "text": " Bezier function, I set the first anchor point with vertex, and then the next two control",
        "tokens": [
          50364,
          879,
          33352,
          2445,
          11,
          286,
          992,
          264,
          700,
          18487,
          935,
          365,
          28162,
          11,
          293,
          550,
          264,
          958,
          732,
          1969,
          50612
        ]
      },
      {
        "avg_logprob": -0.23579840374808025,
        "compression_ratio": 1.721189591078067,
        "end": 365.08,
        "id": 84,
        "no_speech_prob": 0.18471288681030273,
        "seek": 35720,
        "start": 362.15999999999997,
        "temperature": 0,
        "text": " points, and the next anchor point with Bezier vertex.",
        "tokens": [
          50612,
          2793,
          11,
          293,
          264,
          958,
          18487,
          935,
          365,
          879,
          33352,
          28162,
          13,
          50758
        ]
      },
      {
        "avg_logprob": -0.23579840374808025,
        "compression_ratio": 1.721189591078067,
        "end": 366.56,
        "id": 85,
        "no_speech_prob": 0.18471288681030273,
        "seek": 35720,
        "start": 365.08,
        "temperature": 0,
        "text": " What does this allow me to do?",
        "tokens": [
          50758,
          708,
          775,
          341,
          2089,
          385,
          281,
          360,
          30,
          50832
        ]
      },
      {
        "avg_logprob": -0.23579840374808025,
        "compression_ratio": 1.721189591078067,
        "end": 373.64,
        "id": 86,
        "no_speech_prob": 0.18471288681030273,
        "seek": 35720,
        "start": 366.56,
        "temperature": 0,
        "text": " It allows me to continue.",
        "tokens": [
          50832,
          467,
          4045,
          385,
          281,
          2354,
          13,
          51186
        ]
      },
      {
        "avg_logprob": -0.23579840374808025,
        "compression_ratio": 1.721189591078067,
        "end": 377.68,
        "id": 87,
        "no_speech_prob": 0.18471288681030273,
        "seek": 35720,
        "start": 373.64,
        "temperature": 0,
        "text": " This is how I can start to create more elaborate shapes like the one that you're seeing here,",
        "tokens": [
          51186,
          639,
          307,
          577,
          286,
          393,
          722,
          281,
          1884,
          544,
          20945,
          10854,
          411,
          264,
          472,
          300,
          291,
          434,
          2577,
          510,
          11,
          51388
        ]
      },
      {
        "avg_logprob": -0.23579840374808025,
        "compression_ratio": 1.721189591078067,
        "end": 380.71999999999997,
        "id": 88,
        "no_speech_prob": 0.18471288681030273,
        "seek": 35720,
        "start": 377.68,
        "temperature": 0,
        "text": " by stringing together multiple Bezier vertices.",
        "tokens": [
          51388,
          538,
          6798,
          278,
          1214,
          3866,
          879,
          33352,
          32053,
          13,
          51540
        ]
      },
      {
        "avg_logprob": -0.23579840374808025,
        "compression_ratio": 1.721189591078067,
        "end": 382.56,
        "id": 89,
        "no_speech_prob": 0.18471288681030273,
        "seek": 35720,
        "start": 380.71999999999997,
        "temperature": 0,
        "text": " And you can actually go quite far with this.",
        "tokens": [
          51540,
          400,
          291,
          393,
          767,
          352,
          1596,
          1400,
          365,
          341,
          13,
          51632
        ]
      },
      {
        "avg_logprob": -0.23579840374808025,
        "compression_ratio": 1.721189591078067,
        "end": 386.48,
        "id": 90,
        "no_speech_prob": 0.18471288681030273,
        "seek": 35720,
        "start": 382.56,
        "temperature": 0,
        "text": " There's also a quadratic vertex, which just involves a single control point.",
        "tokens": [
          51632,
          821,
          311,
          611,
          257,
          37262,
          28162,
          11,
          597,
          445,
          11626,
          257,
          2167,
          1969,
          935,
          13,
          51828
        ]
      },
      {
        "avg_logprob": -0.21373685201009116,
        "compression_ratio": 1.75,
        "end": 390.84000000000003,
        "id": 91,
        "no_speech_prob": 0.00005649705053656362,
        "seek": 38648,
        "start": 386.48,
        "temperature": 0,
        "text": " You can have regular vertices, and Bezier vertices, and quadratic vertices to create",
        "tokens": [
          50364,
          509,
          393,
          362,
          3890,
          32053,
          11,
          293,
          879,
          33352,
          32053,
          11,
          293,
          37262,
          32053,
          281,
          1884,
          50582
        ]
      },
      {
        "avg_logprob": -0.21373685201009116,
        "compression_ratio": 1.75,
        "end": 393.12,
        "id": 92,
        "no_speech_prob": 0.00005649705053656362,
        "seek": 38648,
        "start": 390.84000000000003,
        "temperature": 0,
        "text": " all sorts of possibilities.",
        "tokens": [
          50582,
          439,
          7527,
          295,
          12178,
          13,
          50696
        ]
      },
      {
        "avg_logprob": -0.21373685201009116,
        "compression_ratio": 1.75,
        "end": 398.92,
        "id": 93,
        "no_speech_prob": 0.00005649705053656362,
        "seek": 38648,
        "start": 393.12,
        "temperature": 0,
        "text": " And remember, with a custom shape like this, you can also include a fill.",
        "tokens": [
          50696,
          400,
          1604,
          11,
          365,
          257,
          2375,
          3909,
          411,
          341,
          11,
          291,
          393,
          611,
          4090,
          257,
          2836,
          13,
          50986
        ]
      },
      {
        "avg_logprob": -0.21373685201009116,
        "compression_ratio": 1.75,
        "end": 401.24,
        "id": 94,
        "no_speech_prob": 0.00005649705053656362,
        "seek": 38648,
        "start": 398.92,
        "temperature": 0,
        "text": " This alone should give you plenty to explore.",
        "tokens": [
          50986,
          639,
          3312,
          820,
          976,
          291,
          7140,
          281,
          6839,
          13,
          51102
        ]
      },
      {
        "avg_logprob": -0.21373685201009116,
        "compression_ratio": 1.75,
        "end": 405.6,
        "id": 95,
        "no_speech_prob": 0.00005649705053656362,
        "seek": 38648,
        "start": 401.24,
        "temperature": 0,
        "text": " Just having the Bezier function and the Bezier vertex function right there in p5 opens up",
        "tokens": [
          51102,
          1449,
          1419,
          264,
          879,
          33352,
          2445,
          293,
          264,
          879,
          33352,
          28162,
          2445,
          558,
          456,
          294,
          280,
          20,
          9870,
          493,
          51320
        ]
      },
      {
        "avg_logprob": -0.21373685201009116,
        "compression_ratio": 1.75,
        "end": 407.12,
        "id": 96,
        "no_speech_prob": 0.00005649705053656362,
        "seek": 38648,
        "start": 405.6,
        "temperature": 0,
        "text": " so many visual possibilities.",
        "tokens": [
          51320,
          370,
          867,
          5056,
          12178,
          13,
          51396
        ]
      },
      {
        "avg_logprob": -0.21373685201009116,
        "compression_ratio": 1.75,
        "end": 411.56,
        "id": 97,
        "no_speech_prob": 0.00005649705053656362,
        "seek": 38648,
        "start": 407.12,
        "temperature": 0,
        "text": " I recently did a coding challenge about a self-avoiding walk, which connects a whole",
        "tokens": [
          51396,
          286,
          3938,
          630,
          257,
          17720,
          3430,
          466,
          257,
          2698,
          12,
          25713,
          2819,
          1792,
          11,
          597,
          16967,
          257,
          1379,
          51618
        ]
      },
      {
        "avg_logprob": -0.21373685201009116,
        "compression_ratio": 1.75,
        "end": 416,
        "id": 98,
        "no_speech_prob": 0.00005649705053656362,
        "seek": 38648,
        "start": 411.56,
        "temperature": 0,
        "text": " set of points with line segments, and just adding the variation of connecting all these",
        "tokens": [
          51618,
          992,
          295,
          2793,
          365,
          1622,
          19904,
          11,
          293,
          445,
          5127,
          264,
          12990,
          295,
          11015,
          439,
          613,
          51840
        ]
      },
      {
        "avg_logprob": -0.21251438782278415,
        "compression_ratio": 1.6492537313432836,
        "end": 422.22,
        "id": 99,
        "no_speech_prob": 0.001501100487075746,
        "seek": 41600,
        "start": 416,
        "temperature": 0,
        "text": " points with Bezier vertices creates a very different visual quality to the output.",
        "tokens": [
          50364,
          2793,
          365,
          879,
          33352,
          32053,
          7829,
          257,
          588,
          819,
          5056,
          3125,
          281,
          264,
          5598,
          13,
          50675
        ]
      },
      {
        "avg_logprob": -0.21251438782278415,
        "compression_ratio": 1.6492537313432836,
        "end": 427.46,
        "id": 100,
        "no_speech_prob": 0.001501100487075746,
        "seek": 41600,
        "start": 422.22,
        "temperature": 0,
        "text": " So maybe just find a sketch where you put a lot of lines and vertices in, and try using",
        "tokens": [
          50675,
          407,
          1310,
          445,
          915,
          257,
          12325,
          689,
          291,
          829,
          257,
          688,
          295,
          3876,
          293,
          32053,
          294,
          11,
          293,
          853,
          1228,
          50937
        ]
      },
      {
        "avg_logprob": -0.21251438782278415,
        "compression_ratio": 1.6492537313432836,
        "end": 428.92,
        "id": 101,
        "no_speech_prob": 0.001501100487075746,
        "seek": 41600,
        "start": 427.46,
        "temperature": 0,
        "text": " Bezier curves instead.",
        "tokens": [
          50937,
          879,
          33352,
          19490,
          2602,
          13,
          51010
        ]
      },
      {
        "avg_logprob": -0.21251438782278415,
        "compression_ratio": 1.6492537313432836,
        "end": 430.44,
        "id": 102,
        "no_speech_prob": 0.001501100487075746,
        "seek": 41600,
        "start": 428.92,
        "temperature": 0,
        "text": " But we are limited here.",
        "tokens": [
          51010,
          583,
          321,
          366,
          5567,
          510,
          13,
          51086
        ]
      },
      {
        "avg_logprob": -0.21251438782278415,
        "compression_ratio": 1.6492537313432836,
        "end": 434.8,
        "id": 103,
        "no_speech_prob": 0.001501100487075746,
        "seek": 41600,
        "start": 430.44,
        "temperature": 0,
        "text": " Because we're using the Bezier function in p5 directly, we don't have access to all the",
        "tokens": [
          51086,
          1436,
          321,
          434,
          1228,
          264,
          879,
          33352,
          2445,
          294,
          280,
          20,
          3838,
          11,
          321,
          500,
          380,
          362,
          2105,
          281,
          439,
          264,
          51304
        ]
      },
      {
        "avg_logprob": -0.21251438782278415,
        "compression_ratio": 1.6492537313432836,
        "end": 436.24,
        "id": 104,
        "no_speech_prob": 0.001501100487075746,
        "seek": 41600,
        "start": 434.8,
        "temperature": 0,
        "text": " points along the way.",
        "tokens": [
          51304,
          2793,
          2051,
          264,
          636,
          13,
          51376
        ]
      },
      {
        "avg_logprob": -0.21251438782278415,
        "compression_ratio": 1.6492537313432836,
        "end": 441.42,
        "id": 105,
        "no_speech_prob": 0.001501100487075746,
        "seek": 41600,
        "start": 436.24,
        "temperature": 0,
        "text": " On the Wikipedia page, you might have noticed a diagram of the quadratic Bezier curve visualized",
        "tokens": [
          51376,
          1282,
          264,
          28999,
          3028,
          11,
          291,
          1062,
          362,
          5694,
          257,
          10686,
          295,
          264,
          37262,
          879,
          33352,
          7605,
          5056,
          1602,
          51635
        ]
      },
      {
        "avg_logprob": -0.21251438782278415,
        "compression_ratio": 1.6492537313432836,
        "end": 443,
        "id": 106,
        "no_speech_prob": 0.001501100487075746,
        "seek": 41600,
        "start": 441.42,
        "temperature": 0,
        "text": " with string art.",
        "tokens": [
          51635,
          365,
          6798,
          1523,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.3082918439592634,
        "compression_ratio": 1.5488372093023255,
        "end": 448.08,
        "id": 107,
        "no_speech_prob": 0.0027572722174227238,
        "seek": 44300,
        "start": 443,
        "temperature": 0,
        "text": " We can do this with something really special, another function, a bonus that you're getting",
        "tokens": [
          50364,
          492,
          393,
          360,
          341,
          365,
          746,
          534,
          2121,
          11,
          1071,
          2445,
          11,
          257,
          10882,
          300,
          291,
          434,
          1242,
          50618
        ]
      },
      {
        "avg_logprob": -0.3082918439592634,
        "compression_ratio": 1.5488372093023255,
        "end": 451.28,
        "id": 108,
        "no_speech_prob": 0.0027572722174227238,
        "seek": 44300,
        "start": 448.08,
        "temperature": 0,
        "text": " in this video for free, the lerp function.",
        "tokens": [
          50618,
          294,
          341,
          960,
          337,
          1737,
          11,
          264,
          32068,
          79,
          2445,
          13,
          50778
        ]
      },
      {
        "avg_logprob": -0.3082918439592634,
        "compression_ratio": 1.5488372093023255,
        "end": 458.16,
        "id": 109,
        "no_speech_prob": 0.0027572722174227238,
        "seek": 44300,
        "start": 451.28,
        "temperature": 0,
        "text": " Now how in the world is the Bezier function related to the lerp function?",
        "tokens": [
          50778,
          823,
          577,
          294,
          264,
          1002,
          307,
          264,
          879,
          33352,
          2445,
          4077,
          281,
          264,
          32068,
          79,
          2445,
          30,
          51122
        ]
      },
      {
        "avg_logprob": -0.3082918439592634,
        "compression_ratio": 1.5488372093023255,
        "end": 463.76,
        "id": 110,
        "no_speech_prob": 0.0027572722174227238,
        "seek": 44300,
        "start": 458.16,
        "temperature": 0,
        "text": " Let's go back to a simple linear Bezier curve, or just a line between two points.",
        "tokens": [
          51122,
          961,
          311,
          352,
          646,
          281,
          257,
          2199,
          8213,
          879,
          33352,
          7605,
          11,
          420,
          445,
          257,
          1622,
          1296,
          732,
          2793,
          13,
          51402
        ]
      },
      {
        "avg_logprob": -0.3082918439592634,
        "compression_ratio": 1.5488372093023255,
        "end": 469,
        "id": 111,
        "no_speech_prob": 0.0027572722174227238,
        "seek": 44300,
        "start": 463.76,
        "temperature": 0,
        "text": " I'm going to call this x0 and this one x1.",
        "tokens": [
          51402,
          286,
          478,
          516,
          281,
          818,
          341,
          2031,
          15,
          293,
          341,
          472,
          2031,
          16,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.21509170532226562,
        "compression_ratio": 1.6714285714285715,
        "end": 479.12,
        "id": 112,
        "no_speech_prob": 0.00010720712452894077,
        "seek": 47300,
        "start": 473.76,
        "temperature": 0,
        "text": " The lerp function takes two values and returns back to you a value in between those two values",
        "tokens": [
          50402,
          440,
          32068,
          79,
          2445,
          2516,
          732,
          4190,
          293,
          11247,
          646,
          281,
          291,
          257,
          2158,
          294,
          1296,
          729,
          732,
          4190,
          50670
        ]
      },
      {
        "avg_logprob": -0.21509170532226562,
        "compression_ratio": 1.6714285714285715,
        "end": 484.46,
        "id": 113,
        "no_speech_prob": 0.00010720712452894077,
        "seek": 47300,
        "start": 479.12,
        "temperature": 0,
        "text": " some percentage along the way, between 0 and 100%.",
        "tokens": [
          50670,
          512,
          9668,
          2051,
          264,
          636,
          11,
          1296,
          1958,
          293,
          2319,
          6856,
          50937
        ]
      },
      {
        "avg_logprob": -0.21509170532226562,
        "compression_ratio": 1.6714285714285715,
        "end": 489.82,
        "id": 114,
        "no_speech_prob": 0.00010720712452894077,
        "seek": 47300,
        "start": 484.46,
        "temperature": 0,
        "text": " In this case, 0.5 would give me the value 50% of the way there.",
        "tokens": [
          50937,
          682,
          341,
          1389,
          11,
          1958,
          13,
          20,
          576,
          976,
          385,
          264,
          2158,
          2625,
          4,
          295,
          264,
          636,
          456,
          13,
          51205
        ]
      },
      {
        "avg_logprob": -0.21509170532226562,
        "compression_ratio": 1.6714285714285715,
        "end": 493.08,
        "id": 115,
        "no_speech_prob": 0.00010720712452894077,
        "seek": 47300,
        "start": 489.82,
        "temperature": 0,
        "text": " This value is often represented with the letter t.",
        "tokens": [
          51205,
          639,
          2158,
          307,
          2049,
          10379,
          365,
          264,
          5063,
          256,
          13,
          51368
        ]
      },
      {
        "avg_logprob": -0.21509170532226562,
        "compression_ratio": 1.6714285714285715,
        "end": 498.24,
        "id": 116,
        "no_speech_prob": 0.00010720712452894077,
        "seek": 47300,
        "start": 493.08,
        "temperature": 0,
        "text": " I think of it as like the amount of time to get from this point all the way to this point.",
        "tokens": [
          51368,
          286,
          519,
          295,
          309,
          382,
          411,
          264,
          2372,
          295,
          565,
          281,
          483,
          490,
          341,
          935,
          439,
          264,
          636,
          281,
          341,
          935,
          13,
          51626
        ]
      },
      {
        "avg_logprob": -0.21349394056532117,
        "compression_ratio": 1.576271186440678,
        "end": 503.96000000000004,
        "id": 117,
        "no_speech_prob": 0.0000961016776273027,
        "seek": 49824,
        "start": 498.24,
        "temperature": 0,
        "text": " The math for doing this is quite simple and intuitive.",
        "tokens": [
          50364,
          440,
          5221,
          337,
          884,
          341,
          307,
          1596,
          2199,
          293,
          21769,
          13,
          50650
        ]
      },
      {
        "avg_logprob": -0.21349394056532117,
        "compression_ratio": 1.576271186440678,
        "end": 508.16,
        "id": 118,
        "no_speech_prob": 0.0000961016776273027,
        "seek": 49824,
        "start": 503.96000000000004,
        "temperature": 0,
        "text": " Let's imagine t is equal to 0.2.",
        "tokens": [
          50650,
          961,
          311,
          3811,
          256,
          307,
          2681,
          281,
          1958,
          13,
          17,
          13,
          50860
        ]
      },
      {
        "avg_logprob": -0.21349394056532117,
        "compression_ratio": 1.576271186440678,
        "end": 514.34,
        "id": 119,
        "no_speech_prob": 0.0000961016776273027,
        "seek": 49824,
        "start": 508.16,
        "temperature": 0,
        "text": " Well we want to start at this point and then we want to go about 20% of the way of the",
        "tokens": [
          50860,
          1042,
          321,
          528,
          281,
          722,
          412,
          341,
          935,
          293,
          550,
          321,
          528,
          281,
          352,
          466,
          945,
          4,
          295,
          264,
          636,
          295,
          264,
          51169
        ]
      },
      {
        "avg_logprob": -0.21349394056532117,
        "compression_ratio": 1.576271186440678,
        "end": 516.88,
        "id": 120,
        "no_speech_prob": 0.0000961016776273027,
        "seek": 49824,
        "start": 514.34,
        "temperature": 0,
        "text": " distance between x0 and x1.",
        "tokens": [
          51169,
          4560,
          1296,
          2031,
          15,
          293,
          2031,
          16,
          13,
          51296
        ]
      },
      {
        "avg_logprob": -0.21349394056532117,
        "compression_ratio": 1.576271186440678,
        "end": 526.88,
        "id": 121,
        "no_speech_prob": 0.0000961016776273027,
        "seek": 49824,
        "start": 516.88,
        "temperature": 0,
        "text": " So start at x0 and add 20% of the distance, which is x1 minus x0, times 0.2.",
        "tokens": [
          51296,
          407,
          722,
          412,
          2031,
          15,
          293,
          909,
          945,
          4,
          295,
          264,
          4560,
          11,
          597,
          307,
          2031,
          16,
          3175,
          2031,
          15,
          11,
          1413,
          1958,
          13,
          17,
          13,
          51796
        ]
      },
      {
        "avg_logprob": -0.2970712129459825,
        "compression_ratio": 1.4910714285714286,
        "end": 528.7,
        "id": 122,
        "no_speech_prob": 0.005301731172949076,
        "seek": 52688,
        "start": 526.88,
        "temperature": 0,
        "text": " Another interpolation.",
        "tokens": [
          50364,
          3996,
          44902,
          399,
          13,
          50455
        ]
      },
      {
        "avg_logprob": -0.2970712129459825,
        "compression_ratio": 1.4910714285714286,
        "end": 531.88,
        "id": 123,
        "no_speech_prob": 0.005301731172949076,
        "seek": 52688,
        "start": 528.7,
        "temperature": 0,
        "text": " Coming back to the Wikipedia page, you'll notice something interesting.",
        "tokens": [
          50455,
          12473,
          646,
          281,
          264,
          28999,
          3028,
          11,
          291,
          603,
          3449,
          746,
          1880,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.2970712129459825,
        "compression_ratio": 1.4910714285714286,
        "end": 536.04,
        "id": 124,
        "no_speech_prob": 0.005301731172949076,
        "seek": 52688,
        "start": 531.88,
        "temperature": 0,
        "text": " Look at that formula right there under linear Bezier curve.",
        "tokens": [
          50614,
          2053,
          412,
          300,
          8513,
          558,
          456,
          833,
          8213,
          879,
          33352,
          7605,
          13,
          50822
        ]
      },
      {
        "avg_logprob": -0.2970712129459825,
        "compression_ratio": 1.4910714285714286,
        "end": 538.1,
        "id": 125,
        "no_speech_prob": 0.005301731172949076,
        "seek": 52688,
        "start": 536.04,
        "temperature": 0,
        "text": " Exactly this formula.",
        "tokens": [
          50822,
          7587,
          341,
          8513,
          13,
          50925
        ]
      },
      {
        "avg_logprob": -0.2970712129459825,
        "compression_ratio": 1.4910714285714286,
        "end": 545.48,
        "id": 126,
        "no_speech_prob": 0.005301731172949076,
        "seek": 52688,
        "start": 538.1,
        "temperature": 0,
        "text": " Let's implement this in a code example.",
        "tokens": [
          50925,
          961,
          311,
          4445,
          341,
          294,
          257,
          3089,
          1365,
          13,
          51294
        ]
      },
      {
        "avg_logprob": -0.2970712129459825,
        "compression_ratio": 1.4910714285714286,
        "end": 547,
        "id": 127,
        "no_speech_prob": 0.005301731172949076,
        "seek": 52688,
        "start": 545.48,
        "temperature": 0,
        "text": " So here we have our straight line.",
        "tokens": [
          51294,
          407,
          510,
          321,
          362,
          527,
          2997,
          1622,
          13,
          51370
        ]
      },
      {
        "avg_logprob": -0.2970712129459825,
        "compression_ratio": 1.4910714285714286,
        "end": 553.36,
        "id": 128,
        "no_speech_prob": 0.005301731172949076,
        "seek": 52688,
        "start": 547,
        "temperature": 0,
        "text": " I'm using the createVector function to pair an x and y value in a single variable.",
        "tokens": [
          51370,
          286,
          478,
          1228,
          264,
          1884,
          53,
          20814,
          2445,
          281,
          6119,
          364,
          2031,
          293,
          288,
          2158,
          294,
          257,
          2167,
          7006,
          13,
          51688
        ]
      },
      {
        "avg_logprob": -0.1977731204423748,
        "compression_ratio": 1.631578947368421,
        "end": 557.72,
        "id": 129,
        "no_speech_prob": 0.0024725208058953285,
        "seek": 55336,
        "start": 553.36,
        "temperature": 0,
        "text": " Now there's a lot more to vectors than that, but for our purposes here, I just don't want",
        "tokens": [
          50364,
          823,
          456,
          311,
          257,
          688,
          544,
          281,
          18875,
          813,
          300,
          11,
          457,
          337,
          527,
          9932,
          510,
          11,
          286,
          445,
          500,
          380,
          528,
          50582
        ]
      },
      {
        "avg_logprob": -0.1977731204423748,
        "compression_ratio": 1.631578947368421,
        "end": 564.4,
        "id": 130,
        "no_speech_prob": 0.0024725208058953285,
        "seek": 55336,
        "start": 557.72,
        "temperature": 0,
        "text": " to have a lot of separate xy variables, so I've got p0.x, p0.y, p1.x, and p1.y.",
        "tokens": [
          50582,
          281,
          362,
          257,
          688,
          295,
          4994,
          2031,
          88,
          9102,
          11,
          370,
          286,
          600,
          658,
          280,
          15,
          13,
          87,
          11,
          280,
          15,
          13,
          88,
          11,
          280,
          16,
          13,
          87,
          11,
          293,
          280,
          16,
          13,
          88,
          13,
          50916
        ]
      },
      {
        "avg_logprob": -0.1977731204423748,
        "compression_ratio": 1.631578947368421,
        "end": 568.92,
        "id": 131,
        "no_speech_prob": 0.0024725208058953285,
        "seek": 55336,
        "start": 564.4,
        "temperature": 0,
        "text": " And of course I'm just using the line function to draw that line, but what if instead of",
        "tokens": [
          50916,
          400,
          295,
          1164,
          286,
          478,
          445,
          1228,
          264,
          1622,
          2445,
          281,
          2642,
          300,
          1622,
          11,
          457,
          437,
          498,
          2602,
          295,
          51142
        ]
      },
      {
        "avg_logprob": -0.1977731204423748,
        "compression_ratio": 1.631578947368421,
        "end": 574.52,
        "id": 132,
        "no_speech_prob": 0.0024725208058953285,
        "seek": 55336,
        "start": 568.92,
        "temperature": 0,
        "text": " using line, I wanted to draw the line myself as many different points along the way between",
        "tokens": [
          51142,
          1228,
          1622,
          11,
          286,
          1415,
          281,
          2642,
          264,
          1622,
          2059,
          382,
          867,
          819,
          2793,
          2051,
          264,
          636,
          1296,
          51422
        ]
      },
      {
        "avg_logprob": -0.1977731204423748,
        "compression_ratio": 1.631578947368421,
        "end": 575.92,
        "id": 133,
        "no_speech_prob": 0.0024725208058953285,
        "seek": 55336,
        "start": 574.52,
        "temperature": 0,
        "text": " those two anchor points.",
        "tokens": [
          51422,
          729,
          732,
          18487,
          2793,
          13,
          51492
        ]
      },
      {
        "avg_logprob": -0.1977731204423748,
        "compression_ratio": 1.631578947368421,
        "end": 579.64,
        "id": 134,
        "no_speech_prob": 0.0024725208058953285,
        "seek": 55336,
        "start": 575.92,
        "temperature": 0,
        "text": " I'll start with a for loop.",
        "tokens": [
          51492,
          286,
          603,
          722,
          365,
          257,
          337,
          6367,
          13,
          51678
        ]
      },
      {
        "avg_logprob": -0.2620276859828404,
        "compression_ratio": 1.4390243902439024,
        "end": 585.72,
        "id": 135,
        "no_speech_prob": 0.00026529980823397636,
        "seek": 57964,
        "start": 579.64,
        "temperature": 0,
        "text": " I'm choosing to loop t, starting at 0 all the way up to 100% or 1.",
        "tokens": [
          50364,
          286,
          478,
          10875,
          281,
          6367,
          256,
          11,
          2891,
          412,
          1958,
          439,
          264,
          636,
          493,
          281,
          2319,
          4,
          420,
          502,
          13,
          50668
        ]
      },
      {
        "avg_logprob": -0.2620276859828404,
        "compression_ratio": 1.4390243902439024,
        "end": 593.68,
        "id": 136,
        "no_speech_prob": 0.00026529980823397636,
        "seek": 57964,
        "start": 585.72,
        "temperature": 0,
        "text": " Then let me just apply this formula.",
        "tokens": [
          50668,
          1396,
          718,
          385,
          445,
          3079,
          341,
          8513,
          13,
          51066
        ]
      },
      {
        "avg_logprob": -0.2620276859828404,
        "compression_ratio": 1.4390243902439024,
        "end": 594.68,
        "id": 137,
        "no_speech_prob": 0.00026529980823397636,
        "seek": 57964,
        "start": 593.68,
        "temperature": 0,
        "text": " And look at that.",
        "tokens": [
          51066,
          400,
          574,
          412,
          300,
          13,
          51116
        ]
      },
      {
        "avg_logprob": -0.2620276859828404,
        "compression_ratio": 1.4390243902439024,
        "end": 600.88,
        "id": 138,
        "no_speech_prob": 0.00026529980823397636,
        "seek": 57964,
        "start": 594.68,
        "temperature": 0,
        "text": " There's that beautiful formula that I'm getting all of the points each an additional 10% along",
        "tokens": [
          51116,
          821,
          311,
          300,
          2238,
          8513,
          300,
          286,
          478,
          1242,
          439,
          295,
          264,
          2793,
          1184,
          364,
          4497,
          1266,
          4,
          2051,
          51426
        ]
      },
      {
        "avg_logprob": -0.2620276859828404,
        "compression_ratio": 1.4390243902439024,
        "end": 602.92,
        "id": 139,
        "no_speech_prob": 0.00026529980823397636,
        "seek": 57964,
        "start": 600.88,
        "temperature": 0,
        "text": " the way to the end.",
        "tokens": [
          51426,
          264,
          636,
          281,
          264,
          917,
          13,
          51528
        ]
      },
      {
        "avg_logprob": -0.2661143649708141,
        "compression_ratio": 1.5736040609137056,
        "end": 610.4,
        "id": 140,
        "no_speech_prob": 0.0747634544968605,
        "seek": 60292,
        "start": 602.92,
        "temperature": 0,
        "text": " So by doing beginShape and endShape and changing it to vertex, I have my line again.",
        "tokens": [
          50364,
          407,
          538,
          884,
          1841,
          23429,
          494,
          293,
          917,
          23429,
          494,
          293,
          4473,
          309,
          281,
          28162,
          11,
          286,
          362,
          452,
          1622,
          797,
          13,
          50738
        ]
      },
      {
        "avg_logprob": -0.2661143649708141,
        "compression_ratio": 1.5736040609137056,
        "end": 617.5799999999999,
        "id": 141,
        "no_speech_prob": 0.0747634544968605,
        "seek": 60292,
        "start": 610.4,
        "temperature": 0,
        "text": " Now while I've put in here the raw math for linear interpolation, p5 has the lerp function.",
        "tokens": [
          50738,
          823,
          1339,
          286,
          600,
          829,
          294,
          510,
          264,
          8936,
          5221,
          337,
          8213,
          44902,
          399,
          11,
          280,
          20,
          575,
          264,
          32068,
          79,
          2445,
          13,
          51097
        ]
      },
      {
        "avg_logprob": -0.2661143649708141,
        "compression_ratio": 1.5736040609137056,
        "end": 622.7199999999999,
        "id": 142,
        "no_speech_prob": 0.0747634544968605,
        "seek": 60292,
        "start": 617.5799999999999,
        "temperature": 0,
        "text": " So I believe I could get my code to be easier to read without the raw math there with just",
        "tokens": [
          51097,
          407,
          286,
          1697,
          286,
          727,
          483,
          452,
          3089,
          281,
          312,
          3571,
          281,
          1401,
          1553,
          264,
          8936,
          5221,
          456,
          365,
          445,
          51354
        ]
      },
      {
        "avg_logprob": -0.2661143649708141,
        "compression_ratio": 1.5736040609137056,
        "end": 629.5999999999999,
        "id": 143,
        "no_speech_prob": 0.0747634544968605,
        "seek": 60292,
        "start": 622.7199999999999,
        "temperature": 0,
        "text": " the lerp function itself.",
        "tokens": [
          51354,
          264,
          32068,
          79,
          2445,
          2564,
          13,
          51698
        ]
      },
      {
        "avg_logprob": -0.2661143649708141,
        "compression_ratio": 1.5736040609137056,
        "end": 630.5999999999999,
        "id": 144,
        "no_speech_prob": 0.0747634544968605,
        "seek": 60292,
        "start": 629.5999999999999,
        "temperature": 0,
        "text": " And there we go.",
        "tokens": [
          51698,
          400,
          456,
          321,
          352,
          13,
          51748
        ]
      },
      {
        "avg_logprob": -0.23232713809683303,
        "compression_ratio": 1.625,
        "end": 635.76,
        "id": 145,
        "no_speech_prob": 0.007815678603947163,
        "seek": 63060,
        "start": 630.6,
        "temperature": 0,
        "text": " Now I have that line drawn with the lerp function.",
        "tokens": [
          50364,
          823,
          286,
          362,
          300,
          1622,
          10117,
          365,
          264,
          32068,
          79,
          2445,
          13,
          50622
        ]
      },
      {
        "avg_logprob": -0.23232713809683303,
        "compression_ratio": 1.625,
        "end": 639.72,
        "id": 146,
        "no_speech_prob": 0.007815678603947163,
        "seek": 63060,
        "start": 635.76,
        "temperature": 0,
        "text": " Because I'm using p5 vector, I could actually use the p5 vector lerp function, which would",
        "tokens": [
          50622,
          1436,
          286,
          478,
          1228,
          280,
          20,
          8062,
          11,
          286,
          727,
          767,
          764,
          264,
          280,
          20,
          8062,
          32068,
          79,
          2445,
          11,
          597,
          576,
          50820
        ]
      },
      {
        "avg_logprob": -0.23232713809683303,
        "compression_ratio": 1.625,
        "end": 642.4200000000001,
        "id": 147,
        "no_speech_prob": 0.007815678603947163,
        "seek": 63060,
        "start": 639.72,
        "temperature": 0,
        "text": " allow me to sort of consolidate the xy together.",
        "tokens": [
          50820,
          2089,
          385,
          281,
          1333,
          295,
          49521,
          264,
          2031,
          88,
          1214,
          13,
          50955
        ]
      },
      {
        "avg_logprob": -0.23232713809683303,
        "compression_ratio": 1.625,
        "end": 645.6800000000001,
        "id": 148,
        "no_speech_prob": 0.007815678603947163,
        "seek": 63060,
        "start": 642.4200000000001,
        "temperature": 0,
        "text": " But just to make everything really clear and for me to be able to follow it, I'm going",
        "tokens": [
          50955,
          583,
          445,
          281,
          652,
          1203,
          534,
          1850,
          293,
          337,
          385,
          281,
          312,
          1075,
          281,
          1524,
          309,
          11,
          286,
          478,
          516,
          51118
        ]
      },
      {
        "avg_logprob": -0.23232713809683303,
        "compression_ratio": 1.625,
        "end": 648.1,
        "id": 149,
        "no_speech_prob": 0.007815678603947163,
        "seek": 63060,
        "start": 645.6800000000001,
        "temperature": 0,
        "text": " to keep it as separate xy's for right now.",
        "tokens": [
          51118,
          281,
          1066,
          309,
          382,
          4994,
          2031,
          88,
          311,
          337,
          558,
          586,
          13,
          51239
        ]
      },
      {
        "avg_logprob": -0.23232713809683303,
        "compression_ratio": 1.625,
        "end": 650.24,
        "id": 150,
        "no_speech_prob": 0.007815678603947163,
        "seek": 63060,
        "start": 648.1,
        "temperature": 0,
        "text": " But I'm making a Bezier curve.",
        "tokens": [
          51239,
          583,
          286,
          478,
          1455,
          257,
          879,
          33352,
          7605,
          13,
          51346
        ]
      },
      {
        "avg_logprob": -0.23232713809683303,
        "compression_ratio": 1.625,
        "end": 652.24,
        "id": 151,
        "no_speech_prob": 0.007815678603947163,
        "seek": 63060,
        "start": 650.24,
        "temperature": 0,
        "text": " This is just a line.",
        "tokens": [
          51346,
          639,
          307,
          445,
          257,
          1622,
          13,
          51446
        ]
      },
      {
        "avg_logprob": -0.23232713809683303,
        "compression_ratio": 1.625,
        "end": 655.1600000000001,
        "id": 152,
        "no_speech_prob": 0.007815678603947163,
        "seek": 63060,
        "start": 652.24,
        "temperature": 0,
        "text": " Lerp works for linear interpolation, lines.",
        "tokens": [
          51446,
          441,
          260,
          79,
          1985,
          337,
          8213,
          44902,
          399,
          11,
          3876,
          13,
          51592
        ]
      },
      {
        "avg_logprob": -0.27922740452726125,
        "compression_ratio": 1.4831460674157304,
        "end": 665.9599999999999,
        "id": 153,
        "no_speech_prob": 0.009558728896081448,
        "seek": 65516,
        "start": 655.16,
        "temperature": 0,
        "text": " How do I make a quadratic Bezier from three points and lerp?",
        "tokens": [
          50364,
          1012,
          360,
          286,
          652,
          257,
          37262,
          879,
          33352,
          490,
          1045,
          2793,
          293,
          32068,
          79,
          30,
          50904
        ]
      },
      {
        "avg_logprob": -0.27922740452726125,
        "compression_ratio": 1.4831460674157304,
        "end": 671.76,
        "id": 154,
        "no_speech_prob": 0.009558728896081448,
        "seek": 65516,
        "start": 665.9599999999999,
        "temperature": 0,
        "text": " Remember a quadratic Bezier has two anchor points and one control point.",
        "tokens": [
          50904,
          5459,
          257,
          37262,
          879,
          33352,
          575,
          732,
          18487,
          2793,
          293,
          472,
          1969,
          935,
          13,
          51194
        ]
      },
      {
        "avg_logprob": -0.27922740452726125,
        "compression_ratio": 1.4831460674157304,
        "end": 674.16,
        "id": 155,
        "no_speech_prob": 0.009558728896081448,
        "seek": 65516,
        "start": 671.76,
        "temperature": 0,
        "text": " Probably ends up something like this.",
        "tokens": [
          51194,
          9210,
          5314,
          493,
          746,
          411,
          341,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.27922740452726125,
        "compression_ratio": 1.4831460674157304,
        "end": 680.0799999999999,
        "id": 156,
        "no_speech_prob": 0.009558728896081448,
        "seek": 65516,
        "start": 674.16,
        "temperature": 0,
        "text": " Well what if I wanted to do linear interpolation between x0 and x1?",
        "tokens": [
          51314,
          1042,
          437,
          498,
          286,
          1415,
          281,
          360,
          8213,
          44902,
          399,
          1296,
          2031,
          15,
          293,
          2031,
          16,
          30,
          51610
        ]
      },
      {
        "avg_logprob": -0.27922740452726125,
        "compression_ratio": 1.4831460674157304,
        "end": 681.92,
        "id": 157,
        "no_speech_prob": 0.009558728896081448,
        "seek": 65516,
        "start": 680.0799999999999,
        "temperature": 0,
        "text": " It would look like this.",
        "tokens": [
          51610,
          467,
          576,
          574,
          411,
          341,
          13,
          51702
        ]
      },
      {
        "avg_logprob": -0.3060469212739364,
        "compression_ratio": 1.9141104294478528,
        "end": 685.4,
        "id": 158,
        "no_speech_prob": 0.015905218198895454,
        "seek": 68192,
        "start": 681.92,
        "temperature": 0,
        "text": " What if I wanted to do linear interpolation between x1 and x2?",
        "tokens": [
          50364,
          708,
          498,
          286,
          1415,
          281,
          360,
          8213,
          44902,
          399,
          1296,
          2031,
          16,
          293,
          2031,
          17,
          30,
          50538
        ]
      },
      {
        "avg_logprob": -0.3060469212739364,
        "compression_ratio": 1.9141104294478528,
        "end": 689.9599999999999,
        "id": 159,
        "no_speech_prob": 0.015905218198895454,
        "seek": 68192,
        "start": 685.4,
        "temperature": 0,
        "text": " It would look like this.",
        "tokens": [
          50538,
          467,
          576,
          574,
          411,
          341,
          13,
          50766
        ]
      },
      {
        "avg_logprob": -0.3060469212739364,
        "compression_ratio": 1.9141104294478528,
        "end": 694.0799999999999,
        "id": 160,
        "no_speech_prob": 0.015905218198895454,
        "seek": 68192,
        "start": 689.9599999999999,
        "temperature": 0,
        "text": " This is the linear interpolation between these two points.",
        "tokens": [
          50766,
          639,
          307,
          264,
          8213,
          44902,
          399,
          1296,
          613,
          732,
          2793,
          13,
          50972
        ]
      },
      {
        "avg_logprob": -0.3060469212739364,
        "compression_ratio": 1.9141104294478528,
        "end": 697.78,
        "id": 161,
        "no_speech_prob": 0.015905218198895454,
        "seek": 68192,
        "start": 694.0799999999999,
        "temperature": 0,
        "text": " This is the linear interpolation between these two points.",
        "tokens": [
          50972,
          639,
          307,
          264,
          8213,
          44902,
          399,
          1296,
          613,
          732,
          2793,
          13,
          51157
        ]
      },
      {
        "avg_logprob": -0.3060469212739364,
        "compression_ratio": 1.9141104294478528,
        "end": 702.4,
        "id": 162,
        "no_speech_prob": 0.015905218198895454,
        "seek": 68192,
        "start": 697.78,
        "temperature": 0,
        "text": " What if I took, and this is going to blow your mind, it's like lerpception.",
        "tokens": [
          51157,
          708,
          498,
          286,
          1890,
          11,
          293,
          341,
          307,
          516,
          281,
          6327,
          428,
          1575,
          11,
          309,
          311,
          411,
          32068,
          79,
          7311,
          13,
          51388
        ]
      },
      {
        "avg_logprob": -0.3060469212739364,
        "compression_ratio": 1.9141104294478528,
        "end": 703.8,
        "id": 163,
        "no_speech_prob": 0.015905218198895454,
        "seek": 68192,
        "start": 702.4,
        "temperature": 0,
        "text": " I can't say that.",
        "tokens": [
          51388,
          286,
          393,
          380,
          584,
          300,
          13,
          51458
        ]
      },
      {
        "avg_logprob": -0.3060469212739364,
        "compression_ratio": 1.9141104294478528,
        "end": 704.8,
        "id": 164,
        "no_speech_prob": 0.015905218198895454,
        "seek": 68192,
        "start": 703.8,
        "temperature": 0,
        "text": " Lerpception.",
        "tokens": [
          51458,
          441,
          260,
          79,
          7311,
          13,
          51508
        ]
      },
      {
        "avg_logprob": -0.27797026966893396,
        "compression_ratio": 1.8944099378881987,
        "end": 714.28,
        "id": 165,
        "no_speech_prob": 0.23089046776294708,
        "seek": 70480,
        "start": 704.8,
        "temperature": 0,
        "text": " What if I lerped this point and this point by t as well?",
        "tokens": [
          50364,
          708,
          498,
          286,
          32068,
          3452,
          341,
          935,
          293,
          341,
          935,
          538,
          256,
          382,
          731,
          30,
          50838
        ]
      },
      {
        "avg_logprob": -0.27797026966893396,
        "compression_ratio": 1.8944099378881987,
        "end": 720.4,
        "id": 166,
        "no_speech_prob": 0.23089046776294708,
        "seek": 70480,
        "start": 714.28,
        "temperature": 0,
        "text": " So I would be taking, if this whole thing were a and this whole thing were b, I would",
        "tokens": [
          50838,
          407,
          286,
          576,
          312,
          1940,
          11,
          498,
          341,
          1379,
          551,
          645,
          257,
          293,
          341,
          1379,
          551,
          645,
          272,
          11,
          286,
          576,
          51144
        ]
      },
      {
        "avg_logprob": -0.27797026966893396,
        "compression_ratio": 1.8944099378881987,
        "end": 725.8399999999999,
        "id": 167,
        "no_speech_prob": 0.23089046776294708,
        "seek": 70480,
        "start": 720.4,
        "temperature": 0,
        "text": " say a plus b minus a times t.",
        "tokens": [
          51144,
          584,
          257,
          1804,
          272,
          3175,
          257,
          1413,
          256,
          13,
          51416
        ]
      },
      {
        "avg_logprob": -0.27797026966893396,
        "compression_ratio": 1.8944099378881987,
        "end": 730.4399999999999,
        "id": 168,
        "no_speech_prob": 0.23089046776294708,
        "seek": 70480,
        "start": 725.8399999999999,
        "temperature": 0,
        "text": " So plug this whole thing into here and then plug this into here and this into here and",
        "tokens": [
          51416,
          407,
          5452,
          341,
          1379,
          551,
          666,
          510,
          293,
          550,
          5452,
          341,
          666,
          510,
          293,
          341,
          666,
          510,
          293,
          51646
        ]
      },
      {
        "avg_logprob": -0.27797026966893396,
        "compression_ratio": 1.8944099378881987,
        "end": 732.8,
        "id": 169,
        "no_speech_prob": 0.23089046776294708,
        "seek": 70480,
        "start": 730.4399999999999,
        "temperature": 0,
        "text": " let's go back and look at the Wikipedia page.",
        "tokens": [
          51646,
          718,
          311,
          352,
          646,
          293,
          574,
          412,
          264,
          28999,
          3028,
          13,
          51764
        ]
      },
      {
        "avg_logprob": -0.26498156123691136,
        "compression_ratio": 1.5277777777777777,
        "end": 735.9599999999999,
        "id": 170,
        "no_speech_prob": 0.03308385983109474,
        "seek": 73280,
        "start": 732.8,
        "temperature": 0,
        "text": " That's exactly what's happening there and it's working all its way out and you can see",
        "tokens": [
          50364,
          663,
          311,
          2293,
          437,
          311,
          2737,
          456,
          293,
          309,
          311,
          1364,
          439,
          1080,
          636,
          484,
          293,
          291,
          393,
          536,
          50522
        ]
      },
      {
        "avg_logprob": -0.26498156123691136,
        "compression_ratio": 1.5277777777777777,
        "end": 739.3199999999999,
        "id": 171,
        "no_speech_prob": 0.03308385983109474,
        "seek": 73280,
        "start": 735.9599999999999,
        "temperature": 0,
        "text": " eventually we end up with this particular formula there.",
        "tokens": [
          50522,
          4728,
          321,
          917,
          493,
          365,
          341,
          1729,
          8513,
          456,
          13,
          50690
        ]
      },
      {
        "avg_logprob": -0.26498156123691136,
        "compression_ratio": 1.5277777777777777,
        "end": 748.12,
        "id": 172,
        "no_speech_prob": 0.03308385983109474,
        "seek": 73280,
        "start": 739.3199999999999,
        "temperature": 0,
        "text": " I could go through and derive all of the math and then write it all out in my p5 code itself.",
        "tokens": [
          50690,
          286,
          727,
          352,
          807,
          293,
          28446,
          439,
          295,
          264,
          5221,
          293,
          550,
          2464,
          309,
          439,
          484,
          294,
          452,
          280,
          20,
          3089,
          2564,
          13,
          51130
        ]
      },
      {
        "avg_logprob": -0.26498156123691136,
        "compression_ratio": 1.5277777777777777,
        "end": 750.68,
        "id": 173,
        "no_speech_prob": 0.03308385983109474,
        "seek": 73280,
        "start": 748.12,
        "temperature": 0,
        "text": " But I've got the lerp function there.",
        "tokens": [
          51130,
          583,
          286,
          600,
          658,
          264,
          32068,
          79,
          2445,
          456,
          13,
          51258
        ]
      },
      {
        "avg_logprob": -0.27193700763541206,
        "compression_ratio": 1.7163120567375887,
        "end": 759.7199999999999,
        "id": 174,
        "no_speech_prob": 0.16022515296936035,
        "seek": 75068,
        "start": 750.68,
        "temperature": 0,
        "text": " Or this is just this lerp function.",
        "tokens": [
          50364,
          1610,
          341,
          307,
          445,
          341,
          32068,
          79,
          2445,
          13,
          50816
        ]
      },
      {
        "avg_logprob": -0.27193700763541206,
        "compression_ratio": 1.7163120567375887,
        "end": 762.88,
        "id": 175,
        "no_speech_prob": 0.16022515296936035,
        "seek": 75068,
        "start": 759.7199999999999,
        "temperature": 0,
        "text": " This one is just this lerp function.",
        "tokens": [
          50816,
          639,
          472,
          307,
          445,
          341,
          32068,
          79,
          2445,
          13,
          50974
        ]
      },
      {
        "avg_logprob": -0.27193700763541206,
        "compression_ratio": 1.7163120567375887,
        "end": 773.52,
        "id": 176,
        "no_speech_prob": 0.16022515296936035,
        "seek": 75068,
        "start": 762.88,
        "temperature": 0,
        "text": " And this is going to look really crazy but I can just put the lerps inside the lerp.",
        "tokens": [
          50974,
          400,
          341,
          307,
          516,
          281,
          574,
          534,
          3219,
          457,
          286,
          393,
          445,
          829,
          264,
          32068,
          1878,
          1854,
          264,
          32068,
          79,
          13,
          51506
        ]
      },
      {
        "avg_logprob": -0.27193700763541206,
        "compression_ratio": 1.7163120567375887,
        "end": 779.1999999999999,
        "id": 177,
        "no_speech_prob": 0.16022515296936035,
        "seek": 75068,
        "start": 773.52,
        "temperature": 0,
        "text": " Lerp the result of the first lerp with the result of the second lerp according to t.",
        "tokens": [
          51506,
          441,
          260,
          79,
          264,
          1874,
          295,
          264,
          700,
          32068,
          79,
          365,
          264,
          1874,
          295,
          264,
          1150,
          32068,
          79,
          4650,
          281,
          256,
          13,
          51790
        ]
      },
      {
        "avg_logprob": -0.3240905637326448,
        "compression_ratio": 1.5206185567010309,
        "end": 783.6400000000001,
        "id": 178,
        "no_speech_prob": 0.0012644121889024973,
        "seek": 77920,
        "start": 779.44,
        "temperature": 0,
        "text": " This is the quadratic Bezier.",
        "tokens": [
          50376,
          639,
          307,
          264,
          37262,
          879,
          33352,
          13,
          50586
        ]
      },
      {
        "avg_logprob": -0.3240905637326448,
        "compression_ratio": 1.5206185567010309,
        "end": 789.1600000000001,
        "id": 179,
        "no_speech_prob": 0.0012644121889024973,
        "seek": 77920,
        "start": 783.6400000000001,
        "temperature": 0,
        "text": " And if your mind's going where mine's going right now, just wait till we get to the cubic",
        "tokens": [
          50586,
          400,
          498,
          428,
          1575,
          311,
          516,
          689,
          3892,
          311,
          516,
          558,
          586,
          11,
          445,
          1699,
          4288,
          321,
          483,
          281,
          264,
          28733,
          50862
        ]
      },
      {
        "avg_logprob": -0.3240905637326448,
        "compression_ratio": 1.5206185567010309,
        "end": 790.1600000000001,
        "id": 180,
        "no_speech_prob": 0.0012644121889024973,
        "seek": 77920,
        "start": 789.1600000000001,
        "temperature": 0,
        "text": " one.",
        "tokens": [
          50862,
          472,
          13,
          50912
        ]
      },
      {
        "avg_logprob": -0.3240905637326448,
        "compression_ratio": 1.5206185567010309,
        "end": 794.9200000000001,
        "id": 181,
        "no_speech_prob": 0.0012644121889024973,
        "seek": 77920,
        "start": 790.1600000000001,
        "temperature": 0,
        "text": " Let's put this into the code and see what we get.",
        "tokens": [
          50912,
          961,
          311,
          829,
          341,
          666,
          264,
          3089,
          293,
          536,
          437,
          321,
          483,
          13,
          51150
        ]
      },
      {
        "avg_logprob": -0.3240905637326448,
        "compression_ratio": 1.5206185567010309,
        "end": 799.9200000000001,
        "id": 182,
        "no_speech_prob": 0.0012644121889024973,
        "seek": 77920,
        "start": 794.9200000000001,
        "temperature": 0,
        "text": " So the vertex now with the math that I had before is just drawing the line between p0",
        "tokens": [
          51150,
          407,
          264,
          28162,
          586,
          365,
          264,
          5221,
          300,
          286,
          632,
          949,
          307,
          445,
          6316,
          264,
          1622,
          1296,
          280,
          15,
          51400
        ]
      },
      {
        "avg_logprob": -0.3240905637326448,
        "compression_ratio": 1.5206185567010309,
        "end": 801,
        "id": 183,
        "no_speech_prob": 0.0012644121889024973,
        "seek": 77920,
        "start": 799.9200000000001,
        "temperature": 0,
        "text": " and p1.",
        "tokens": [
          51400,
          293,
          280,
          16,
          13,
          51454
        ]
      },
      {
        "avg_logprob": -0.3240905637326448,
        "compression_ratio": 1.5206185567010309,
        "end": 804.84,
        "id": 184,
        "no_speech_prob": 0.0012644121889024973,
        "seek": 77920,
        "start": 801,
        "temperature": 0,
        "text": " Let's call that x1 and y1.",
        "tokens": [
          51454,
          961,
          311,
          818,
          300,
          2031,
          16,
          293,
          288,
          16,
          13,
          51646
        ]
      },
      {
        "avg_logprob": -0.36366393885661646,
        "compression_ratio": 1.4406779661016949,
        "end": 811.36,
        "id": 185,
        "no_speech_prob": 0.000013631337424158119,
        "seek": 80484,
        "start": 805.84,
        "temperature": 0,
        "text": " x2 and y2 is the lerp between p1 and p2.",
        "tokens": [
          50414,
          2031,
          17,
          293,
          288,
          17,
          307,
          264,
          32068,
          79,
          1296,
          280,
          16,
          293,
          280,
          17,
          13,
          50690
        ]
      },
      {
        "avg_logprob": -0.36366393885661646,
        "compression_ratio": 1.4406779661016949,
        "end": 815.36,
        "id": 186,
        "no_speech_prob": 0.000013631337424158119,
        "seek": 80484,
        "start": 811.36,
        "temperature": 0,
        "text": " And then x is the lerp between x1 and x2.",
        "tokens": [
          50690,
          400,
          550,
          2031,
          307,
          264,
          32068,
          79,
          1296,
          2031,
          16,
          293,
          2031,
          17,
          13,
          50890
        ]
      },
      {
        "avg_logprob": -0.36366393885661646,
        "compression_ratio": 1.4406779661016949,
        "end": 820.36,
        "id": 187,
        "no_speech_prob": 0.000013631337424158119,
        "seek": 80484,
        "start": 819.36,
        "temperature": 0,
        "text": " And look!",
        "tokens": [
          51090,
          400,
          574,
          0,
          51140
        ]
      },
      {
        "avg_logprob": -0.36366393885661646,
        "compression_ratio": 1.4406779661016949,
        "end": 823.5600000000001,
        "id": 188,
        "no_speech_prob": 0.000013631337424158119,
        "seek": 80484,
        "start": 820.36,
        "temperature": 0,
        "text": " There's our quadratic Bezier!",
        "tokens": [
          51140,
          821,
          311,
          527,
          37262,
          879,
          33352,
          0,
          51300
        ]
      },
      {
        "avg_logprob": -0.36366393885661646,
        "compression_ratio": 1.4406779661016949,
        "end": 824.5600000000001,
        "id": 189,
        "no_speech_prob": 0.000013631337424158119,
        "seek": 80484,
        "start": 823.5600000000001,
        "temperature": 0,
        "text": " All with lerp!",
        "tokens": [
          51300,
          1057,
          365,
          32068,
          79,
          0,
          51350
        ]
      },
      {
        "avg_logprob": -0.36366393885661646,
        "compression_ratio": 1.4406779661016949,
        "end": 827.2,
        "id": 190,
        "no_speech_prob": 0.000013631337424158119,
        "seek": 80484,
        "start": 824.5600000000001,
        "temperature": 0,
        "text": " I can't believe that worked!",
        "tokens": [
          51350,
          286,
          393,
          380,
          1697,
          300,
          2732,
          0,
          51482
        ]
      },
      {
        "avg_logprob": -0.36366393885661646,
        "compression_ratio": 1.4406779661016949,
        "end": 828.96,
        "id": 191,
        "no_speech_prob": 0.000013631337424158119,
        "seek": 80484,
        "start": 827.2,
        "temperature": 0,
        "text": " I love it so much!",
        "tokens": [
          51482,
          286,
          959,
          309,
          370,
          709,
          0,
          51570
        ]
      },
      {
        "avg_logprob": -0.36366393885661646,
        "compression_ratio": 1.4406779661016949,
        "end": 831.84,
        "id": 192,
        "no_speech_prob": 0.000013631337424158119,
        "seek": 80484,
        "start": 828.96,
        "temperature": 0,
        "text": " Let's have p1 be controlled by the mouse.",
        "tokens": [
          51570,
          961,
          311,
          362,
          280,
          16,
          312,
          10164,
          538,
          264,
          9719,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.36366393885661646,
        "compression_ratio": 1.4406779661016949,
        "end": 834.8000000000001,
        "id": 193,
        "no_speech_prob": 0.000013631337424158119,
        "seek": 80484,
        "start": 831.84,
        "temperature": 0,
        "text": " Whoa, what's going on here?",
        "tokens": [
          51714,
          7521,
          11,
          437,
          311,
          516,
          322,
          510,
          30,
          51862
        ]
      },
      {
        "avg_logprob": -0.24783878741057022,
        "compression_ratio": 1.5384615384615385,
        "end": 835.8,
        "id": 194,
        "no_speech_prob": 0.00023413458256982267,
        "seek": 83480,
        "start": 834.8,
        "temperature": 0,
        "text": " No, no, no, p1!",
        "tokens": [
          50364,
          883,
          11,
          572,
          11,
          572,
          11,
          280,
          16,
          0,
          50414
        ]
      },
      {
        "avg_logprob": -0.24783878741057022,
        "compression_ratio": 1.5384615384615385,
        "end": 839.56,
        "id": 195,
        "no_speech_prob": 0.00023413458256982267,
        "seek": 83480,
        "start": 835.8,
        "temperature": 0,
        "text": " I really did something crazy there.",
        "tokens": [
          50414,
          286,
          534,
          630,
          746,
          3219,
          456,
          13,
          50602
        ]
      },
      {
        "avg_logprob": -0.24783878741057022,
        "compression_ratio": 1.5384615384615385,
        "end": 844.4799999999999,
        "id": 196,
        "no_speech_prob": 0.00023413458256982267,
        "seek": 83480,
        "start": 839.56,
        "temperature": 0,
        "text": " The other thing that's super interesting here is this value 0.1.",
        "tokens": [
          50602,
          440,
          661,
          551,
          300,
          311,
          1687,
          1880,
          510,
          307,
          341,
          2158,
          1958,
          13,
          16,
          13,
          50848
        ]
      },
      {
        "avg_logprob": -0.24783878741057022,
        "compression_ratio": 1.5384615384615385,
        "end": 849.64,
        "id": 197,
        "no_speech_prob": 0.00023413458256982267,
        "seek": 83480,
        "start": 844.4799999999999,
        "temperature": 0,
        "text": " That's the amount of space in between every point along the way that we're calculating.",
        "tokens": [
          50848,
          663,
          311,
          264,
          2372,
          295,
          1901,
          294,
          1296,
          633,
          935,
          2051,
          264,
          636,
          300,
          321,
          434,
          28258,
          13,
          51106
        ]
      },
      {
        "avg_logprob": -0.24783878741057022,
        "compression_ratio": 1.5384615384615385,
        "end": 854,
        "id": 198,
        "no_speech_prob": 0.00023413458256982267,
        "seek": 83480,
        "start": 849.64,
        "temperature": 0,
        "text": " I could call that the delta, maybe.",
        "tokens": [
          51106,
          286,
          727,
          818,
          300,
          264,
          8289,
          11,
          1310,
          13,
          51324
        ]
      },
      {
        "avg_logprob": -0.24783878741057022,
        "compression_ratio": 1.5384615384615385,
        "end": 861.8,
        "id": 199,
        "no_speech_prob": 0.00023413458256982267,
        "seek": 83480,
        "start": 854,
        "temperature": 0,
        "text": " If delta were 0.5, you can see I'm just basically getting one point in between.",
        "tokens": [
          51324,
          759,
          8289,
          645,
          1958,
          13,
          20,
          11,
          291,
          393,
          536,
          286,
          478,
          445,
          1936,
          1242,
          472,
          935,
          294,
          1296,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.23329950869083405,
        "compression_ratio": 1.3846153846153846,
        "end": 866,
        "id": 200,
        "no_speech_prob": 0.00002796921216940973,
        "seek": 86180,
        "start": 861.8,
        "temperature": 0,
        "text": " A very small delta would be calculating lots of little points.",
        "tokens": [
          50364,
          316,
          588,
          1359,
          8289,
          576,
          312,
          28258,
          3195,
          295,
          707,
          2793,
          13,
          50574
        ]
      },
      {
        "avg_logprob": -0.23329950869083405,
        "compression_ratio": 1.3846153846153846,
        "end": 869.8,
        "id": 201,
        "no_speech_prob": 0.00002796921216940973,
        "seek": 86180,
        "start": 866,
        "temperature": 0,
        "text": " In a way, I want to go back to drawing those points.",
        "tokens": [
          50574,
          682,
          257,
          636,
          11,
          286,
          528,
          281,
          352,
          646,
          281,
          6316,
          729,
          2793,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.23329950869083405,
        "compression_ratio": 1.3846153846153846,
        "end": 881.8,
        "id": 202,
        "no_speech_prob": 0.00002796921216940973,
        "seek": 86180,
        "start": 873.8,
        "temperature": 0,
        "text": " And incidentally, what happens then if I connect x1 and y1 with x2 and y2 with a line?",
        "tokens": [
          50964,
          400,
          9348,
          379,
          11,
          437,
          2314,
          550,
          498,
          286,
          1745,
          2031,
          16,
          293,
          288,
          16,
          365,
          2031,
          17,
          293,
          288,
          17,
          365,
          257,
          1622,
          30,
          51364
        ]
      },
      {
        "avg_logprob": -0.23329950869083405,
        "compression_ratio": 1.3846153846153846,
        "end": 887.8,
        "id": 203,
        "no_speech_prob": 0.00002796921216940973,
        "seek": 86180,
        "start": 885.8,
        "temperature": 0,
        "text": " Look at that!",
        "tokens": [
          51564,
          2053,
          412,
          300,
          0,
          51664
        ]
      },
      {
        "avg_logprob": -0.24603722312233664,
        "compression_ratio": 1.482233502538071,
        "end": 896.8,
        "id": 204,
        "no_speech_prob": 0.000025071538402698934,
        "seek": 89180,
        "start": 892.8,
        "temperature": 0,
        "text": " Remember the string art on the Wikipedia page?",
        "tokens": [
          50414,
          5459,
          264,
          6798,
          1523,
          322,
          264,
          28999,
          3028,
          30,
          50614
        ]
      },
      {
        "avg_logprob": -0.24603722312233664,
        "compression_ratio": 1.482233502538071,
        "end": 899.8,
        "id": 205,
        "no_speech_prob": 0.000025071538402698934,
        "seek": 89180,
        "start": 896.8,
        "temperature": 0,
        "text": " That's what I've got right now!",
        "tokens": [
          50614,
          663,
          311,
          437,
          286,
          600,
          658,
          558,
          586,
          0,
          50764
        ]
      },
      {
        "avg_logprob": -0.24603722312233664,
        "compression_ratio": 1.482233502538071,
        "end": 903.8,
        "id": 206,
        "no_speech_prob": 0.000025071538402698934,
        "seek": 89180,
        "start": 899.8,
        "temperature": 0,
        "text": " I don't even need to draw these points or the Bezier curve itself.",
        "tokens": [
          50764,
          286,
          500,
          380,
          754,
          643,
          281,
          2642,
          613,
          2793,
          420,
          264,
          879,
          33352,
          7605,
          2564,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.24603722312233664,
        "compression_ratio": 1.482233502538071,
        "end": 907.8,
        "id": 207,
        "no_speech_prob": 0.000025071538402698934,
        "seek": 89180,
        "start": 903.8,
        "temperature": 0,
        "text": " The Bezier curve happens just by the sort of layering of all these lines.",
        "tokens": [
          50964,
          440,
          879,
          33352,
          7605,
          2314,
          445,
          538,
          264,
          1333,
          295,
          40754,
          295,
          439,
          613,
          3876,
          13,
          51164
        ]
      },
      {
        "avg_logprob": -0.24603722312233664,
        "compression_ratio": 1.482233502538071,
        "end": 911.8,
        "id": 208,
        "no_speech_prob": 0.000025071538402698934,
        "seek": 89180,
        "start": 907.8,
        "temperature": 0,
        "text": " And because they're all separate lines, I can make them rainbow colored.",
        "tokens": [
          51164,
          400,
          570,
          436,
          434,
          439,
          4994,
          3876,
          11,
          286,
          393,
          652,
          552,
          18526,
          14332,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.22083755249672748,
        "compression_ratio": 1.573394495412844,
        "end": 918.8,
        "id": 209,
        "no_speech_prob": 0.00028240360552445054,
        "seek": 91180,
        "start": 912.8,
        "temperature": 0,
        "text": " So for whatever reason, I'm getting the first line because I'm starting at t equals 0.",
        "tokens": [
          50414,
          407,
          337,
          2035,
          1778,
          11,
          286,
          478,
          1242,
          264,
          700,
          1622,
          570,
          286,
          478,
          2891,
          412,
          256,
          6915,
          1958,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.22083755249672748,
        "compression_ratio": 1.573394495412844,
        "end": 926.8,
        "id": 210,
        "no_speech_prob": 0.00028240360552445054,
        "seek": 91180,
        "start": 918.8,
        "temperature": 0,
        "text": " But I'm not getting what I expect to see as completely closing off at t is equal to 1.",
        "tokens": [
          50714,
          583,
          286,
          478,
          406,
          1242,
          437,
          286,
          2066,
          281,
          536,
          382,
          2584,
          10377,
          766,
          412,
          256,
          307,
          2681,
          281,
          502,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.22083755249672748,
        "compression_ratio": 1.573394495412844,
        "end": 931.8,
        "id": 211,
        "no_speech_prob": 0.00028240360552445054,
        "seek": 91180,
        "start": 926.8,
        "temperature": 0,
        "text": " This is because of one of those pesky little JavaScript things where there's a rounding error",
        "tokens": [
          51114,
          639,
          307,
          570,
          295,
          472,
          295,
          729,
          9262,
          4133,
          707,
          15778,
          721,
          689,
          456,
          311,
          257,
          48237,
          6713,
          51364
        ]
      },
      {
        "avg_logprob": -0.22083755249672748,
        "compression_ratio": 1.573394495412844,
        "end": 935.8,
        "id": 212,
        "no_speech_prob": 0.00028240360552445054,
        "seek": 91180,
        "start": 931.8,
        "temperature": 0,
        "text": " and I'm not actually getting all the way up to t equals 1.",
        "tokens": [
          51364,
          293,
          286,
          478,
          406,
          767,
          1242,
          439,
          264,
          636,
          493,
          281,
          256,
          6915,
          502,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.22083755249672748,
        "compression_ratio": 1.573394495412844,
        "end": 937.8,
        "id": 213,
        "no_speech_prob": 0.00028240360552445054,
        "seek": 91180,
        "start": 935.8,
        "temperature": 0,
        "text": " Oh!",
        "tokens": [
          51564,
          876,
          0,
          51664
        ]
      },
      {
        "avg_logprob": -0.22083755249672748,
        "compression_ratio": 1.573394495412844,
        "end": 939.8,
        "id": 214,
        "no_speech_prob": 0.00028240360552445054,
        "seek": 91180,
        "start": 937.8,
        "temperature": 0,
        "text": " There we go!",
        "tokens": [
          51664,
          821,
          321,
          352,
          0,
          51764
        ]
      },
      {
        "avg_logprob": -0.18206128766459803,
        "compression_ratio": 1.5714285714285714,
        "end": 944.8,
        "id": 215,
        "no_speech_prob": 0.0005792838637717068,
        "seek": 93980,
        "start": 940.8,
        "temperature": 0,
        "text": " So that's a little bit of a hack solution there, but I'm just going to leave it.",
        "tokens": [
          50414,
          407,
          300,
          311,
          257,
          707,
          857,
          295,
          257,
          10339,
          3827,
          456,
          11,
          457,
          286,
          478,
          445,
          516,
          281,
          1856,
          309,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.18206128766459803,
        "compression_ratio": 1.5714285714285714,
        "end": 946.8,
        "id": 216,
        "no_speech_prob": 0.0005792838637717068,
        "seek": 93980,
        "start": 944.8,
        "temperature": 0,
        "text": " And now I've closed off this shape.",
        "tokens": [
          50614,
          400,
          586,
          286,
          600,
          5395,
          766,
          341,
          3909,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.18206128766459803,
        "compression_ratio": 1.5714285714285714,
        "end": 947.8,
        "id": 217,
        "no_speech_prob": 0.0005792838637717068,
        "seek": 93980,
        "start": 946.8,
        "temperature": 0,
        "text": " Oh, I love it so much!",
        "tokens": [
          50714,
          876,
          11,
          286,
          959,
          309,
          370,
          709,
          0,
          50764
        ]
      },
      {
        "avg_logprob": -0.18206128766459803,
        "compression_ratio": 1.5714285714285714,
        "end": 948.8,
        "id": 218,
        "no_speech_prob": 0.0005792838637717068,
        "seek": 93980,
        "start": 947.8,
        "temperature": 0,
        "text": " We're not done yet, though.",
        "tokens": [
          50764,
          492,
          434,
          406,
          1096,
          1939,
          11,
          1673,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.18206128766459803,
        "compression_ratio": 1.5714285714285714,
        "end": 951.8,
        "id": 219,
        "no_speech_prob": 0.0005792838637717068,
        "seek": 93980,
        "start": 948.8,
        "temperature": 0,
        "text": " I have got to do cubic.",
        "tokens": [
          50814,
          286,
          362,
          658,
          281,
          360,
          28733,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.18206128766459803,
        "compression_ratio": 1.5714285714285714,
        "end": 953.8,
        "id": 220,
        "no_speech_prob": 0.0005792838637717068,
        "seek": 93980,
        "start": 951.8,
        "temperature": 0,
        "text": " Oh boy, how am I going to do cubic?",
        "tokens": [
          50964,
          876,
          3237,
          11,
          577,
          669,
          286,
          516,
          281,
          360,
          28733,
          30,
          51064
        ]
      },
      {
        "avg_logprob": -0.18206128766459803,
        "compression_ratio": 1.5714285714285714,
        "end": 956.8,
        "id": 221,
        "no_speech_prob": 0.0005792838637717068,
        "seek": 93980,
        "start": 953.8,
        "temperature": 0,
        "text": " Well, I need another point.",
        "tokens": [
          51064,
          1042,
          11,
          286,
          643,
          1071,
          935,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.18206128766459803,
        "compression_ratio": 1.5714285714285714,
        "end": 960.8,
        "id": 222,
        "no_speech_prob": 0.0005792838637717068,
        "seek": 93980,
        "start": 956.8,
        "temperature": 0,
        "text": " So p2 will be something like 400, 0.",
        "tokens": [
          51214,
          407,
          280,
          17,
          486,
          312,
          746,
          411,
          8423,
          11,
          1958,
          13,
          51414
        ]
      },
      {
        "avg_logprob": -0.18206128766459803,
        "compression_ratio": 1.5714285714285714,
        "end": 963.8,
        "id": 223,
        "no_speech_prob": 0.0005792838637717068,
        "seek": 93980,
        "start": 960.8,
        "temperature": 0,
        "text": " I'm just going to make something simple right now.",
        "tokens": [
          51414,
          286,
          478,
          445,
          516,
          281,
          652,
          746,
          2199,
          558,
          586,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.18206128766459803,
        "compression_ratio": 1.5714285714285714,
        "end": 966.8,
        "id": 224,
        "no_speech_prob": 0.0005792838637717068,
        "seek": 93980,
        "start": 963.8,
        "temperature": 0,
        "text": " And p3 is then the last point.",
        "tokens": [
          51564,
          400,
          280,
          18,
          307,
          550,
          264,
          1036,
          935,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.18088620992807242,
        "compression_ratio": 1.6549295774647887,
        "end": 971.8,
        "id": 225,
        "no_speech_prob": 0.007937919348478317,
        "seek": 96680,
        "start": 967.8,
        "temperature": 0,
        "text": " And I'm going to write a function that's called quadratic.",
        "tokens": [
          50414,
          400,
          286,
          478,
          516,
          281,
          2464,
          257,
          2445,
          300,
          311,
          1219,
          37262,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.18088620992807242,
        "compression_ratio": 1.6549295774647887,
        "end": 977.8,
        "id": 226,
        "no_speech_prob": 0.007937919348478317,
        "seek": 96680,
        "start": 971.8,
        "temperature": 0,
        "text": " And quadratic is going to receive three points.",
        "tokens": [
          50614,
          400,
          37262,
          307,
          516,
          281,
          4774,
          1045,
          2793,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.18088620992807242,
        "compression_ratio": 1.6549295774647887,
        "end": 984.8,
        "id": 227,
        "no_speech_prob": 0.007937919348478317,
        "seek": 96680,
        "start": 977.8,
        "temperature": 0,
        "text": " And it's going to do exactly this.",
        "tokens": [
          50914,
          400,
          309,
          311,
          516,
          281,
          360,
          2293,
          341,
          13,
          51264
        ]
      },
      {
        "avg_logprob": -0.18088620992807242,
        "compression_ratio": 1.6549295774647887,
        "end": 989.8,
        "id": 228,
        "no_speech_prob": 0.007937919348478317,
        "seek": 96680,
        "start": 984.8,
        "temperature": 0,
        "text": " And return that result as a vector.",
        "tokens": [
          51264,
          400,
          2736,
          300,
          1874,
          382,
          257,
          8062,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.18088620992807242,
        "compression_ratio": 1.6549295774647887,
        "end": 993.8,
        "id": 229,
        "no_speech_prob": 0.007937919348478317,
        "seek": 96680,
        "start": 989.8,
        "temperature": 0,
        "text": " I'm going to say v for vertex is the result of quadratic.",
        "tokens": [
          51514,
          286,
          478,
          516,
          281,
          584,
          371,
          337,
          28162,
          307,
          264,
          1874,
          295,
          37262,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.205897274017334,
        "compression_ratio": 1.3853658536585365,
        "end": 999.8,
        "id": 230,
        "no_speech_prob": 0.001648471923545003,
        "seek": 99380,
        "start": 993.8,
        "temperature": 0,
        "text": " Oh, and it needs a t, obviously.",
        "tokens": [
          50364,
          876,
          11,
          293,
          309,
          2203,
          257,
          256,
          11,
          2745,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.205897274017334,
        "compression_ratio": 1.3853658536585365,
        "end": 1000.8,
        "id": 231,
        "no_speech_prob": 0.001648471923545003,
        "seek": 99380,
        "start": 999.8,
        "temperature": 0,
        "text": " Okay, great.",
        "tokens": [
          50664,
          1033,
          11,
          869,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.205897274017334,
        "compression_ratio": 1.3853658536585365,
        "end": 1003.8,
        "id": 232,
        "no_speech_prob": 0.001648471923545003,
        "seek": 99380,
        "start": 1000.8,
        "temperature": 0,
        "text": " So I forgot, like, I can put in p3 here.",
        "tokens": [
          50714,
          407,
          286,
          5298,
          11,
          411,
          11,
          286,
          393,
          829,
          294,
          280,
          18,
          510,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.205897274017334,
        "compression_ratio": 1.3853658536585365,
        "end": 1006.8,
        "id": 233,
        "no_speech_prob": 0.001648471923545003,
        "seek": 99380,
        "start": 1003.8,
        "temperature": 0,
        "text": " And we can see this is what I had before.",
        "tokens": [
          50864,
          400,
          321,
          393,
          536,
          341,
          307,
          437,
          286,
          632,
          949,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.205897274017334,
        "compression_ratio": 1.3853658536585365,
        "end": 1013.8,
        "id": 234,
        "no_speech_prob": 0.001648471923545003,
        "seek": 99380,
        "start": 1006.8,
        "temperature": 0,
        "text": " But I have it all in a function that's doing the quadratic Bézier math, all with Lerp.",
        "tokens": [
          51014,
          583,
          286,
          362,
          309,
          439,
          294,
          257,
          2445,
          300,
          311,
          884,
          264,
          37262,
          363,
          526,
          33352,
          5221,
          11,
          439,
          365,
          441,
          260,
          79,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.205897274017334,
        "compression_ratio": 1.3853658536585365,
        "end": 1022.8,
        "id": 235,
        "no_speech_prob": 0.001648471923545003,
        "seek": 99380,
        "start": 1013.8,
        "temperature": 0,
        "text": " Now, what if I were to say v1 is the quadratic from p0 to p1 to p2.",
        "tokens": [
          51364,
          823,
          11,
          437,
          498,
          286,
          645,
          281,
          584,
          371,
          16,
          307,
          264,
          37262,
          490,
          280,
          15,
          281,
          280,
          16,
          281,
          280,
          17,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.13051641278150605,
        "compression_ratio": 1.4929577464788732,
        "end": 1030.8,
        "id": 236,
        "no_speech_prob": 0.00011412185267545283,
        "seek": 102280,
        "start": 1022.8,
        "temperature": 0,
        "text": " And v2 is the quadratic from p1, p2 to p3.",
        "tokens": [
          50364,
          400,
          371,
          17,
          307,
          264,
          37262,
          490,
          280,
          16,
          11,
          280,
          17,
          281,
          280,
          18,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.13051641278150605,
        "compression_ratio": 1.4929577464788732,
        "end": 1035.8,
        "id": 237,
        "no_speech_prob": 0.00011412185267545283,
        "seek": 102280,
        "start": 1030.8,
        "temperature": 0,
        "text": " Then I could just say that x is Lerp v1.",
        "tokens": [
          50764,
          1396,
          286,
          727,
          445,
          584,
          300,
          2031,
          307,
          441,
          260,
          79,
          371,
          16,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.13051641278150605,
        "compression_ratio": 1.4929577464788732,
        "end": 1040.8,
        "id": 238,
        "no_speech_prob": 0.00011412185267545283,
        "seek": 102280,
        "start": 1035.8,
        "temperature": 0,
        "text": " Right? I need to Lerp both quadratics.",
        "tokens": [
          51014,
          1779,
          30,
          286,
          643,
          281,
          441,
          260,
          79,
          1293,
          10787,
          4481,
          1167,
          13,
          51264
        ]
      },
      {
        "avg_logprob": -0.13051641278150605,
        "compression_ratio": 1.4929577464788732,
        "end": 1041.8,
        "id": 239,
        "no_speech_prob": 0.00011412185267545283,
        "seek": 102280,
        "start": 1040.8,
        "temperature": 0,
        "text": " Are you with me?",
        "tokens": [
          51264,
          2014,
          291,
          365,
          385,
          30,
          51314
        ]
      },
      {
        "avg_logprob": -0.13051641278150605,
        "compression_ratio": 1.4929577464788732,
        "end": 1051.8,
        "id": 240,
        "no_speech_prob": 0.00011412185267545283,
        "seek": 102280,
        "start": 1041.8,
        "temperature": 0,
        "text": " If quadratic is Lerping two Lerps, then cubic is Lerping two quadratics.",
        "tokens": [
          51314,
          759,
          37262,
          307,
          441,
          260,
          3381,
          732,
          441,
          260,
          1878,
          11,
          550,
          28733,
          307,
          441,
          260,
          3381,
          732,
          10787,
          4481,
          1167,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.16441618768792404,
        "compression_ratio": 1.5443037974683544,
        "end": 1056.8,
        "id": 241,
        "no_speech_prob": 0.00014883709081914276,
        "seek": 105180,
        "start": 1052.8,
        "temperature": 0,
        "text": " Find the quadratic Bézier between these three points.",
        "tokens": [
          50414,
          11809,
          264,
          37262,
          363,
          526,
          33352,
          1296,
          613,
          1045,
          2793,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.16441618768792404,
        "compression_ratio": 1.5443037974683544,
        "end": 1060.8,
        "id": 242,
        "no_speech_prob": 0.00014883709081914276,
        "seek": 105180,
        "start": 1056.8,
        "temperature": 0,
        "text": " Find the quadratic Bézier between these three points.",
        "tokens": [
          50614,
          11809,
          264,
          37262,
          363,
          526,
          33352,
          1296,
          613,
          1045,
          2793,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.16441618768792404,
        "compression_ratio": 1.5443037974683544,
        "end": 1062.8,
        "id": 243,
        "no_speech_prob": 0.00014883709081914276,
        "seek": 105180,
        "start": 1060.8,
        "temperature": 0,
        "text": " I totally numbered them wrong.",
        "tokens": [
          50814,
          286,
          3879,
          40936,
          552,
          2085,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.16441618768792404,
        "compression_ratio": 1.5443037974683544,
        "end": 1065.8,
        "id": 244,
        "no_speech_prob": 0.00014883709081914276,
        "seek": 105180,
        "start": 1062.8,
        "temperature": 0,
        "text": " x1, x2, x3.",
        "tokens": [
          50914,
          2031,
          16,
          11,
          2031,
          17,
          11,
          2031,
          18,
          13,
          51064
        ]
      },
      {
        "avg_logprob": -0.16441618768792404,
        "compression_ratio": 1.5443037974683544,
        "end": 1074.8,
        "id": 245,
        "no_speech_prob": 0.00014883709081914276,
        "seek": 105180,
        "start": 1065.8,
        "temperature": 0,
        "text": " And then Lerp those two curves together.",
        "tokens": [
          51064,
          400,
          550,
          441,
          260,
          79,
          729,
          732,
          19490,
          1214,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.16441618768792404,
        "compression_ratio": 1.5443037974683544,
        "end": 1076.8,
        "id": 246,
        "no_speech_prob": 0.00014883709081914276,
        "seek": 105180,
        "start": 1074.8,
        "temperature": 0,
        "text": " I've messed something up here.",
        "tokens": [
          51514,
          286,
          600,
          16507,
          746,
          493,
          510,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.16441618768792404,
        "compression_ratio": 1.5443037974683544,
        "end": 1077.8,
        "id": 247,
        "no_speech_prob": 0.00014883709081914276,
        "seek": 105180,
        "start": 1076.8,
        "temperature": 0,
        "text": " What did I mess up?",
        "tokens": [
          51614,
          708,
          630,
          286,
          2082,
          493,
          30,
          51664
        ]
      },
      {
        "avg_logprob": -0.19499458585466659,
        "compression_ratio": 1.4427083333333333,
        "end": 1080.8,
        "id": 248,
        "no_speech_prob": 0.017710072919726372,
        "seek": 107780,
        "start": 1078.8,
        "temperature": 0,
        "text": " Oh, oh, oh my goodness.",
        "tokens": [
          50414,
          876,
          11,
          1954,
          11,
          1954,
          452,
          8387,
          13,
          50514
        ]
      },
      {
        "avg_logprob": -0.19499458585466659,
        "compression_ratio": 1.4427083333333333,
        "end": 1081.8,
        "id": 249,
        "no_speech_prob": 0.017710072919726372,
        "seek": 107780,
        "start": 1080.8,
        "temperature": 0,
        "text": " What am I doing?",
        "tokens": [
          50514,
          708,
          669,
          286,
          884,
          30,
          50564
        ]
      },
      {
        "avg_logprob": -0.19499458585466659,
        "compression_ratio": 1.4427083333333333,
        "end": 1084.8,
        "id": 250,
        "no_speech_prob": 0.017710072919726372,
        "seek": 107780,
        "start": 1083.8,
        "temperature": 0,
        "text": " There we go.",
        "tokens": [
          50664,
          821,
          321,
          352,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.19499458585466659,
        "compression_ratio": 1.4427083333333333,
        "end": 1085.8,
        "id": 251,
        "no_speech_prob": 0.017710072919726372,
        "seek": 107780,
        "start": 1084.8,
        "temperature": 0,
        "text": " Sorry for that.",
        "tokens": [
          50714,
          4919,
          337,
          300,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.19499458585466659,
        "compression_ratio": 1.4427083333333333,
        "end": 1090.8,
        "id": 252,
        "no_speech_prob": 0.017710072919726372,
        "seek": 107780,
        "start": 1085.8,
        "temperature": 0,
        "text": " So this is correct in the sense that I've taken two quadratic curves and Lerped between them.",
        "tokens": [
          50764,
          407,
          341,
          307,
          3006,
          294,
          264,
          2020,
          300,
          286,
          600,
          2726,
          732,
          37262,
          19490,
          293,
          441,
          260,
          3452,
          1296,
          552,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.19499458585466659,
        "compression_ratio": 1.4427083333333333,
        "end": 1097.8,
        "id": 253,
        "no_speech_prob": 0.017710072919726372,
        "seek": 107780,
        "start": 1090.8,
        "temperature": 0,
        "text": " I think it would be advisable for me to put all of this into a function called cubic.",
        "tokens": [
          51014,
          286,
          519,
          309,
          576,
          312,
          10280,
          712,
          337,
          385,
          281,
          829,
          439,
          295,
          341,
          666,
          257,
          2445,
          1219,
          28733,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.19499458585466659,
        "compression_ratio": 1.4427083333333333,
        "end": 1100.8,
        "id": 254,
        "no_speech_prob": 0.017710072919726372,
        "seek": 107780,
        "start": 1098.8,
        "temperature": 0,
        "text": " Which takes all the points.",
        "tokens": [
          51414,
          3013,
          2516,
          439,
          264,
          2793,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.15952810034694442,
        "compression_ratio": 1.525,
        "end": 1107.8,
        "id": 255,
        "no_speech_prob": 0.06096817925572395,
        "seek": 110080,
        "start": 1101.8,
        "temperature": 0,
        "text": " Then does the quadratic between the first three and the second three.",
        "tokens": [
          50414,
          1396,
          775,
          264,
          37262,
          1296,
          264,
          700,
          1045,
          293,
          264,
          1150,
          1045,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.15952810034694442,
        "compression_ratio": 1.525,
        "end": 1115.8,
        "id": 256,
        "no_speech_prob": 0.06096817925572395,
        "seek": 110080,
        "start": 1109.8,
        "temperature": 0,
        "text": " Calculates the xy and returns that as a vector.",
        "tokens": [
          50814,
          3511,
          2444,
          1024,
          264,
          2031,
          88,
          293,
          11247,
          300,
          382,
          257,
          8062,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.15952810034694442,
        "compression_ratio": 1.525,
        "end": 1119.8,
        "id": 257,
        "no_speech_prob": 0.06096817925572395,
        "seek": 110080,
        "start": 1116.8,
        "temperature": 0,
        "text": " So quadratic is Lerping two line segments.",
        "tokens": [
          51164,
          407,
          37262,
          307,
          441,
          260,
          3381,
          732,
          1622,
          19904,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.15952810034694442,
        "compression_ratio": 1.525,
        "end": 1121.8,
        "id": 258,
        "no_speech_prob": 0.06096817925572395,
        "seek": 110080,
        "start": 1119.8,
        "temperature": 0,
        "text": " p0, p1, p1, p2.",
        "tokens": [
          51314,
          280,
          15,
          11,
          280,
          16,
          11,
          280,
          16,
          11,
          280,
          17,
          13,
          51414
        ]
      },
      {
        "avg_logprob": -0.15952810034694442,
        "compression_ratio": 1.525,
        "end": 1125.8,
        "id": 259,
        "no_speech_prob": 0.06096817925572395,
        "seek": 110080,
        "start": 1121.8,
        "temperature": 0,
        "text": " Cubic is Lerping two quadratics.",
        "tokens": [
          51414,
          21300,
          299,
          307,
          441,
          260,
          3381,
          732,
          10787,
          4481,
          1167,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.15952810034694442,
        "compression_ratio": 1.525,
        "end": 1128.8,
        "id": 260,
        "no_speech_prob": 0.06096817925572395,
        "seek": 110080,
        "start": 1125.8,
        "temperature": 0,
        "text": " Now I can just say let v is cubic.",
        "tokens": [
          51614,
          823,
          286,
          393,
          445,
          584,
          718,
          371,
          307,
          28733,
          13,
          51764
        ]
      },
      {
        "avg_logprob": -0.1604185271681401,
        "compression_ratio": 1.4516129032258065,
        "end": 1132.8,
        "id": 261,
        "no_speech_prob": 0.000842618232127279,
        "seek": 112880,
        "start": 1128.8,
        "temperature": 0,
        "text": " p0, p1, p2, p3, t.",
        "tokens": [
          50364,
          280,
          15,
          11,
          280,
          16,
          11,
          280,
          17,
          11,
          280,
          18,
          11,
          256,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.1604185271681401,
        "compression_ratio": 1.4516129032258065,
        "end": 1137.8,
        "id": 262,
        "no_speech_prob": 0.000842618232127279,
        "seek": 112880,
        "start": 1133.8,
        "temperature": 0,
        "text": " Vertex v.x, v.y.",
        "tokens": [
          50614,
          21044,
          3121,
          371,
          13,
          87,
          11,
          371,
          13,
          88,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.1604185271681401,
        "compression_ratio": 1.4516129032258065,
        "end": 1139.8,
        "id": 263,
        "no_speech_prob": 0.000842618232127279,
        "seek": 112880,
        "start": 1138.8,
        "temperature": 0,
        "text": " There we go.",
        "tokens": [
          50864,
          821,
          321,
          352,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.1604185271681401,
        "compression_ratio": 1.4516129032258065,
        "end": 1141.8,
        "id": 264,
        "no_speech_prob": 0.000842618232127279,
        "seek": 112880,
        "start": 1140.8,
        "temperature": 0,
        "text": " So this works.",
        "tokens": [
          50964,
          407,
          341,
          1985,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.1604185271681401,
        "compression_ratio": 1.4516129032258065,
        "end": 1145.8,
        "id": 265,
        "no_speech_prob": 0.000842618232127279,
        "seek": 112880,
        "start": 1141.8,
        "temperature": 0,
        "text": " I've got the Bézier curve drawn as a sequence of vertices.",
        "tokens": [
          51014,
          286,
          600,
          658,
          264,
          363,
          526,
          33352,
          7605,
          10117,
          382,
          257,
          8310,
          295,
          32053,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.1604185271681401,
        "compression_ratio": 1.4516129032258065,
        "end": 1148.8,
        "id": 266,
        "no_speech_prob": 0.000842618232127279,
        "seek": 112880,
        "start": 1145.8,
        "temperature": 0,
        "text": " But I lost the beautiful string art and the rainbow colors.",
        "tokens": [
          51214,
          583,
          286,
          2731,
          264,
          2238,
          6798,
          1523,
          293,
          264,
          18526,
          4577,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.1604185271681401,
        "compression_ratio": 1.4516129032258065,
        "end": 1150.8,
        "id": 267,
        "no_speech_prob": 0.000842618232127279,
        "seek": 112880,
        "start": 1148.8,
        "temperature": 0,
        "text": " So let's see if I can get that back.",
        "tokens": [
          51364,
          407,
          718,
          311,
          536,
          498,
          286,
          393,
          483,
          300,
          646,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.1604185271681401,
        "compression_ratio": 1.4516129032258065,
        "end": 1153.8,
        "id": 268,
        "no_speech_prob": 0.000842618232127279,
        "seek": 112880,
        "start": 1151.8,
        "temperature": 0,
        "text": " I'm going to add that stroke in there.",
        "tokens": [
          51514,
          286,
          478,
          516,
          281,
          909,
          300,
          12403,
          294,
          456,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.1604185271681401,
        "compression_ratio": 1.4516129032258065,
        "end": 1155.8,
        "id": 269,
        "no_speech_prob": 0.000842618232127279,
        "seek": 112880,
        "start": 1153.8,
        "temperature": 0,
        "text": " Get rid of begin shape and end shape.",
        "tokens": [
          51614,
          3240,
          3973,
          295,
          1841,
          3909,
          293,
          917,
          3909,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.1604185271681401,
        "compression_ratio": 1.4516129032258065,
        "end": 1157.8,
        "id": 270,
        "no_speech_prob": 0.000842618232127279,
        "seek": 112880,
        "start": 1156.8,
        "temperature": 0,
        "text": " And the vertices.",
        "tokens": [
          51764,
          400,
          264,
          32053,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.19992921707477976,
        "compression_ratio": 1.4956521739130435,
        "end": 1161.8,
        "id": 271,
        "no_speech_prob": 0.00000764649212214863,
        "seek": 115880,
        "start": 1158.8,
        "temperature": 0,
        "text": " And now let's just draw lines connecting various points.",
        "tokens": [
          50364,
          400,
          586,
          718,
          311,
          445,
          2642,
          3876,
          11015,
          3683,
          2793,
          13,
          50514
        ]
      },
      {
        "avg_logprob": -0.19992921707477976,
        "compression_ratio": 1.4956521739130435,
        "end": 1164.8,
        "id": 272,
        "no_speech_prob": 0.00000764649212214863,
        "seek": 115880,
        "start": 1161.8,
        "temperature": 0,
        "text": " So what if here in cubic I connect v1 to v2?",
        "tokens": [
          50514,
          407,
          437,
          498,
          510,
          294,
          28733,
          286,
          1745,
          371,
          16,
          281,
          371,
          17,
          30,
          50664
        ]
      },
      {
        "avg_logprob": -0.19992921707477976,
        "compression_ratio": 1.4956521739130435,
        "end": 1167.8,
        "id": 273,
        "no_speech_prob": 0.00000764649212214863,
        "seek": 115880,
        "start": 1166.8,
        "temperature": 0,
        "text": " Ooh, look at that.",
        "tokens": [
          50764,
          7951,
          11,
          574,
          412,
          300,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.19992921707477976,
        "compression_ratio": 1.4956521739130435,
        "end": 1174.8,
        "id": 274,
        "no_speech_prob": 0.00000764649212214863,
        "seek": 115880,
        "start": 1167.8,
        "temperature": 0,
        "text": " And I can see the Bézier curve there as the sort of tangents of all of these lines mixed together.",
        "tokens": [
          50814,
          400,
          286,
          393,
          536,
          264,
          363,
          526,
          33352,
          7605,
          456,
          382,
          264,
          1333,
          295,
          10266,
          791,
          295,
          439,
          295,
          613,
          3876,
          7467,
          1214,
          13,
          51164
        ]
      },
      {
        "avg_logprob": -0.19992921707477976,
        "compression_ratio": 1.4956521739130435,
        "end": 1179.8,
        "id": 275,
        "no_speech_prob": 0.00000764649212214863,
        "seek": 115880,
        "start": 1174.8,
        "temperature": 0,
        "text": " But I could make this really crazy and I could also draw all those quadratic connections.",
        "tokens": [
          51164,
          583,
          286,
          727,
          652,
          341,
          534,
          3219,
          293,
          286,
          727,
          611,
          2642,
          439,
          729,
          37262,
          9271,
          13,
          51414
        ]
      },
      {
        "avg_logprob": -0.19992921707477976,
        "compression_ratio": 1.4956521739130435,
        "end": 1184.8,
        "id": 276,
        "no_speech_prob": 0.00000764649212214863,
        "seek": 115880,
        "start": 1182.8,
        "temperature": 0,
        "text": " Whoa, I did something wrong here.",
        "tokens": [
          51564,
          7521,
          11,
          286,
          630,
          746,
          2085,
          510,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.1687708224280406,
        "compression_ratio": 1.569767441860465,
        "end": 1187.8,
        "id": 277,
        "no_speech_prob": 0.0025507621467113495,
        "seek": 118480,
        "start": 1184.8,
        "temperature": 0,
        "text": " X1, y1, x2, y2.",
        "tokens": [
          50364,
          1783,
          16,
          11,
          288,
          16,
          11,
          2031,
          17,
          11,
          288,
          17,
          13,
          50514
        ]
      },
      {
        "avg_logprob": -0.1687708224280406,
        "compression_ratio": 1.569767441860465,
        "end": 1189.8,
        "id": 278,
        "no_speech_prob": 0.0025507621467113495,
        "seek": 118480,
        "start": 1187.8,
        "temperature": 0,
        "text": " I got a little overly excited there.",
        "tokens": [
          50514,
          286,
          658,
          257,
          707,
          24324,
          2919,
          456,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.1687708224280406,
        "compression_ratio": 1.569767441860465,
        "end": 1190.8,
        "id": 279,
        "no_speech_prob": 0.0025507621467113495,
        "seek": 118480,
        "start": 1189.8,
        "temperature": 0,
        "text": " There we go.",
        "tokens": [
          50614,
          821,
          321,
          352,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.1687708224280406,
        "compression_ratio": 1.569767441860465,
        "end": 1191.8,
        "id": 280,
        "no_speech_prob": 0.0025507621467113495,
        "seek": 118480,
        "start": 1190.8,
        "temperature": 0,
        "text": " Look at this.",
        "tokens": [
          50664,
          2053,
          412,
          341,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.1687708224280406,
        "compression_ratio": 1.569767441860465,
        "end": 1195.8,
        "id": 281,
        "no_speech_prob": 0.0025507621467113495,
        "seek": 118480,
        "start": 1191.8,
        "temperature": 0,
        "text": " This is two quadratic curves meeting in the middle to draw the Bézier.",
        "tokens": [
          50714,
          639,
          307,
          732,
          37262,
          19490,
          3440,
          294,
          264,
          2808,
          281,
          2642,
          264,
          363,
          526,
          33352,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.1687708224280406,
        "compression_ratio": 1.569767441860465,
        "end": 1199.8,
        "id": 282,
        "no_speech_prob": 0.0025507621467113495,
        "seek": 118480,
        "start": 1195.8,
        "temperature": 0,
        "text": " I could add a little bit of alpha here just so you get some blending.",
        "tokens": [
          50914,
          286,
          727,
          909,
          257,
          707,
          857,
          295,
          8961,
          510,
          445,
          370,
          291,
          483,
          512,
          23124,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.1687708224280406,
        "compression_ratio": 1.569767441860465,
        "end": 1201.8,
        "id": 283,
        "no_speech_prob": 0.0025507621467113495,
        "seek": 118480,
        "start": 1199.8,
        "temperature": 0,
        "text": " I could go on forever here.",
        "tokens": [
          51114,
          286,
          727,
          352,
          322,
          5680,
          510,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.1687708224280406,
        "compression_ratio": 1.569767441860465,
        "end": 1206.8,
        "id": 284,
        "no_speech_prob": 0.0025507621467113495,
        "seek": 118480,
        "start": 1201.8,
        "temperature": 0,
        "text": " But what if I, instead of just moving one point around with the mouse,",
        "tokens": [
          51214,
          583,
          437,
          498,
          286,
          11,
          2602,
          295,
          445,
          2684,
          472,
          935,
          926,
          365,
          264,
          9719,
          11,
          51464
        ]
      },
      {
        "avg_logprob": -0.1687708224280406,
        "compression_ratio": 1.569767441860465,
        "end": 1212.8,
        "id": 285,
        "no_speech_prob": 0.0025507621467113495,
        "seek": 118480,
        "start": 1206.8,
        "temperature": 0,
        "text": " let me move all the points around according to just some random bouncing ball logic.",
        "tokens": [
          51464,
          718,
          385,
          1286,
          439,
          264,
          2793,
          926,
          4650,
          281,
          445,
          512,
          4974,
          27380,
          2594,
          9952,
          13,
          51764
        ]
      },
      {
        "avg_logprob": -0.2864688442599389,
        "compression_ratio": 1.4129032258064516,
        "end": 1235.8,
        "id": 286,
        "no_speech_prob": 0.00010889566328842193,
        "seek": 121480,
        "start": 1215.8,
        "temperature": 0,
        "text": " So very quickly, I just made a class called Particle that both has an xy as well as a dx and dy, or x speed and y speed I could have called them.",
        "tokens": [
          50414,
          407,
          588,
          2661,
          11,
          286,
          445,
          1027,
          257,
          1508,
          1219,
          4100,
          3520,
          300,
          1293,
          575,
          364,
          2031,
          88,
          382,
          731,
          382,
          257,
          30017,
          293,
          14584,
          11,
          420,
          2031,
          3073,
          293,
          288,
          3073,
          286,
          727,
          362,
          1219,
          552,
          13,
          51414
        ]
      },
      {
        "avg_logprob": -0.2864688442599389,
        "compression_ratio": 1.4129032258064516,
        "end": 1240.8,
        "id": 287,
        "no_speech_prob": 0.00010889566328842193,
        "seek": 121480,
        "start": 1235.8,
        "temperature": 0,
        "text": " The xy's move around and if it hits the edges, the direction is reversed.",
        "tokens": [
          51414,
          440,
          2031,
          88,
          311,
          1286,
          926,
          293,
          498,
          309,
          8664,
          264,
          8819,
          11,
          264,
          3513,
          307,
          30563,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.172345212710801,
        "compression_ratio": 1.55,
        "end": 1244.8,
        "id": 288,
        "no_speech_prob": 0.000017231537640327588,
        "seek": 124080,
        "start": 1241.8,
        "temperature": 0,
        "text": " So all of these are particles now.",
        "tokens": [
          50414,
          407,
          439,
          295,
          613,
          366,
          10007,
          586,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.172345212710801,
        "compression_ratio": 1.55,
        "end": 1248.8,
        "id": 289,
        "no_speech_prob": 0.000017231537640327588,
        "seek": 124080,
        "start": 1245.8,
        "temperature": 0,
        "text": " Adding particle.js to index.html.",
        "tokens": [
          50614,
          31204,
          12359,
          13,
          25530,
          281,
          8186,
          13,
          357,
          15480,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.172345212710801,
        "compression_ratio": 1.55,
        "end": 1251.8,
        "id": 290,
        "no_speech_prob": 0.000017231537640327588,
        "seek": 124080,
        "start": 1248.8,
        "temperature": 0,
        "text": " And I've got the exact same sketch.",
        "tokens": [
          50764,
          400,
          286,
          600,
          658,
          264,
          1900,
          912,
          12325,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.172345212710801,
        "compression_ratio": 1.55,
        "end": 1258.8,
        "id": 291,
        "no_speech_prob": 0.000017231537640327588,
        "seek": 124080,
        "start": 1251.8,
        "temperature": 0,
        "text": " The difference is now that these are all particle objects, instead of setting one to the mouse location,",
        "tokens": [
          50914,
          440,
          2649,
          307,
          586,
          300,
          613,
          366,
          439,
          12359,
          6565,
          11,
          2602,
          295,
          3287,
          472,
          281,
          264,
          9719,
          4914,
          11,
          51264
        ]
      },
      {
        "avg_logprob": -0.172345212710801,
        "compression_ratio": 1.55,
        "end": 1263.8,
        "id": 292,
        "no_speech_prob": 0.000017231537640327588,
        "seek": 124080,
        "start": 1258.8,
        "temperature": 0,
        "text": " I can call their update function, which causes it to bounce around.",
        "tokens": [
          51264,
          286,
          393,
          818,
          641,
          5623,
          2445,
          11,
          597,
          7700,
          309,
          281,
          15894,
          926,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.172345212710801,
        "compression_ratio": 1.55,
        "end": 1269.8,
        "id": 293,
        "no_speech_prob": 0.000017231537640327588,
        "seek": 124080,
        "start": 1265.8,
        "temperature": 0,
        "text": " I really don't know what I've made here, but it's kind of cool.",
        "tokens": [
          51614,
          286,
          534,
          500,
          380,
          458,
          437,
          286,
          600,
          1027,
          510,
          11,
          457,
          309,
          311,
          733,
          295,
          1627,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.15832863866755392,
        "compression_ratio": 1.6630824372759856,
        "end": 1274.8,
        "id": 294,
        "no_speech_prob": 0.0002131782821379602,
        "seek": 126980,
        "start": 1269.8,
        "temperature": 0,
        "text": " Let me try commenting out moving the anchor points of this Bézier curve.",
        "tokens": [
          50364,
          961,
          385,
          853,
          29590,
          484,
          2684,
          264,
          18487,
          2793,
          295,
          341,
          363,
          526,
          33352,
          7605,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.15832863866755392,
        "compression_ratio": 1.6630824372759856,
        "end": 1277.8,
        "id": 295,
        "no_speech_prob": 0.0002131782821379602,
        "seek": 126980,
        "start": 1274.8,
        "temperature": 0,
        "text": " So I have some semblance of control here.",
        "tokens": [
          50614,
          407,
          286,
          362,
          512,
          20775,
          37271,
          295,
          1969,
          510,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.15832863866755392,
        "compression_ratio": 1.6630824372759856,
        "end": 1279.8,
        "id": 296,
        "no_speech_prob": 0.0002131782821379602,
        "seek": 126980,
        "start": 1277.8,
        "temperature": 0,
        "text": " So now just the control points are moving.",
        "tokens": [
          50764,
          407,
          586,
          445,
          264,
          1969,
          2793,
          366,
          2684,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.15832863866755392,
        "compression_ratio": 1.6630824372759856,
        "end": 1286.8,
        "id": 297,
        "no_speech_prob": 0.0002131782821379602,
        "seek": 126980,
        "start": 1279.8,
        "temperature": 0,
        "text": " I don't know what I've made here, but hopefully I've opened up a door to a lot of creative possibilities that you could explore from this code.",
        "tokens": [
          50864,
          286,
          500,
          380,
          458,
          437,
          286,
          600,
          1027,
          510,
          11,
          457,
          4696,
          286,
          600,
          5625,
          493,
          257,
          2853,
          281,
          257,
          688,
          295,
          5880,
          12178,
          300,
          291,
          727,
          6839,
          490,
          341,
          3089,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.15832863866755392,
        "compression_ratio": 1.6630824372759856,
        "end": 1295.8,
        "id": 298,
        "no_speech_prob": 0.0002131782821379602,
        "seek": 126980,
        "start": 1286.8,
        "temperature": 0,
        "text": " I should say that I'm not so convinced that this implementation of the Bézier curve as this kind of nested calls to the lerp function is particularly efficient.",
        "tokens": [
          51214,
          286,
          820,
          584,
          300,
          286,
          478,
          406,
          370,
          12561,
          300,
          341,
          11420,
          295,
          264,
          363,
          526,
          33352,
          7605,
          382,
          341,
          733,
          295,
          15646,
          292,
          5498,
          281,
          264,
          32068,
          79,
          2445,
          307,
          4098,
          7148,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.15959461699140834,
        "compression_ratio": 1.6570247933884297,
        "end": 1306.8,
        "id": 299,
        "no_speech_prob": 0.013633743859827518,
        "seek": 129580,
        "start": 1295.8,
        "temperature": 0,
        "text": " But it does provide all of the data involved in the creation of the curve so that you can draw all sorts of visualizations of all of the properties.",
        "tokens": [
          50364,
          583,
          309,
          775,
          2893,
          439,
          295,
          264,
          1412,
          3288,
          294,
          264,
          8016,
          295,
          264,
          7605,
          370,
          300,
          291,
          393,
          2642,
          439,
          7527,
          295,
          5056,
          14455,
          295,
          439,
          295,
          264,
          7221,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.15959461699140834,
        "compression_ratio": 1.6570247933884297,
        "end": 1311.8,
        "id": 300,
        "no_speech_prob": 0.013633743859827518,
        "seek": 129580,
        "start": 1306.8,
        "temperature": 0,
        "text": " But ultimately, I could have just written a single function that uses this exact formula,",
        "tokens": [
          50914,
          583,
          6284,
          11,
          286,
          727,
          362,
          445,
          3720,
          257,
          2167,
          2445,
          300,
          4960,
          341,
          1900,
          8513,
          11,
          51164
        ]
      },
      {
        "avg_logprob": -0.15959461699140834,
        "compression_ratio": 1.6570247933884297,
        "end": 1315.8,
        "id": 301,
        "no_speech_prob": 0.013633743859827518,
        "seek": 129580,
        "start": 1311.8,
        "temperature": 0,
        "text": " which is the result of playing out all of these nested linear interpolations.",
        "tokens": [
          51164,
          597,
          307,
          264,
          1874,
          295,
          2433,
          484,
          439,
          295,
          613,
          15646,
          292,
          8213,
          44902,
          763,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.15959461699140834,
        "compression_ratio": 1.6570247933884297,
        "end": 1320.8,
        "id": 302,
        "no_speech_prob": 0.013633743859827518,
        "seek": 129580,
        "start": 1315.8,
        "temperature": 0,
        "text": " So I'll include as an extra example, a version of this with just that formula in it.",
        "tokens": [
          51364,
          407,
          286,
          603,
          4090,
          382,
          364,
          2857,
          1365,
          11,
          257,
          3037,
          295,
          341,
          365,
          445,
          300,
          8513,
          294,
          309,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.16494792522770343,
        "compression_ratio": 1.5767634854771784,
        "end": 1332.8,
        "id": 303,
        "no_speech_prob": 0.21992968022823334,
        "seek": 132080,
        "start": 1320.8,
        "temperature": 0,
        "text": " Well, I think that's everything you could possibly want to know about the Bézier function, the Bézier vertex, quadratic vertex, how to do all this stuff without those functions.",
        "tokens": [
          50364,
          1042,
          11,
          286,
          519,
          300,
          311,
          1203,
          291,
          727,
          6264,
          528,
          281,
          458,
          466,
          264,
          363,
          526,
          33352,
          2445,
          11,
          264,
          363,
          526,
          33352,
          28162,
          11,
          37262,
          28162,
          11,
          577,
          281,
          360,
          439,
          341,
          1507,
          1553,
          729,
          6828,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.16494792522770343,
        "compression_ratio": 1.5767634854771784,
        "end": 1334.8,
        "id": 304,
        "no_speech_prob": 0.21992968022823334,
        "seek": 132080,
        "start": 1332.8,
        "temperature": 0,
        "text": " Play with this, make your own variation of it.",
        "tokens": [
          50964,
          5506,
          365,
          341,
          11,
          652,
          428,
          1065,
          12990,
          295,
          309,
          13,
          51064
        ]
      },
      {
        "avg_logprob": -0.16494792522770343,
        "compression_ratio": 1.5767634854771784,
        "end": 1337.8,
        "id": 305,
        "no_speech_prob": 0.21992968022823334,
        "seek": 132080,
        "start": 1334.8,
        "temperature": 0,
        "text": " Share it with me at thecodingtrain.com.",
        "tokens": [
          51064,
          14945,
          309,
          365,
          385,
          412,
          264,
          66,
          8616,
          83,
          7146,
          13,
          1112,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.16494792522770343,
        "compression_ratio": 1.5767634854771784,
        "end": 1339.8,
        "id": 306,
        "no_speech_prob": 0.21992968022823334,
        "seek": 132080,
        "start": 1337.8,
        "temperature": 0,
        "text": " There's instructions there for how to do so.",
        "tokens": [
          51214,
          821,
          311,
          9415,
          456,
          337,
          577,
          281,
          360,
          370,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.16494792522770343,
        "compression_ratio": 1.5767634854771784,
        "end": 1343.8,
        "id": 307,
        "no_speech_prob": 0.21992968022823334,
        "seek": 132080,
        "start": 1339.8,
        "temperature": 0,
        "text": " I will take a look at some and feature them in a future live stream.",
        "tokens": [
          51314,
          286,
          486,
          747,
          257,
          574,
          412,
          512,
          293,
          4111,
          552,
          294,
          257,
          2027,
          1621,
          4309,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.1683193866471599,
        "compression_ratio": 1.5518518518518518,
        "end": 1346.8,
        "id": 308,
        "no_speech_prob": 0.4261435866355896,
        "seek": 134380,
        "start": 1343.8,
        "temperature": 0,
        "text": " Really, though, what I should be doing next, right?",
        "tokens": [
          50364,
          4083,
          11,
          1673,
          11,
          437,
          286,
          820,
          312,
          884,
          958,
          11,
          558,
          30,
          50514
        ]
      },
      {
        "avg_logprob": -0.1683193866471599,
        "compression_ratio": 1.5518518518518518,
        "end": 1351.8,
        "id": 309,
        "no_speech_prob": 0.4261435866355896,
        "seek": 134380,
        "start": 1346.8,
        "temperature": 0,
        "text": " I've got some spare, I've got like three more hours, is try it one more level in, right?",
        "tokens": [
          50514,
          286,
          600,
          658,
          512,
          13798,
          11,
          286,
          600,
          658,
          411,
          1045,
          544,
          2496,
          11,
          307,
          853,
          309,
          472,
          544,
          1496,
          294,
          11,
          558,
          30,
          50764
        ]
      },
      {
        "avg_logprob": -0.1683193866471599,
        "compression_ratio": 1.5518518518518518,
        "end": 1354.8,
        "id": 310,
        "no_speech_prob": 0.4261435866355896,
        "seek": 134380,
        "start": 1351.8,
        "temperature": 0,
        "text": " What if instead of four points, I now had five?",
        "tokens": [
          50764,
          708,
          498,
          2602,
          295,
          1451,
          2793,
          11,
          286,
          586,
          632,
          1732,
          30,
          50914
        ]
      },
      {
        "avg_logprob": -0.1683193866471599,
        "compression_ratio": 1.5518518518518518,
        "end": 1362.8,
        "id": 311,
        "no_speech_prob": 0.4261435866355896,
        "seek": 134380,
        "start": 1354.8,
        "temperature": 0,
        "text": " I think that would be a quartic Bézier lerp the cubics, which lerp the quadratics.",
        "tokens": [
          50914,
          286,
          519,
          300,
          576,
          312,
          257,
          20837,
          299,
          363,
          526,
          33352,
          32068,
          79,
          264,
          10057,
          1167,
          11,
          597,
          32068,
          79,
          264,
          10787,
          4481,
          1167,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.1683193866471599,
        "compression_ratio": 1.5518518518518518,
        "end": 1363.8,
        "id": 312,
        "no_speech_prob": 0.4261435866355896,
        "seek": 134380,
        "start": 1362.8,
        "temperature": 0,
        "text": " I'll leave that to you.",
        "tokens": [
          51314,
          286,
          603,
          1856,
          300,
          281,
          291,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.1683193866471599,
        "compression_ratio": 1.5518518518518518,
        "end": 1364.8,
        "id": 313,
        "no_speech_prob": 0.4261435866355896,
        "seek": 134380,
        "start": 1363.8,
        "temperature": 0,
        "text": " Please do that.",
        "tokens": [
          51364,
          2555,
          360,
          300,
          13,
          51414
        ]
      },
      {
        "avg_logprob": -0.1683193866471599,
        "compression_ratio": 1.5518518518518518,
        "end": 1365.8,
        "id": 314,
        "no_speech_prob": 0.4261435866355896,
        "seek": 134380,
        "start": 1364.8,
        "temperature": 0,
        "text": " Let me know how it goes in the comments.",
        "tokens": [
          51414,
          961,
          385,
          458,
          577,
          309,
          1709,
          294,
          264,
          3053,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.1683193866471599,
        "compression_ratio": 1.5518518518518518,
        "end": 1366.8,
        "id": 315,
        "no_speech_prob": 0.4261435866355896,
        "seek": 134380,
        "start": 1365.8,
        "temperature": 0,
        "text": " Can't wait to see.",
        "tokens": [
          51464,
          1664,
          380,
          1699,
          281,
          536,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.1683193866471599,
        "compression_ratio": 1.5518518518518518,
        "end": 1367.8,
        "id": 316,
        "no_speech_prob": 0.4261435866355896,
        "seek": 134380,
        "start": 1366.8,
        "temperature": 0,
        "text": " Goodbye.",
        "tokens": [
          51514,
          15528,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.1683193866471599,
        "compression_ratio": 1.5518518518518518,
        "end": 1368.8,
        "id": 317,
        "no_speech_prob": 0.4261435866355896,
        "seek": 134380,
        "start": 1367.8,
        "temperature": 0,
        "text": " See you in the next coding challenge.",
        "tokens": [
          51564,
          3008,
          291,
          294,
          264,
          958,
          17720,
          3430,
          13,
          51614
        ]
      }
    ],
    "transcription": " Hello and welcome to a very special coding challenge video. This video is part of Support P5 2020. I know it's 2021, but part of the campaign to raise money for the Processing Foundation in 2020. One of the rewards for making a donation was request a topic for a coding train video. And I'm here finally in the summer of 2021 to fulfill these requests. This video was is thanks to the generous donation from Jason Oswald, chair of computer science at Germantown Academy. If you're not familiar with the Processing Foundation, it is the organization that maintains P5.js processing. You can learn all about the Processing Foundation at the Processing Foundation website. And that's where you too can also make a donation. So much of what I do on the coding train, actually, basically all of what I do on the coding train would not be possible without the Processing Foundation's support and community. And it's the anything that I could do to give back I am thrilled to be able to do. So what function did Jason request that I explore in this particular video? It is the Bezier function. The Bezier function draws a Bezier curve named for the French engineer Pierre Bezier, who was working on I think modeling Renault cars in the 1960s and developed this curve. So in this video, I both want to demonstrate the Bezier function itself as it exists in P5.js, as well as the math behind it. But what if you didn't have that function? Could you get that curve on the screen just through your own calculations? In learning about the Bezier curve, your first stop should really be Rune Madsen's Programming Design Systems book. In the shapes chapter in the custom shapes section, he has a wonderful explanation of what a Bezier curve is, how it works, and what kinds of designs and shapes you can create in P5.js. Really, everything that I want to cover in this video is very well explained there. You might also want to wander your way over to the Wikipedia page for the Bezier curve. There you can find all the math behind how the curve is calculated. Now, what is most commonly referred to as a Bezier curve is actually known as a cubic Bezier curve. There's such thing as a linear Bezier curve, which is really just a line, a quadratic Bezier curve, and a cubic Bezier curve. The Bezier function in P5.js itself is the cubic Bezier curve, and that's what you usually find in things like Adobe Illustrator as well. A Bezier curve always has two anchor points. A linear Bezier curve is just a line between those two points. What's special about Bezier curves, what makes them curvy, is the fact that in addition to the anchor points, there are also control points. A quadratic Bezier curve involves just one control point. So I'm going to renumber these points now. The middle point is the control point, and it's like a gravitational pull. If I were to pull this point down, the curve would also be pulled down. And if you're thinking what I'm thinking, a cubic Bezier curve has two control points. Four points in total. Both of them controlling the shape of the curve. Additionally, a single Bezier curve, which has these four points, can be extended to what's known as a Bezier spline. By adding more control points along a sequence, we can create continuous geometry that bends according to a sequence of Bezier vertices. But I'm getting ahead of myself. Let's start by exploring the Bezier function in p5. Before I write the Bezier function, I just want to lay out where I imagine the anchor points and control points to be. So I'm going to draw four points. Anchor point, control point, control point, anchor point. The Bezier function itself takes eight arguments, four pairs of xy points. Anchor control, control, anchor. Interestingly, the Bezier function natively tries to create an enclosed shape with a fill. Is this what you expected? I always expect the curve itself to end up much closer to the control point, but we'll see in a moment when I start to look at the math why it's not coming all the way up to that control point. So we can see a little better. Let me move one with the mouse. Now as I move this control point around, we can see how the Bezier curve itself responds. Let me add a couple more lines. One thing you might notice now is that these lines are tangent to the curve. That's an important mathematical principle here in the Bezier curve. As an exercise, I might suggest can you make your own Bezier curve tool, but you can move all the points around individually. Now before I move on to the math behind the Bezier curve, I think it's worth exploring what the Bezier vertex function does in p5.js as well. Here we can see with begin shape and end shape, we can set single vertices. So if there are only two vertices, then I have a line that connects those two vertices. A Bezier vertex, and it's giving me an error because I haven't finished here, not only sets the next point that you're defining along the way of a shape, but two control points along the way that determine how you curve between this first vertex, which has to be specified with the plain vertex function, and the next vertex, which is the last two arguments of the Bezier vertex function. Now you see I have precisely the same curve that I had before, but instead of the full Bezier function, I set the first anchor point with vertex, and then the next two control points, and the next anchor point with Bezier vertex. What does this allow me to do? It allows me to continue. This is how I can start to create more elaborate shapes like the one that you're seeing here, by stringing together multiple Bezier vertices. And you can actually go quite far with this. There's also a quadratic vertex, which just involves a single control point. You can have regular vertices, and Bezier vertices, and quadratic vertices to create all sorts of possibilities. And remember, with a custom shape like this, you can also include a fill. This alone should give you plenty to explore. Just having the Bezier function and the Bezier vertex function right there in p5 opens up so many visual possibilities. I recently did a coding challenge about a self-avoiding walk, which connects a whole set of points with line segments, and just adding the variation of connecting all these points with Bezier vertices creates a very different visual quality to the output. So maybe just find a sketch where you put a lot of lines and vertices in, and try using Bezier curves instead. But we are limited here. Because we're using the Bezier function in p5 directly, we don't have access to all the points along the way. On the Wikipedia page, you might have noticed a diagram of the quadratic Bezier curve visualized with string art. We can do this with something really special, another function, a bonus that you're getting in this video for free, the lerp function. Now how in the world is the Bezier function related to the lerp function? Let's go back to a simple linear Bezier curve, or just a line between two points. I'm going to call this x0 and this one x1. The lerp function takes two values and returns back to you a value in between those two values some percentage along the way, between 0 and 100%. In this case, 0.5 would give me the value 50% of the way there. This value is often represented with the letter t. I think of it as like the amount of time to get from this point all the way to this point. The math for doing this is quite simple and intuitive. Let's imagine t is equal to 0.2. Well we want to start at this point and then we want to go about 20% of the way of the distance between x0 and x1. So start at x0 and add 20% of the distance, which is x1 minus x0, times 0.2. Another interpolation. Coming back to the Wikipedia page, you'll notice something interesting. Look at that formula right there under linear Bezier curve. Exactly this formula. Let's implement this in a code example. So here we have our straight line. I'm using the createVector function to pair an x and y value in a single variable. Now there's a lot more to vectors than that, but for our purposes here, I just don't want to have a lot of separate xy variables, so I've got p0.x, p0.y, p1.x, and p1.y. And of course I'm just using the line function to draw that line, but what if instead of using line, I wanted to draw the line myself as many different points along the way between those two anchor points. I'll start with a for loop. I'm choosing to loop t, starting at 0 all the way up to 100% or 1. Then let me just apply this formula. And look at that. There's that beautiful formula that I'm getting all of the points each an additional 10% along the way to the end. So by doing beginShape and endShape and changing it to vertex, I have my line again. Now while I've put in here the raw math for linear interpolation, p5 has the lerp function. So I believe I could get my code to be easier to read without the raw math there with just the lerp function itself. And there we go. Now I have that line drawn with the lerp function. Because I'm using p5 vector, I could actually use the p5 vector lerp function, which would allow me to sort of consolidate the xy together. But just to make everything really clear and for me to be able to follow it, I'm going to keep it as separate xy's for right now. But I'm making a Bezier curve. This is just a line. Lerp works for linear interpolation, lines. How do I make a quadratic Bezier from three points and lerp? Remember a quadratic Bezier has two anchor points and one control point. Probably ends up something like this. Well what if I wanted to do linear interpolation between x0 and x1? It would look like this. What if I wanted to do linear interpolation between x1 and x2? It would look like this. This is the linear interpolation between these two points. This is the linear interpolation between these two points. What if I took, and this is going to blow your mind, it's like lerpception. I can't say that. Lerpception. What if I lerped this point and this point by t as well? So I would be taking, if this whole thing were a and this whole thing were b, I would say a plus b minus a times t. So plug this whole thing into here and then plug this into here and this into here and let's go back and look at the Wikipedia page. That's exactly what's happening there and it's working all its way out and you can see eventually we end up with this particular formula there. I could go through and derive all of the math and then write it all out in my p5 code itself. But I've got the lerp function there. Or this is just this lerp function. This one is just this lerp function. And this is going to look really crazy but I can just put the lerps inside the lerp. Lerp the result of the first lerp with the result of the second lerp according to t. This is the quadratic Bezier. And if your mind's going where mine's going right now, just wait till we get to the cubic one. Let's put this into the code and see what we get. So the vertex now with the math that I had before is just drawing the line between p0 and p1. Let's call that x1 and y1. x2 and y2 is the lerp between p1 and p2. And then x is the lerp between x1 and x2. And look! There's our quadratic Bezier! All with lerp! I can't believe that worked! I love it so much! Let's have p1 be controlled by the mouse. Whoa, what's going on here? No, no, no, p1! I really did something crazy there. The other thing that's super interesting here is this value 0.1. That's the amount of space in between every point along the way that we're calculating. I could call that the delta, maybe. If delta were 0.5, you can see I'm just basically getting one point in between. A very small delta would be calculating lots of little points. In a way, I want to go back to drawing those points. And incidentally, what happens then if I connect x1 and y1 with x2 and y2 with a line? Look at that! Remember the string art on the Wikipedia page? That's what I've got right now! I don't even need to draw these points or the Bezier curve itself. The Bezier curve happens just by the sort of layering of all these lines. And because they're all separate lines, I can make them rainbow colored. So for whatever reason, I'm getting the first line because I'm starting at t equals 0. But I'm not getting what I expect to see as completely closing off at t is equal to 1. This is because of one of those pesky little JavaScript things where there's a rounding error and I'm not actually getting all the way up to t equals 1. Oh! There we go! So that's a little bit of a hack solution there, but I'm just going to leave it. And now I've closed off this shape. Oh, I love it so much! We're not done yet, though. I have got to do cubic. Oh boy, how am I going to do cubic? Well, I need another point. So p2 will be something like 400, 0. I'm just going to make something simple right now. And p3 is then the last point. And I'm going to write a function that's called quadratic. And quadratic is going to receive three points. And it's going to do exactly this. And return that result as a vector. I'm going to say v for vertex is the result of quadratic. Oh, and it needs a t, obviously. Okay, great. So I forgot, like, I can put in p3 here. And we can see this is what I had before. But I have it all in a function that's doing the quadratic Bézier math, all with Lerp. Now, what if I were to say v1 is the quadratic from p0 to p1 to p2. And v2 is the quadratic from p1, p2 to p3. Then I could just say that x is Lerp v1. Right? I need to Lerp both quadratics. Are you with me? If quadratic is Lerping two Lerps, then cubic is Lerping two quadratics. Find the quadratic Bézier between these three points. Find the quadratic Bézier between these three points. I totally numbered them wrong. x1, x2, x3. And then Lerp those two curves together. I've messed something up here. What did I mess up? Oh, oh, oh my goodness. What am I doing? There we go. Sorry for that. So this is correct in the sense that I've taken two quadratic curves and Lerped between them. I think it would be advisable for me to put all of this into a function called cubic. Which takes all the points. Then does the quadratic between the first three and the second three. Calculates the xy and returns that as a vector. So quadratic is Lerping two line segments. p0, p1, p1, p2. Cubic is Lerping two quadratics. Now I can just say let v is cubic. p0, p1, p2, p3, t. Vertex v.x, v.y. There we go. So this works. I've got the Bézier curve drawn as a sequence of vertices. But I lost the beautiful string art and the rainbow colors. So let's see if I can get that back. I'm going to add that stroke in there. Get rid of begin shape and end shape. And the vertices. And now let's just draw lines connecting various points. So what if here in cubic I connect v1 to v2? Ooh, look at that. And I can see the Bézier curve there as the sort of tangents of all of these lines mixed together. But I could make this really crazy and I could also draw all those quadratic connections. Whoa, I did something wrong here. X1, y1, x2, y2. I got a little overly excited there. There we go. Look at this. This is two quadratic curves meeting in the middle to draw the Bézier. I could add a little bit of alpha here just so you get some blending. I could go on forever here. But what if I, instead of just moving one point around with the mouse, let me move all the points around according to just some random bouncing ball logic. So very quickly, I just made a class called Particle that both has an xy as well as a dx and dy, or x speed and y speed I could have called them. The xy's move around and if it hits the edges, the direction is reversed. So all of these are particles now. Adding particle.js to index.html. And I've got the exact same sketch. The difference is now that these are all particle objects, instead of setting one to the mouse location, I can call their update function, which causes it to bounce around. I really don't know what I've made here, but it's kind of cool. Let me try commenting out moving the anchor points of this Bézier curve. So I have some semblance of control here. So now just the control points are moving. I don't know what I've made here, but hopefully I've opened up a door to a lot of creative possibilities that you could explore from this code. I should say that I'm not so convinced that this implementation of the Bézier curve as this kind of nested calls to the lerp function is particularly efficient. But it does provide all of the data involved in the creation of the curve so that you can draw all sorts of visualizations of all of the properties. But ultimately, I could have just written a single function that uses this exact formula, which is the result of playing out all of these nested linear interpolations. So I'll include as an extra example, a version of this with just that formula in it. Well, I think that's everything you could possibly want to know about the Bézier function, the Bézier vertex, quadratic vertex, how to do all this stuff without those functions. Play with this, make your own variation of it. Share it with me at thecodingtrain.com. There's instructions there for how to do so. I will take a look at some and feature them in a future live stream. Really, though, what I should be doing next, right? I've got some spare, I've got like three more hours, is try it one more level in, right? What if instead of four points, I now had five? I think that would be a quartic Bézier lerp the cubics, which lerp the quadratics. I'll leave that to you. Please do that. Let me know how it goes in the comments. Can't wait to see. Goodbye. See you in the next coding challenge.",
    "translation": null
  },
  "error": null,
  "status": "succeeded",
  "created_at": "2023-09-26T21:03:29.853582Z",
  "started_at": "2023-09-26T21:12:15.39288Z",
  "completed_at": "2023-09-26T21:16:59.798892Z",
  "webhook": "https://83ceaa0b612c.ngrok.app/?video_id=enNfb6p3j_g",
  "webhook_events_filter": [
    "completed"
  ],
  "metrics": {
    "predict_time": 284.406012
  },
  "urls": {
    "cancel": "https://api.replicate.com/v1/predictions/b7byqgzbtjqphdqjxn2hfq3isi/cancel",
    "get": "https://api.replicate.com/v1/predictions/b7byqgzbtjqphdqjxn2hfq3isi"
  }
}