{
  "id": "j6kl5yrboja22ga25rwf253bum",
  "version": "91ee9c0c3df30478510ff8c8a3a545add1ad0259ad3a9f78fba57fbc05ee64f7",
  "input": {
    "audio": "https://upcdn.io/FW25b4F/raw/coding-train/rVBTxnRyOuE.m4a"
  },
  "logs": "Transcribe with large-v2 model\nDetected language: English\n  0%|          | 0/246656 [00:00<?, ?frames/s]\n  1%|          | 2888/246656 [00:07<10:14, 396.91frames/s]\n  2%|▏         | 5360/246656 [00:13<10:00, 402.02frames/s]\n  3%|▎         | 8136/246656 [00:19<09:33, 415.57frames/s]\n  4%|▍         | 11016/246656 [00:27<09:57, 394.61frames/s]\n  5%|▌         | 13528/246656 [00:34<09:51, 394.15frames/s]\n  6%|▋         | 15896/246656 [00:39<09:24, 408.68frames/s]\n  7%|▋         | 18456/246656 [00:46<09:33, 397.94frames/s]\n  9%|▊         | 21064/246656 [00:52<09:09, 410.21frames/s]\n 10%|▉         | 23848/246656 [01:00<09:40, 383.70frames/s]\n 11%|█         | 26720/246656 [01:07<09:27, 387.82frames/s]\n 12%|█▏        | 29272/246656 [01:14<09:18, 389.06frames/s]\n 13%|█▎        | 31280/246656 [01:18<09:04, 395.37frames/s]\n 14%|█▍        | 34232/246656 [01:24<08:16, 427.56frames/s]\n 15%|█▌        | 37048/246656 [01:31<08:08, 429.24frames/s]\n 16%|█▌        | 39944/246656 [01:37<07:45, 444.12frames/s]\n 17%|█▋        | 42640/246656 [01:43<07:42, 440.99frames/s]\n 18%|█▊        | 45336/246656 [01:49<07:31, 445.69frames/s]\n 19%|█▉        | 48016/246656 [01:56<07:42, 429.33frames/s]\n 21%|██        | 50968/246656 [02:05<08:18, 392.58frames/s]\n 22%|██▏       | 53112/246656 [02:11<08:28, 380.90frames/s]\n 23%|██▎       | 55832/246656 [02:20<09:10, 346.90frames/s]\n 24%|██▎       | 58280/246656 [02:27<08:55, 351.75frames/s]\n 24%|██▍       | 60312/246656 [02:32<08:29, 365.80frames/s]\n 25%|██▌       | 62424/246656 [02:36<07:58, 384.79frames/s]\n 26%|██▋       | 65016/246656 [02:42<07:30, 403.08frames/s]\n 27%|██▋       | 67752/246656 [02:49<07:17, 409.35frames/s]\n 29%|██▊       | 70320/246656 [02:55<07:08, 411.65frames/s]\n 30%|██▉       | 73088/246656 [03:01<06:51, 421.56frames/s]\n 31%|███       | 75968/246656 [03:10<07:18, 388.84frames/s]\n 32%|███▏      | 78896/246656 [03:17<07:00, 399.32frames/s]\n 33%|███▎      | 81496/246656 [03:21<06:24, 430.03frames/s]\n 34%|███▍      | 84032/246656 [03:28<06:37, 408.63frames/s]\n 35%|███▌      | 86912/246656 [03:35<06:25, 414.13frames/s]\n 36%|███▋      | 89680/246656 [03:42<06:20, 412.18frames/s]\n 37%|███▋      | 92104/246656 [03:49<06:28, 397.58frames/s]\n 38%|███▊      | 94544/246656 [03:53<05:56, 426.80frames/s]\n 39%|███▉      | 97032/246656 [03:58<05:32, 449.76frames/s]\n 40%|████      | 99152/246656 [04:03<05:24, 455.16frames/s]\n 41%|████      | 101512/246656 [04:08<05:16, 458.90frames/s]\n 42%|████▏     | 103816/246656 [04:12<05:01, 473.02frames/s]\n 43%|████▎     | 106632/246656 [04:18<04:55, 474.24frames/s]\n 44%|████▍     | 109296/246656 [04:24<05:00, 456.95frames/s]\n 45%|████▌     | 111808/246656 [04:29<04:41, 478.85frames/s]\n 46%|████▋     | 114688/246656 [04:34<04:25, 497.67frames/s]\n 48%|████▊     | 117320/246656 [04:40<04:28, 480.93frames/s]\n 49%|████▊     | 120048/246656 [04:45<04:13, 500.25frames/s]\n 50%|████▉     | 122936/246656 [04:52<04:16, 482.66frames/s]\n 51%|█████     | 125800/246656 [04:57<04:05, 492.93frames/s]\n 52%|█████▏    | 127432/246656 [05:01<04:14, 469.03frames/s]\n 53%|█████▎    | 130112/246656 [05:05<03:44, 519.92frames/s]\n 54%|█████▎    | 132448/246656 [05:11<03:52, 491.19frames/s]\n 55%|█████▍    | 134896/246656 [05:17<04:00, 464.33frames/s]\n 56%|█████▌    | 137144/246656 [05:24<04:36, 396.38frames/s]\n 57%|█████▋    | 140112/246656 [05:31<04:15, 416.56frames/s]\n 58%|█████▊    | 142736/246656 [05:38<04:13, 409.40frames/s]\n 59%|█████▉    | 145432/246656 [05:45<04:12, 400.11frames/s]\n 60%|██████    | 148400/246656 [05:52<04:07, 396.45frames/s]\n 61%|██████▏   | 151352/246656 [05:59<03:49, 415.05frames/s]\n 62%|██████▏   | 153664/246656 [06:04<03:41, 420.76frames/s]\n 63%|██████▎   | 155920/246656 [06:09<03:30, 431.97frames/s]\n 64%|██████▍   | 158408/246656 [06:13<03:12, 457.38frames/s]\n 65%|██████▌   | 160480/246656 [06:19<03:22, 425.86frames/s]\n 66%|██████▌   | 163016/246656 [06:25<03:14, 429.84frames/s]\n 67%|██████▋   | 165288/246656 [06:30<03:02, 445.65frames/s]\n 68%|██████▊   | 167432/246656 [06:35<02:58, 443.56frames/s]\n 69%|██████▉   | 170160/246656 [06:41<02:51, 444.87frames/s]\n 70%|███████   | 172728/246656 [06:47<02:53, 425.32frames/s]\n 71%|███████   | 175232/246656 [06:54<02:52, 414.46frames/s]\n 72%|███████▏  | 177680/246656 [07:00<02:50, 405.07frames/s]\n 73%|███████▎  | 180280/246656 [07:05<02:31, 438.11frames/s]\n 74%|███████▍  | 182808/246656 [07:09<02:16, 467.31frames/s]\n 75%|███████▌  | 185808/246656 [07:17<02:19, 437.10frames/s]\n 76%|███████▌  | 188008/246656 [07:22<02:12, 441.34frames/s]\n 77%|███████▋  | 190696/246656 [07:27<01:59, 469.74frames/s]\n 78%|███████▊  | 193224/246656 [07:32<01:48, 492.50frames/s]\n 80%|███████▉  | 196224/246656 [07:37<01:37, 516.49frames/s]\n 80%|████████  | 198376/246656 [07:42<01:37, 495.71frames/s]\n 82%|████████▏ | 201048/246656 [07:47<01:32, 494.99frames/s]\n 83%|████████▎ | 203592/246656 [07:52<01:25, 505.25frames/s]\n 83%|████████▎ | 205888/246656 [07:56<01:19, 509.93frames/s]\n 85%|████████▍ | 208824/246656 [08:01<01:12, 525.14frames/s]\n 86%|████████▌ | 211056/246656 [08:07<01:13, 481.56frames/s]\n 86%|████████▋ | 213112/246656 [08:13<01:14, 450.26frames/s]\n 88%|████████▊ | 215824/246656 [08:20<01:11, 428.67frames/s]\n 88%|████████▊ | 218128/246656 [08:25<01:06, 429.28frames/s]\n 89%|████████▉ | 220680/246656 [08:30<00:58, 443.39frames/s]\n 90%|█████████ | 223184/246656 [08:35<00:51, 452.31frames/s]\n 92%|█████████▏| 225784/246656 [08:43<00:50, 417.09frames/s]\n 93%|█████████▎| 228696/246656 [08:51<00:45, 394.95frames/s]\n 94%|█████████▍| 231272/246656 [08:57<00:38, 400.12frames/s]\n 95%|█████████▍| 234200/246656 [09:05<00:32, 386.27frames/s]\n 96%|█████████▌| 236920/246656 [09:12<00:25, 385.73frames/s]\n 97%|█████████▋| 239416/246656 [09:17<00:17, 425.88frames/s]\n 98%|█████████▊| 242384/246656 [09:24<00:10, 423.70frames/s]\n 99%|█████████▉| 245160/246656 [09:31<00:03, 402.63frames/s]\n100%|██████████| 246656/246656 [09:33<00:00, 442.58frames/s]\n100%|██████████| 246656/246656 [09:33<00:00, 429.79frames/s]\n",
  "output": {
    "detected_language": "english",
    "segments": [
      {
        "avg_logprob": -0.22727385434237393,
        "compression_ratio": 1.6642857142857144,
        "end": 5.68,
        "id": 0,
        "no_speech_prob": 0.026335041970014572,
        "seek": 0,
        "start": 0,
        "temperature": 0,
        "text": " Hello, welcome to a special Coding Train Earth Day coding challenge. So today I'm going to",
        "tokens": [
          50364,
          2425,
          11,
          2928,
          281,
          257,
          2121,
          383,
          8616,
          28029,
          4755,
          5226,
          17720,
          3430,
          13,
          407,
          965,
          286,
          478,
          516,
          281,
          50648
        ]
      },
      {
        "avg_logprob": -0.22727385434237393,
        "compression_ratio": 1.6642857142857144,
        "end": 12.4,
        "id": 1,
        "no_speech_prob": 0.026335041970014572,
        "seek": 0,
        "start": 5.68,
        "temperature": 0,
        "text": " attempt to make my own version, a p5.js version, of the climate spiral. This is a visualization",
        "tokens": [
          50648,
          5217,
          281,
          652,
          452,
          1065,
          3037,
          11,
          257,
          280,
          20,
          13,
          25530,
          3037,
          11,
          295,
          264,
          5659,
          25165,
          13,
          639,
          307,
          257,
          25801,
          50984
        ]
      },
      {
        "avg_logprob": -0.22727385434237393,
        "compression_ratio": 1.6642857142857144,
        "end": 17.52,
        "id": 2,
        "no_speech_prob": 0.026335041970014572,
        "seek": 0,
        "start": 12.4,
        "temperature": 0,
        "text": " designed by climate scientist Ed Hawkins from the University of Reading. So take a look at Ed",
        "tokens": [
          50984,
          4761,
          538,
          5659,
          12662,
          3977,
          9325,
          10277,
          490,
          264,
          3535,
          295,
          29766,
          13,
          407,
          747,
          257,
          574,
          412,
          3977,
          51240
        ]
      },
      {
        "avg_logprob": -0.22727385434237393,
        "compression_ratio": 1.6642857142857144,
        "end": 23.04,
        "id": 3,
        "no_speech_prob": 0.026335041970014572,
        "seek": 0,
        "start": 17.52,
        "temperature": 0,
        "text": " Hawkins's website, many other data sets and visualizations of those data sets all around",
        "tokens": [
          51240,
          9325,
          10277,
          311,
          3144,
          11,
          867,
          661,
          1412,
          6352,
          293,
          5056,
          14455,
          295,
          729,
          1412,
          6352,
          439,
          926,
          51516
        ]
      },
      {
        "avg_logprob": -0.22727385434237393,
        "compression_ratio": 1.6642857142857144,
        "end": 28.88,
        "id": 4,
        "no_speech_prob": 0.026335041970014572,
        "seek": 0,
        "start": 23.04,
        "temperature": 0,
        "text": " climate. So in the spiral, what you are seeing are monthly global temperature anomalies starting",
        "tokens": [
          51516,
          5659,
          13,
          407,
          294,
          264,
          25165,
          11,
          437,
          291,
          366,
          2577,
          366,
          12878,
          4338,
          4292,
          24769,
          48872,
          2891,
          51808
        ]
      },
      {
        "avg_logprob": -0.18676732510936503,
        "compression_ratio": 1.5956521739130434,
        "end": 34.96,
        "id": 5,
        "no_speech_prob": 0.0025907461531460285,
        "seek": 2888,
        "start": 28.88,
        "temperature": 0,
        "text": " with the year 1880 all the way up to 2022. So what is a temperature anomaly? It's a fancy way",
        "tokens": [
          50364,
          365,
          264,
          1064,
          2443,
          4702,
          439,
          264,
          636,
          493,
          281,
          20229,
          13,
          407,
          437,
          307,
          257,
          4292,
          42737,
          30,
          467,
          311,
          257,
          10247,
          636,
          50668
        ]
      },
      {
        "avg_logprob": -0.18676732510936503,
        "compression_ratio": 1.5956521739130434,
        "end": 41.28,
        "id": 6,
        "no_speech_prob": 0.0025907461531460285,
        "seek": 2888,
        "start": 34.96,
        "temperature": 0,
        "text": " of saying a change, a difference, a deviation from a long-term global average. So what's a",
        "tokens": [
          50668,
          295,
          1566,
          257,
          1319,
          11,
          257,
          2649,
          11,
          257,
          25163,
          490,
          257,
          938,
          12,
          7039,
          4338,
          4274,
          13,
          407,
          437,
          311,
          257,
          50984
        ]
      },
      {
        "avg_logprob": -0.18676732510936503,
        "compression_ratio": 1.5956521739130434,
        "end": 46.879999999999995,
        "id": 7,
        "no_speech_prob": 0.0025907461531460285,
        "seek": 2888,
        "start": 41.28,
        "temperature": 0,
        "text": " long-term global average? Well, we need to pick something. So for this climate spiral, the period",
        "tokens": [
          50984,
          938,
          12,
          7039,
          4338,
          4274,
          30,
          1042,
          11,
          321,
          643,
          281,
          1888,
          746,
          13,
          407,
          337,
          341,
          5659,
          25165,
          11,
          264,
          2896,
          51264
        ]
      },
      {
        "avg_logprob": -0.18676732510936503,
        "compression_ratio": 1.5956521739130434,
        "end": 53.599999999999994,
        "id": 8,
        "no_speech_prob": 0.0025907461531460285,
        "seek": 2888,
        "start": 46.879999999999995,
        "temperature": 0,
        "text": " from 1951 to 1980 is used. So that 30 year, approximately 30 year period, the global",
        "tokens": [
          51264,
          490,
          10858,
          16,
          281,
          13626,
          307,
          1143,
          13,
          407,
          300,
          2217,
          1064,
          11,
          10447,
          2217,
          1064,
          2896,
          11,
          264,
          4338,
          51600
        ]
      },
      {
        "avg_logprob": -0.15719582899561468,
        "compression_ratio": 1.801498127340824,
        "end": 59.28,
        "id": 9,
        "no_speech_prob": 0.03676632419228554,
        "seek": 5360,
        "start": 53.6,
        "temperature": 0,
        "text": " surface temperature for those years is used as a baseline. Anything else you're seeing is relative",
        "tokens": [
          50364,
          3753,
          4292,
          337,
          729,
          924,
          307,
          1143,
          382,
          257,
          20518,
          13,
          11998,
          1646,
          291,
          434,
          2577,
          307,
          4972,
          50648
        ]
      },
      {
        "avg_logprob": -0.15719582899561468,
        "compression_ratio": 1.801498127340824,
        "end": 64.4,
        "id": 10,
        "no_speech_prob": 0.03676632419228554,
        "seek": 5360,
        "start": 59.28,
        "temperature": 0,
        "text": " to that baseline. So in the years prior, you probably see a lot of whites and blues, which",
        "tokens": [
          50648,
          281,
          300,
          20518,
          13,
          407,
          294,
          264,
          924,
          4059,
          11,
          291,
          1391,
          536,
          257,
          688,
          295,
          21909,
          293,
          24244,
          11,
          597,
          50904
        ]
      },
      {
        "avg_logprob": -0.15719582899561468,
        "compression_ratio": 1.801498127340824,
        "end": 70.16,
        "id": 11,
        "no_speech_prob": 0.03676632419228554,
        "seek": 5360,
        "start": 64.4,
        "temperature": 0,
        "text": " are showing cooler temperatures, lower than that baseline. And as the years go on, the oranges and",
        "tokens": [
          50904,
          366,
          4099,
          15566,
          12633,
          11,
          3126,
          813,
          300,
          20518,
          13,
          400,
          382,
          264,
          924,
          352,
          322,
          11,
          264,
          35474,
          293,
          51192
        ]
      },
      {
        "avg_logprob": -0.15719582899561468,
        "compression_ratio": 1.801498127340824,
        "end": 76,
        "id": 12,
        "no_speech_prob": 0.03676632419228554,
        "seek": 5360,
        "start": 70.16,
        "temperature": 0,
        "text": " reds in the visualization show warmer temperatures, global warming. The temperatures themselves, the",
        "tokens": [
          51192,
          2182,
          82,
          294,
          264,
          25801,
          855,
          21599,
          12633,
          11,
          4338,
          17983,
          13,
          440,
          12633,
          2969,
          11,
          264,
          51484
        ]
      },
      {
        "avg_logprob": -0.15719582899561468,
        "compression_ratio": 1.801498127340824,
        "end": 81.36,
        "id": 13,
        "no_speech_prob": 0.03676632419228554,
        "seek": 5360,
        "start": 76,
        "temperature": 0,
        "text": " data set is from the NASA Goddard Institute for Space Studies Surface Temperature Analysis.",
        "tokens": [
          51484,
          1412,
          992,
          307,
          490,
          264,
          12077,
          1265,
          67,
          515,
          9446,
          337,
          8705,
          17515,
          36052,
          34864,
          1503,
          38172,
          13,
          51752
        ]
      },
      {
        "avg_logprob": -0.16810042517525808,
        "compression_ratio": 1.6411149825783973,
        "end": 85.68,
        "id": 14,
        "no_speech_prob": 0.0025507851969450712,
        "seek": 8136,
        "start": 81.36,
        "temperature": 0,
        "text": " They publish an estimate of global surface temperature change. And what I want to do here",
        "tokens": [
          50364,
          814,
          11374,
          364,
          12539,
          295,
          4338,
          3753,
          4292,
          1319,
          13,
          400,
          437,
          286,
          528,
          281,
          360,
          510,
          50580
        ]
      },
      {
        "avg_logprob": -0.16810042517525808,
        "compression_ratio": 1.6411149825783973,
        "end": 92,
        "id": 15,
        "no_speech_prob": 0.0025507851969450712,
        "seek": 8136,
        "start": 85.68,
        "temperature": 0,
        "text": " in this coding challenge, A, is show you how to download and parse a data set using p5.js.",
        "tokens": [
          50580,
          294,
          341,
          17720,
          3430,
          11,
          316,
          11,
          307,
          855,
          291,
          577,
          281,
          5484,
          293,
          48377,
          257,
          1412,
          992,
          1228,
          280,
          20,
          13,
          25530,
          13,
          50896
        ]
      },
      {
        "avg_logprob": -0.16810042517525808,
        "compression_ratio": 1.6411149825783973,
        "end": 99.2,
        "id": 16,
        "no_speech_prob": 0.0025507851969450712,
        "seek": 8136,
        "start": 92,
        "temperature": 0,
        "text": " And by recreating that climate spiral, it's giving us an example visualization that communicates and",
        "tokens": [
          50896,
          400,
          538,
          850,
          44613,
          300,
          5659,
          25165,
          11,
          309,
          311,
          2902,
          505,
          364,
          1365,
          25801,
          300,
          3363,
          1024,
          293,
          51256
        ]
      },
      {
        "avg_logprob": -0.16810042517525808,
        "compression_ratio": 1.6411149825783973,
        "end": 105.28,
        "id": 17,
        "no_speech_prob": 0.0025507851969450712,
        "seek": 8136,
        "start": 99.2,
        "temperature": 0,
        "text": " tells a story about a particular data set. Now, there are many other data sets around climate.",
        "tokens": [
          51256,
          5112,
          257,
          1657,
          466,
          257,
          1729,
          1412,
          992,
          13,
          823,
          11,
          456,
          366,
          867,
          661,
          1412,
          6352,
          926,
          5659,
          13,
          51560
        ]
      },
      {
        "avg_logprob": -0.16810042517525808,
        "compression_ratio": 1.6411149825783973,
        "end": 110.16,
        "id": 18,
        "no_speech_prob": 0.0025507851969450712,
        "seek": 8136,
        "start": 105.28,
        "temperature": 0,
        "text": " One that you might take a look at right now is the average temperature of the ocean's surface.",
        "tokens": [
          51560,
          1485,
          300,
          291,
          1062,
          747,
          257,
          574,
          412,
          558,
          586,
          307,
          264,
          4274,
          4292,
          295,
          264,
          7810,
          311,
          3753,
          13,
          51804
        ]
      },
      {
        "avg_logprob": -0.18704062241774339,
        "compression_ratio": 1.5418326693227091,
        "end": 115.52,
        "id": 19,
        "no_speech_prob": 0.00012338442320469767,
        "seek": 11016,
        "start": 110.16,
        "temperature": 0,
        "text": " Preliminary data from the National Oceanic and Atmospheric Administration, or NOAA, recently",
        "tokens": [
          50364,
          6001,
          4197,
          4066,
          1412,
          490,
          264,
          4862,
          18101,
          299,
          293,
          1711,
          76,
          25145,
          17187,
          11,
          420,
          9146,
          5265,
          11,
          3938,
          50632
        ]
      },
      {
        "avg_logprob": -0.18704062241774339,
        "compression_ratio": 1.5418326693227091,
        "end": 121.2,
        "id": 20,
        "no_speech_prob": 0.00012338442320469767,
        "seek": 11016,
        "start": 115.52,
        "temperature": 0,
        "text": " showed that the average temperature at the ocean's surface has been at 21.1 Celsius since the start",
        "tokens": [
          50632,
          4712,
          300,
          264,
          4274,
          4292,
          412,
          264,
          7810,
          311,
          3753,
          575,
          668,
          412,
          5080,
          13,
          16,
          22658,
          1670,
          264,
          722,
          50916
        ]
      },
      {
        "avg_logprob": -0.18704062241774339,
        "compression_ratio": 1.5418326693227091,
        "end": 128.96,
        "id": 21,
        "no_speech_prob": 0.00012338442320469767,
        "seek": 11016,
        "start": 121.2,
        "temperature": 0,
        "text": " of April, which is beating the previous high of 21 degrees Celsius set in 2016, a very alarming",
        "tokens": [
          50916,
          295,
          6929,
          11,
          597,
          307,
          13497,
          264,
          3894,
          1090,
          295,
          5080,
          5310,
          22658,
          992,
          294,
          6549,
          11,
          257,
          588,
          44043,
          51304
        ]
      },
      {
        "avg_logprob": -0.18704062241774339,
        "compression_ratio": 1.5418326693227091,
        "end": 135.28,
        "id": 22,
        "no_speech_prob": 0.00012338442320469767,
        "seek": 11016,
        "start": 128.96,
        "temperature": 0,
        "text": " change. The data is clear. The earth is warming. Helping people to see that and communicate around",
        "tokens": [
          51304,
          1319,
          13,
          440,
          1412,
          307,
          1850,
          13,
          440,
          4120,
          307,
          17983,
          13,
          6128,
          3381,
          561,
          281,
          536,
          300,
          293,
          7890,
          926,
          51620
        ]
      },
      {
        "avg_logprob": -0.195125168020075,
        "compression_ratio": 1.4803149606299213,
        "end": 140.72,
        "id": 23,
        "no_speech_prob": 0.21193203330039978,
        "seek": 13528,
        "start": 135.28,
        "temperature": 0,
        "text": " that data is absolutely a challenge. I hope that this video might give you the tools to start",
        "tokens": [
          50364,
          300,
          1412,
          307,
          3122,
          257,
          3430,
          13,
          286,
          1454,
          300,
          341,
          960,
          1062,
          976,
          291,
          264,
          3873,
          281,
          722,
          50636
        ]
      },
      {
        "avg_logprob": -0.195125168020075,
        "compression_ratio": 1.4803149606299213,
        "end": 145.84,
        "id": 24,
        "no_speech_prob": 0.21193203330039978,
        "seek": 13528,
        "start": 140.72,
        "temperature": 0,
        "text": " thinking about that. And maybe you'll be inspired to create your own data visualization around",
        "tokens": [
          50636,
          1953,
          466,
          300,
          13,
          400,
          1310,
          291,
          603,
          312,
          7547,
          281,
          1884,
          428,
          1065,
          1412,
          25801,
          926,
          50892
        ]
      },
      {
        "avg_logprob": -0.195125168020075,
        "compression_ratio": 1.4803149606299213,
        "end": 152.56,
        "id": 25,
        "no_speech_prob": 0.21193203330039978,
        "seek": 13528,
        "start": 145.84,
        "temperature": 0,
        "text": " climate. All right. So first stop is the NASA website. Here we've got an explanation all about",
        "tokens": [
          50892,
          5659,
          13,
          1057,
          558,
          13,
          407,
          700,
          1590,
          307,
          264,
          12077,
          3144,
          13,
          1692,
          321,
          600,
          658,
          364,
          10835,
          439,
          466,
          51228
        ]
      },
      {
        "avg_logprob": -0.195125168020075,
        "compression_ratio": 1.4803149606299213,
        "end": 158.96,
        "id": 26,
        "no_speech_prob": 0.21193203330039978,
        "seek": 13528,
        "start": 152.56,
        "temperature": 0,
        "text": " the GISS surface temperature analysis. You can see the latest update here, March 15th, 2023.",
        "tokens": [
          51228,
          264,
          47860,
          50,
          3753,
          4292,
          5215,
          13,
          509,
          393,
          536,
          264,
          6792,
          5623,
          510,
          11,
          6129,
          2119,
          392,
          11,
          44377,
          13,
          51548
        ]
      },
      {
        "avg_logprob": -0.18954204110538259,
        "compression_ratio": 1.6355932203389831,
        "end": 165.04000000000002,
        "id": 27,
        "no_speech_prob": 0.003272982547059655,
        "seek": 15896,
        "start": 158.96,
        "temperature": 0,
        "text": " Scrolling down, I've got the various data sets that I can download. And I'm going to use the",
        "tokens": [
          50364,
          2747,
          18688,
          760,
          11,
          286,
          600,
          658,
          264,
          3683,
          1412,
          6352,
          300,
          286,
          393,
          5484,
          13,
          400,
          286,
          478,
          516,
          281,
          764,
          264,
          50668
        ]
      },
      {
        "avg_logprob": -0.18954204110538259,
        "compression_ratio": 1.6355932203389831,
        "end": 170.56,
        "id": 28,
        "no_speech_prob": 0.003272982547059655,
        "seek": 15896,
        "start": 165.04000000000002,
        "temperature": 0,
        "text": " global mean monthly, seasonal, and annual means, 1880 to the present. Now, there are two formats",
        "tokens": [
          50668,
          4338,
          914,
          12878,
          11,
          27421,
          11,
          293,
          9784,
          1355,
          11,
          2443,
          4702,
          281,
          264,
          1974,
          13,
          823,
          11,
          456,
          366,
          732,
          25879,
          50944
        ]
      },
      {
        "avg_logprob": -0.18954204110538259,
        "compression_ratio": 1.6355932203389831,
        "end": 178.24,
        "id": 29,
        "no_speech_prob": 0.003272982547059655,
        "seek": 15896,
        "start": 170.56,
        "temperature": 0,
        "text": " here, TXT and CSV. My assumption is the TXT is a tab delimited, meaning the data points in the",
        "tokens": [
          50944,
          510,
          11,
          314,
          20542,
          293,
          48814,
          13,
          1222,
          15302,
          307,
          264,
          314,
          20542,
          307,
          257,
          4421,
          1103,
          332,
          1226,
          11,
          3620,
          264,
          1412,
          2793,
          294,
          264,
          51328
        ]
      },
      {
        "avg_logprob": -0.18954204110538259,
        "compression_ratio": 1.6355932203389831,
        "end": 184.56,
        "id": 30,
        "no_speech_prob": 0.003272982547059655,
        "seek": 15896,
        "start": 178.24,
        "temperature": 0,
        "text": " file are separated by tabs. And the CSV is a comma separated values, or the data points are separated",
        "tokens": [
          51328,
          3991,
          366,
          12005,
          538,
          20743,
          13,
          400,
          264,
          48814,
          307,
          257,
          22117,
          12005,
          4190,
          11,
          420,
          264,
          1412,
          2793,
          366,
          12005,
          51644
        ]
      },
      {
        "avg_logprob": -0.18785146872202554,
        "compression_ratio": 1.496,
        "end": 189.76,
        "id": 31,
        "no_speech_prob": 0.14031478762626648,
        "seek": 18456,
        "start": 184.56,
        "temperature": 0,
        "text": " by commas. I could use either in P5, but I generally have an easier time working with CSVs.",
        "tokens": [
          50364,
          538,
          800,
          296,
          13,
          286,
          727,
          764,
          2139,
          294,
          430,
          20,
          11,
          457,
          286,
          5101,
          362,
          364,
          3571,
          565,
          1364,
          365,
          48814,
          82,
          13,
          50624
        ]
      },
      {
        "avg_logprob": -0.18785146872202554,
        "compression_ratio": 1.496,
        "end": 198,
        "id": 32,
        "no_speech_prob": 0.14031478762626648,
        "seek": 18456,
        "start": 189.76,
        "temperature": 0,
        "text": " So let's download that file. I can take a quick peek at it just with Mac preview. And there we go.",
        "tokens": [
          50624,
          407,
          718,
          311,
          5484,
          300,
          3991,
          13,
          286,
          393,
          747,
          257,
          1702,
          19604,
          412,
          309,
          445,
          365,
          5707,
          14281,
          13,
          400,
          456,
          321,
          352,
          13,
          51036
        ]
      },
      {
        "avg_logprob": -0.18785146872202554,
        "compression_ratio": 1.496,
        "end": 206.56,
        "id": 33,
        "no_speech_prob": 0.14031478762626648,
        "seek": 18456,
        "start": 198,
        "temperature": 0,
        "text": " Every year, every month, and the variation from the baseline average temperature. Let's open the",
        "tokens": [
          51036,
          2048,
          1064,
          11,
          633,
          1618,
          11,
          293,
          264,
          12990,
          490,
          264,
          20518,
          4274,
          4292,
          13,
          961,
          311,
          1269,
          264,
          51464
        ]
      },
      {
        "avg_logprob": -0.18785146872202554,
        "compression_ratio": 1.496,
        "end": 210.64000000000001,
        "id": 34,
        "no_speech_prob": 0.14031478762626648,
        "seek": 18456,
        "start": 206.56,
        "temperature": 0,
        "text": " file in Visual Studio Code. This way we can see it without the Mac preview formatting.",
        "tokens": [
          51464,
          3991,
          294,
          23187,
          13500,
          15549,
          13,
          639,
          636,
          321,
          393,
          536,
          309,
          1553,
          264,
          5707,
          14281,
          39366,
          13,
          51668
        ]
      },
      {
        "avg_logprob": -0.23947890599568686,
        "compression_ratio": 1.6794425087108014,
        "end": 215.6,
        "id": 35,
        "no_speech_prob": 0.02033148892223835,
        "seek": 21064,
        "start": 211.35999999999999,
        "temperature": 0,
        "text": " First thing I want to do, I think, is remove that first row. It's important. It says what it is,",
        "tokens": [
          50400,
          2386,
          551,
          286,
          528,
          281,
          360,
          11,
          286,
          519,
          11,
          307,
          4159,
          300,
          700,
          5386,
          13,
          467,
          311,
          1021,
          13,
          467,
          1619,
          437,
          309,
          307,
          11,
          50612
        ]
      },
      {
        "avg_logprob": -0.23947890599568686,
        "compression_ratio": 1.6794425087108014,
        "end": 221.04,
        "id": 36,
        "no_speech_prob": 0.02033148892223835,
        "seek": 21064,
        "start": 215.6,
        "temperature": 0,
        "text": " land, ocean, global means. But I don't want to have to parse that in P5. I do want the second",
        "tokens": [
          50612,
          2117,
          11,
          7810,
          11,
          4338,
          1355,
          13,
          583,
          286,
          500,
          380,
          528,
          281,
          362,
          281,
          48377,
          300,
          294,
          430,
          20,
          13,
          286,
          360,
          528,
          264,
          1150,
          50884
        ]
      },
      {
        "avg_logprob": -0.23947890599568686,
        "compression_ratio": 1.6794425087108014,
        "end": 226.48,
        "id": 37,
        "no_speech_prob": 0.02033148892223835,
        "seek": 21064,
        "start": 221.04,
        "temperature": 0,
        "text": " row there, though, because those are the column headings for the data. All right. So the next step",
        "tokens": [
          50884,
          5386,
          456,
          11,
          1673,
          11,
          570,
          729,
          366,
          264,
          7738,
          1378,
          1109,
          337,
          264,
          1412,
          13,
          1057,
          558,
          13,
          407,
          264,
          958,
          1823,
          51156
        ]
      },
      {
        "avg_logprob": -0.23947890599568686,
        "compression_ratio": 1.6794425087108014,
        "end": 232.16,
        "id": 38,
        "no_speech_prob": 0.02033148892223835,
        "seek": 21064,
        "start": 226.48,
        "temperature": 0,
        "text": " would be to bring this file into P5. But I do want to say, again, whenever you're working with a",
        "tokens": [
          51156,
          576,
          312,
          281,
          1565,
          341,
          3991,
          666,
          430,
          20,
          13,
          583,
          286,
          360,
          528,
          281,
          584,
          11,
          797,
          11,
          5699,
          291,
          434,
          1364,
          365,
          257,
          51440
        ]
      },
      {
        "avg_logprob": -0.23947890599568686,
        "compression_ratio": 1.6794425087108014,
        "end": 238.48,
        "id": 39,
        "no_speech_prob": 0.02033148892223835,
        "seek": 21064,
        "start": 232.16,
        "temperature": 0,
        "text": " data set, you want to take the time to read the documentation about how the data was collected,",
        "tokens": [
          51440,
          1412,
          992,
          11,
          291,
          528,
          281,
          747,
          264,
          565,
          281,
          1401,
          264,
          14333,
          466,
          577,
          264,
          1412,
          390,
          11087,
          11,
          51756
        ]
      },
      {
        "avg_logprob": -0.27261293584650215,
        "compression_ratio": 1.6917293233082706,
        "end": 243.92,
        "id": 40,
        "no_speech_prob": 0.05920616537332535,
        "seek": 23848,
        "start": 238.48,
        "temperature": 0,
        "text": " who collected it, and what type of analysis and various other types of things were done",
        "tokens": [
          50364,
          567,
          11087,
          309,
          11,
          293,
          437,
          2010,
          295,
          5215,
          293,
          3683,
          661,
          3467,
          295,
          721,
          645,
          1096,
          50636
        ]
      },
      {
        "avg_logprob": -0.27261293584650215,
        "compression_ratio": 1.6917293233082706,
        "end": 250.16,
        "id": 41,
        "no_speech_prob": 0.05920616537332535,
        "seek": 23848,
        "start": 243.92,
        "temperature": 0,
        "text": " in preparation and publication of that data. I'll be sure to link to both the 2010 and 2019",
        "tokens": [
          50636,
          294,
          13081,
          293,
          19953,
          295,
          300,
          1412,
          13,
          286,
          603,
          312,
          988,
          281,
          2113,
          281,
          1293,
          264,
          9657,
          293,
          6071,
          50948
        ]
      },
      {
        "avg_logprob": -0.27261293584650215,
        "compression_ratio": 1.6917293233082706,
        "end": 255.92,
        "id": 42,
        "no_speech_prob": 0.05920616537332535,
        "seek": 23848,
        "start": 250.16,
        "temperature": 0,
        "text": " publications that give more background and info around the data collection and analysis process.",
        "tokens": [
          50948,
          25618,
          300,
          976,
          544,
          3678,
          293,
          13614,
          926,
          264,
          1412,
          5765,
          293,
          5215,
          1399,
          13,
          51236
        ]
      },
      {
        "avg_logprob": -0.27261293584650215,
        "compression_ratio": 1.6917293233082706,
        "end": 260.24,
        "id": 43,
        "no_speech_prob": 0.05920616537332535,
        "seek": 23848,
        "start": 255.92,
        "temperature": 0,
        "text": " The other thing I want to do just to make my life a little easier is rename the file.",
        "tokens": [
          51236,
          440,
          661,
          551,
          286,
          528,
          281,
          360,
          445,
          281,
          652,
          452,
          993,
          257,
          707,
          3571,
          307,
          36741,
          264,
          3991,
          13,
          51452
        ]
      },
      {
        "avg_logprob": -0.27261293584650215,
        "compression_ratio": 1.6917293233082706,
        "end": 267.2,
        "id": 44,
        "no_speech_prob": 0.05920616537332535,
        "seek": 23848,
        "start": 260.24,
        "temperature": 0,
        "text": " I'll call it GISS data. And I'm going to say April 11, 2023 in the file name, just as a",
        "tokens": [
          51452,
          286,
          603,
          818,
          309,
          47860,
          50,
          1412,
          13,
          400,
          286,
          478,
          516,
          281,
          584,
          6929,
          2975,
          11,
          44377,
          294,
          264,
          3991,
          1315,
          11,
          445,
          382,
          257,
          51800
        ]
      },
      {
        "avg_logprob": -0.24985466381110769,
        "compression_ratio": 1.6163793103448276,
        "end": 273.68,
        "id": 45,
        "no_speech_prob": 0.051837220788002014,
        "seek": 26720,
        "start": 267.52,
        "temperature": 0,
        "text": " note to self of when I downloaded it. Now here I am in the P5 web editor. I can upload that data",
        "tokens": [
          50380,
          3637,
          281,
          2698,
          295,
          562,
          286,
          21748,
          309,
          13,
          823,
          510,
          286,
          669,
          294,
          264,
          430,
          20,
          3670,
          9839,
          13,
          286,
          393,
          6580,
          300,
          1412,
          50688
        ]
      },
      {
        "avg_logprob": -0.24985466381110769,
        "compression_ratio": 1.6163793103448276,
        "end": 280.64,
        "id": 46,
        "no_speech_prob": 0.051837220788002014,
        "seek": 26720,
        "start": 273.68,
        "temperature": 0,
        "text": " file to use with my sketch. Open up the file browsing menu, click upload file, and drag the",
        "tokens": [
          50688,
          3991,
          281,
          764,
          365,
          452,
          12325,
          13,
          7238,
          493,
          264,
          3991,
          38602,
          6510,
          11,
          2052,
          6580,
          3991,
          11,
          293,
          5286,
          264,
          51036
        ]
      },
      {
        "avg_logprob": -0.24985466381110769,
        "compression_ratio": 1.6163793103448276,
        "end": 287.76,
        "id": 47,
        "no_speech_prob": 0.051837220788002014,
        "seek": 26720,
        "start": 280.64,
        "temperature": 0,
        "text": " CSV in. I can also click on it and see that raw data here in the P5 web editor as well.",
        "tokens": [
          51036,
          48814,
          294,
          13,
          286,
          393,
          611,
          2052,
          322,
          309,
          293,
          536,
          300,
          8936,
          1412,
          510,
          294,
          264,
          430,
          20,
          3670,
          9839,
          382,
          731,
          13,
          51392
        ]
      },
      {
        "avg_logprob": -0.24985466381110769,
        "compression_ratio": 1.6163793103448276,
        "end": 292.71999999999997,
        "id": 48,
        "no_speech_prob": 0.051837220788002014,
        "seek": 26720,
        "start": 287.76,
        "temperature": 0,
        "text": " There's also an excellent FAQ page, which covers a lot of the questions that you might have around",
        "tokens": [
          51392,
          821,
          311,
          611,
          364,
          7103,
          19894,
          48,
          3028,
          11,
          597,
          10538,
          257,
          688,
          295,
          264,
          1651,
          300,
          291,
          1062,
          362,
          926,
          51640
        ]
      },
      {
        "avg_logprob": -0.1893258367265974,
        "compression_ratio": 1.4141414141414141,
        "end": 299.20000000000005,
        "id": 49,
        "no_speech_prob": 0.10969194769859314,
        "seek": 29272,
        "start": 293.68,
        "temperature": 0,
        "text": " this data set, starting with why it's important to look at a variation from a baseline. Why are",
        "tokens": [
          50412,
          341,
          1412,
          992,
          11,
          2891,
          365,
          983,
          309,
          311,
          1021,
          281,
          574,
          412,
          257,
          12990,
          490,
          257,
          20518,
          13,
          1545,
          366,
          50688
        ]
      },
      {
        "avg_logprob": -0.1893258367265974,
        "compression_ratio": 1.4141414141414141,
        "end": 304.88000000000005,
        "id": 50,
        "no_speech_prob": 0.10969194769859314,
        "seek": 29272,
        "start": 299.20000000000005,
        "temperature": 0,
        "text": " we looking at an anomaly versus the absolute temperatures themselves? All right, how am I",
        "tokens": [
          50688,
          321,
          1237,
          412,
          364,
          42737,
          5717,
          264,
          8236,
          12633,
          2969,
          30,
          1057,
          558,
          11,
          577,
          669,
          286,
          50972
        ]
      },
      {
        "avg_logprob": -0.1893258367265974,
        "compression_ratio": 1.4141414141414141,
        "end": 312.8,
        "id": 51,
        "no_speech_prob": 0.10969194769859314,
        "seek": 29272,
        "start": 304.88000000000005,
        "temperature": 0,
        "text": " going to get the CSV into my P5 code? So it just so happens there's a wonderful function in P5",
        "tokens": [
          50972,
          516,
          281,
          483,
          264,
          48814,
          666,
          452,
          430,
          20,
          3089,
          30,
          407,
          309,
          445,
          370,
          2314,
          456,
          311,
          257,
          3715,
          2445,
          294,
          430,
          20,
          51368
        ]
      },
      {
        "avg_logprob": -0.18548696691339667,
        "compression_ratio": 1.6543778801843319,
        "end": 322.16,
        "id": 52,
        "no_speech_prob": 0.020645219832658768,
        "seek": 31280,
        "start": 312.8,
        "temperature": 0,
        "text": " called load table. And this function takes a file name to load into a table object.",
        "tokens": [
          50364,
          1219,
          3677,
          3199,
          13,
          400,
          341,
          2445,
          2516,
          257,
          3991,
          1315,
          281,
          3677,
          666,
          257,
          3199,
          2657,
          13,
          50832
        ]
      },
      {
        "avg_logprob": -0.18548696691339667,
        "compression_ratio": 1.6543778801843319,
        "end": 332,
        "id": 53,
        "no_speech_prob": 0.020645219832658768,
        "seek": 31280,
        "start": 325.52000000000004,
        "temperature": 0,
        "text": " The load table function does all of the string parsing for you. So it figures out that the",
        "tokens": [
          51000,
          440,
          3677,
          3199,
          2445,
          775,
          439,
          295,
          264,
          6798,
          21156,
          278,
          337,
          291,
          13,
          407,
          309,
          9624,
          484,
          300,
          264,
          51324
        ]
      },
      {
        "avg_logprob": -0.18548696691339667,
        "compression_ratio": 1.6543778801843319,
        "end": 337.28000000000003,
        "id": 54,
        "no_speech_prob": 0.020645219832658768,
        "seek": 31280,
        "start": 332,
        "temperature": 0,
        "text": " first row are column headers. It knows where the commas are, and it's going to allow us to parse",
        "tokens": [
          51324,
          700,
          5386,
          366,
          7738,
          45101,
          13,
          467,
          3255,
          689,
          264,
          800,
          296,
          366,
          11,
          293,
          309,
          311,
          516,
          281,
          2089,
          505,
          281,
          48377,
          51588
        ]
      },
      {
        "avg_logprob": -0.18548696691339667,
        "compression_ratio": 1.6543778801843319,
        "end": 342.32,
        "id": 55,
        "no_speech_prob": 0.020645219832658768,
        "seek": 31280,
        "start": 337.28000000000003,
        "temperature": 0,
        "text": " through and run through that data much more easily. And to figure out all the different",
        "tokens": [
          51588,
          807,
          293,
          1190,
          807,
          300,
          1412,
          709,
          544,
          3612,
          13,
          400,
          281,
          2573,
          484,
          439,
          264,
          819,
          51840
        ]
      },
      {
        "avg_logprob": -0.16742018897934716,
        "compression_ratio": 1.7399103139013452,
        "end": 346.8,
        "id": 56,
        "no_speech_prob": 0.0012842938303947449,
        "seek": 34232,
        "start": 342.32,
        "temperature": 0,
        "text": " kinds of things we can do with the table that we've loaded, we need to look at the",
        "tokens": [
          50364,
          3685,
          295,
          721,
          321,
          393,
          360,
          365,
          264,
          3199,
          300,
          321,
          600,
          13210,
          11,
          321,
          643,
          281,
          574,
          412,
          264,
          50588
        ]
      },
      {
        "avg_logprob": -0.16742018897934716,
        "compression_ratio": 1.7399103139013452,
        "end": 352.32,
        "id": 57,
        "no_speech_prob": 0.0012842938303947449,
        "seek": 34232,
        "start": 346.8,
        "temperature": 0,
        "text": " P5 table documentation. So the table has baked into it an array called columns,",
        "tokens": [
          50588,
          430,
          20,
          3199,
          14333,
          13,
          407,
          264,
          3199,
          575,
          19453,
          666,
          309,
          364,
          10225,
          1219,
          13766,
          11,
          50864
        ]
      },
      {
        "avg_logprob": -0.16742018897934716,
        "compression_ratio": 1.7399103139013452,
        "end": 357.2,
        "id": 58,
        "no_speech_prob": 0.0012842938303947449,
        "seek": 34232,
        "start": 352.32,
        "temperature": 0,
        "text": " which has all the names of the columns, as well as an array of all the rows.",
        "tokens": [
          50864,
          597,
          575,
          439,
          264,
          5288,
          295,
          264,
          13766,
          11,
          382,
          731,
          382,
          364,
          10225,
          295,
          439,
          264,
          13241,
          13,
          51108
        ]
      },
      {
        "avg_logprob": -0.16742018897934716,
        "compression_ratio": 1.7399103139013452,
        "end": 361.2,
        "id": 59,
        "no_speech_prob": 0.0012842938303947449,
        "seek": 34232,
        "start": 357.2,
        "temperature": 0,
        "text": " So each individual row of data is stored as its own object.",
        "tokens": [
          51108,
          407,
          1184,
          2609,
          5386,
          295,
          1412,
          307,
          12187,
          382,
          1080,
          1065,
          2657,
          13,
          51308
        ]
      },
      {
        "avg_logprob": -0.16742018897934716,
        "compression_ratio": 1.7399103139013452,
        "end": 370.48,
        "id": 60,
        "no_speech_prob": 0.0012842938303947449,
        "seek": 34232,
        "start": 366.24,
        "temperature": 0,
        "text": " So in our data set, I think the columns are something like the year and then the name of",
        "tokens": [
          51560,
          407,
          294,
          527,
          1412,
          992,
          11,
          286,
          519,
          264,
          13766,
          366,
          746,
          411,
          264,
          1064,
          293,
          550,
          264,
          1315,
          295,
          51772
        ]
      },
      {
        "avg_logprob": -0.19231281083883697,
        "compression_ratio": 1.6053811659192825,
        "end": 377.28000000000003,
        "id": 61,
        "no_speech_prob": 0.0009110398823395371,
        "seek": 37048,
        "start": 370.48,
        "temperature": 0,
        "text": " the months. And then each row is a row of data for any given year.",
        "tokens": [
          50364,
          264,
          2493,
          13,
          400,
          550,
          1184,
          5386,
          307,
          257,
          5386,
          295,
          1412,
          337,
          604,
          2212,
          1064,
          13,
          50704
        ]
      },
      {
        "avg_logprob": -0.19231281083883697,
        "compression_ratio": 1.6053811659192825,
        "end": 386.40000000000003,
        "id": 62,
        "no_speech_prob": 0.0009110398823395371,
        "seek": 37048,
        "start": 380.48,
        "temperature": 0,
        "text": " So I'm going to want to figure out how to write some kind of for loop where I can look at every",
        "tokens": [
          50864,
          407,
          286,
          478,
          516,
          281,
          528,
          281,
          2573,
          484,
          577,
          281,
          2464,
          512,
          733,
          295,
          337,
          6367,
          689,
          286,
          393,
          574,
          412,
          633,
          51160
        ]
      },
      {
        "avg_logprob": -0.19231281083883697,
        "compression_ratio": 1.6053811659192825,
        "end": 392.72,
        "id": 63,
        "no_speech_prob": 0.0009110398823395371,
        "seek": 37048,
        "start": 386.40000000000003,
        "temperature": 0,
        "text": " single row one at a time, and then iterate over all of the months. Now in calling load table,",
        "tokens": [
          51160,
          2167,
          5386,
          472,
          412,
          257,
          565,
          11,
          293,
          550,
          44497,
          670,
          439,
          295,
          264,
          2493,
          13,
          823,
          294,
          5141,
          3677,
          3199,
          11,
          51476
        ]
      },
      {
        "avg_logprob": -0.19231281083883697,
        "compression_ratio": 1.6053811659192825,
        "end": 399.44,
        "id": 64,
        "no_speech_prob": 0.0009110398823395371,
        "seek": 37048,
        "start": 392.72,
        "temperature": 0,
        "text": " I also want to give it not just the file name, but a string that says what file format, in this case,",
        "tokens": [
          51476,
          286,
          611,
          528,
          281,
          976,
          309,
          406,
          445,
          264,
          3991,
          1315,
          11,
          457,
          257,
          6798,
          300,
          1619,
          437,
          3991,
          7877,
          11,
          294,
          341,
          1389,
          11,
          51812
        ]
      },
      {
        "avg_logprob": -0.1936262997713956,
        "compression_ratio": 1.6106870229007633,
        "end": 405.44,
        "id": 65,
        "no_speech_prob": 0.00088303949451074,
        "seek": 39944,
        "start": 399.44,
        "temperature": 0,
        "text": " CSV, and another string with the keyword header in it, which will indicate that there is in fact,",
        "tokens": [
          50364,
          48814,
          11,
          293,
          1071,
          6798,
          365,
          264,
          20428,
          23117,
          294,
          309,
          11,
          597,
          486,
          13330,
          300,
          456,
          307,
          294,
          1186,
          11,
          50664
        ]
      },
      {
        "avg_logprob": -0.1936262997713956,
        "compression_ratio": 1.6106870229007633,
        "end": 407.68,
        "id": 66,
        "no_speech_prob": 0.00088303949451074,
        "seek": 39944,
        "start": 405.44,
        "temperature": 0,
        "text": " a single row that has column headers.",
        "tokens": [
          50664,
          257,
          2167,
          5386,
          300,
          575,
          7738,
          45101,
          13,
          50776
        ]
      },
      {
        "avg_logprob": -0.1936262997713956,
        "compression_ratio": 1.6106870229007633,
        "end": 417.04,
        "id": 67,
        "no_speech_prob": 0.00088303949451074,
        "seek": 39944,
        "start": 412.32,
        "temperature": 0,
        "text": " So now I have everything loaded into a variable called data. And I'm using the preload function",
        "tokens": [
          51008,
          407,
          586,
          286,
          362,
          1203,
          13210,
          666,
          257,
          7006,
          1219,
          1412,
          13,
          400,
          286,
          478,
          1228,
          264,
          659,
          2907,
          2445,
          51244
        ]
      },
      {
        "avg_logprob": -0.1936262997713956,
        "compression_ratio": 1.6106870229007633,
        "end": 421.6,
        "id": 68,
        "no_speech_prob": 0.00088303949451074,
        "seek": 39944,
        "start": 417.04,
        "temperature": 0,
        "text": " in p5 so that it's ready by the time I get to set up. Now I want to make sure the data seems",
        "tokens": [
          51244,
          294,
          280,
          20,
          370,
          300,
          309,
          311,
          1919,
          538,
          264,
          565,
          286,
          483,
          281,
          992,
          493,
          13,
          823,
          286,
          528,
          281,
          652,
          988,
          264,
          1412,
          2544,
          51472
        ]
      },
      {
        "avg_logprob": -0.1936262997713956,
        "compression_ratio": 1.6106870229007633,
        "end": 426.4,
        "id": 69,
        "no_speech_prob": 0.00088303949451074,
        "seek": 39944,
        "start": 421.6,
        "temperature": 0,
        "text": " all right. So a couple things I could do one is let me look at get column count and get row count",
        "tokens": [
          51472,
          439,
          558,
          13,
          407,
          257,
          1916,
          721,
          286,
          727,
          360,
          472,
          307,
          718,
          385,
          574,
          412,
          483,
          7738,
          1207,
          293,
          483,
          5386,
          1207,
          51712
        ]
      },
      {
        "avg_logprob": -0.1652005958557129,
        "compression_ratio": 1.7272727272727273,
        "end": 436.08,
        "id": 70,
        "no_speech_prob": 0.0036499626003205776,
        "seek": 42640,
        "start": 426.4,
        "temperature": 0,
        "text": " just to see that I have everything there. So I have 146 rows, but only one column, I forgot what",
        "tokens": [
          50364,
          445,
          281,
          536,
          300,
          286,
          362,
          1203,
          456,
          13,
          407,
          286,
          362,
          3499,
          21,
          13241,
          11,
          457,
          787,
          472,
          7738,
          11,
          286,
          5298,
          437,
          50848
        ]
      },
      {
        "avg_logprob": -0.1652005958557129,
        "compression_ratio": 1.7272727272727273,
        "end": 441.03999999999996,
        "id": 71,
        "no_speech_prob": 0.0036499626003205776,
        "seek": 42640,
        "start": 436.08,
        "temperature": 0,
        "text": " I said before that I need to do, which is to additionally give it the format and the fact that",
        "tokens": [
          50848,
          286,
          848,
          949,
          300,
          286,
          643,
          281,
          360,
          11,
          597,
          307,
          281,
          43181,
          976,
          309,
          264,
          7877,
          293,
          264,
          1186,
          300,
          51096
        ]
      },
      {
        "avg_logprob": -0.1652005958557129,
        "compression_ratio": 1.7272727272727273,
        "end": 448.47999999999996,
        "id": 72,
        "no_speech_prob": 0.0036499626003205776,
        "seek": 42640,
        "start": 441.03999999999996,
        "temperature": 0,
        "text": " there is a header. Aha. So by telling it the format, it now knows that there are 19 columns",
        "tokens": [
          51096,
          456,
          307,
          257,
          23117,
          13,
          27448,
          13,
          407,
          538,
          3585,
          309,
          264,
          7877,
          11,
          309,
          586,
          3255,
          300,
          456,
          366,
          1294,
          13766,
          51468
        ]
      },
      {
        "avg_logprob": -0.1652005958557129,
        "compression_ratio": 1.7272727272727273,
        "end": 453.35999999999996,
        "id": 73,
        "no_speech_prob": 0.0036499626003205776,
        "seek": 42640,
        "start": 448.47999999999996,
        "temperature": 0,
        "text": " that fixes that. And then let me also make sure it knows that there's a header row. Now it knows",
        "tokens": [
          51468,
          300,
          32539,
          300,
          13,
          400,
          550,
          718,
          385,
          611,
          652,
          988,
          309,
          3255,
          300,
          456,
          311,
          257,
          23117,
          5386,
          13,
          823,
          309,
          3255,
          51712
        ]
      },
      {
        "avg_logprob": -0.1621310043334961,
        "compression_ratio": 1.7333333333333334,
        "end": 459.6,
        "id": 74,
        "no_speech_prob": 0.057489242404699326,
        "seek": 45336,
        "start": 453.36,
        "temperature": 0,
        "text": " that there's only 144 rows, because that first one is just the headers. Now, generally speaking,",
        "tokens": [
          50364,
          300,
          456,
          311,
          787,
          45218,
          13241,
          11,
          570,
          300,
          700,
          472,
          307,
          445,
          264,
          45101,
          13,
          823,
          11,
          5101,
          4124,
          11,
          50676
        ]
      },
      {
        "avg_logprob": -0.1621310043334961,
        "compression_ratio": 1.7333333333333334,
        "end": 466.16,
        "id": 75,
        "no_speech_prob": 0.057489242404699326,
        "seek": 45336,
        "start": 459.6,
        "temperature": 0,
        "text": " when I'm working on a project like this, I might use a temporary smaller amount of data, like just",
        "tokens": [
          50676,
          562,
          286,
          478,
          1364,
          322,
          257,
          1716,
          411,
          341,
          11,
          286,
          1062,
          764,
          257,
          13413,
          4356,
          2372,
          295,
          1412,
          11,
          411,
          445,
          51004
        ]
      },
      {
        "avg_logprob": -0.1621310043334961,
        "compression_ratio": 1.7333333333333334,
        "end": 472.24,
        "id": 76,
        "no_speech_prob": 0.057489242404699326,
        "seek": 45336,
        "start": 466.16,
        "temperature": 0,
        "text": " a file that has the first five rows. And I also very much want to make sure that I'm looking at",
        "tokens": [
          51004,
          257,
          3991,
          300,
          575,
          264,
          700,
          1732,
          13241,
          13,
          400,
          286,
          611,
          588,
          709,
          528,
          281,
          652,
          988,
          300,
          286,
          478,
          1237,
          412,
          51308
        ]
      },
      {
        "avg_logprob": -0.1621310043334961,
        "compression_ratio": 1.7333333333333334,
        "end": 480.16,
        "id": 77,
        "no_speech_prob": 0.057489242404699326,
        "seek": 45336,
        "start": 472.24,
        "temperature": 0,
        "text": " the first five rows of data, as well as the last five rows to make sure things look copacetic. And",
        "tokens": [
          51308,
          264,
          700,
          1732,
          13241,
          295,
          1412,
          11,
          382,
          731,
          382,
          264,
          1036,
          1732,
          13241,
          281,
          652,
          988,
          721,
          574,
          2971,
          326,
          3532,
          13,
          400,
          51704
        ]
      },
      {
        "avg_logprob": -0.17096039556687878,
        "compression_ratio": 1.7392857142857143,
        "end": 487.20000000000005,
        "id": 78,
        "no_speech_prob": 0.007577171549201012,
        "seek": 48016,
        "start": 480.16,
        "temperature": 0,
        "text": " I can see here that when I get to 2023, I'm only going to want to take January and February. So I'm",
        "tokens": [
          50364,
          286,
          393,
          536,
          510,
          300,
          562,
          286,
          483,
          281,
          44377,
          11,
          286,
          478,
          787,
          516,
          281,
          528,
          281,
          747,
          7061,
          293,
          8711,
          13,
          407,
          286,
          478,
          50716
        ]
      },
      {
        "avg_logprob": -0.17096039556687878,
        "compression_ratio": 1.7392857142857143,
        "end": 492.16,
        "id": 79,
        "no_speech_prob": 0.007577171549201012,
        "seek": 48016,
        "start": 487.20000000000005,
        "temperature": 0,
        "text": " going to need to build something into the code that knows to ignore the stars or knows where I",
        "tokens": [
          50716,
          516,
          281,
          643,
          281,
          1322,
          746,
          666,
          264,
          3089,
          300,
          3255,
          281,
          11200,
          264,
          6105,
          420,
          3255,
          689,
          286,
          50964
        ]
      },
      {
        "avg_logprob": -0.17096039556687878,
        "compression_ratio": 1.7392857142857143,
        "end": 496.88,
        "id": 80,
        "no_speech_prob": 0.007577171549201012,
        "seek": 48016,
        "start": 492.16,
        "temperature": 0,
        "text": " need to end when I'm doing the visualization or analysis. But I'm not really going to take my",
        "tokens": [
          50964,
          643,
          281,
          917,
          562,
          286,
          478,
          884,
          264,
          25801,
          420,
          5215,
          13,
          583,
          286,
          478,
          406,
          534,
          516,
          281,
          747,
          452,
          51200
        ]
      },
      {
        "avg_logprob": -0.17096039556687878,
        "compression_ratio": 1.7392857142857143,
        "end": 501.52000000000004,
        "id": 81,
        "no_speech_prob": 0.007577171549201012,
        "seek": 48016,
        "start": 496.88,
        "temperature": 0,
        "text": " advice here right now, I'm just going to dive in and see what I can get to work in the code itself",
        "tokens": [
          51200,
          5192,
          510,
          558,
          586,
          11,
          286,
          478,
          445,
          516,
          281,
          9192,
          294,
          293,
          536,
          437,
          286,
          393,
          483,
          281,
          589,
          294,
          264,
          3089,
          2564,
          51432
        ]
      },
      {
        "avg_logprob": -0.17096039556687878,
        "compression_ratio": 1.7392857142857143,
        "end": 509.68,
        "id": 82,
        "no_speech_prob": 0.007577171549201012,
        "seek": 48016,
        "start": 501.52000000000004,
        "temperature": 0,
        "text": " with the full data file. Let's try examining just the first row of data. The get row function gives",
        "tokens": [
          51432,
          365,
          264,
          1577,
          1412,
          3991,
          13,
          961,
          311,
          853,
          34662,
          445,
          264,
          700,
          5386,
          295,
          1412,
          13,
          440,
          483,
          5386,
          2445,
          2709,
          51840
        ]
      },
      {
        "avg_logprob": -0.18831250781104678,
        "compression_ratio": 1.5353535353535352,
        "end": 516.16,
        "id": 83,
        "no_speech_prob": 0.0035380395129323006,
        "seek": 50968,
        "start": 509.68,
        "temperature": 0,
        "text": " me any given row from the data set, zero being that first row. Now I can look at the p5 table row",
        "tokens": [
          50364,
          385,
          604,
          2212,
          5386,
          490,
          264,
          1412,
          992,
          11,
          4018,
          885,
          300,
          700,
          5386,
          13,
          823,
          286,
          393,
          574,
          412,
          264,
          280,
          20,
          3199,
          5386,
          50688
        ]
      },
      {
        "avg_logprob": -0.18831250781104678,
        "compression_ratio": 1.5353535353535352,
        "end": 522.5600000000001,
        "id": 84,
        "no_speech_prob": 0.0035380395129323006,
        "seek": 50968,
        "start": 516.16,
        "temperature": 0,
        "text": " object and see what kind of functions I can call there. Set, set num, set string, get, get num, get",
        "tokens": [
          50688,
          2657,
          293,
          536,
          437,
          733,
          295,
          6828,
          286,
          393,
          818,
          456,
          13,
          8928,
          11,
          992,
          1031,
          11,
          992,
          6798,
          11,
          483,
          11,
          483,
          1031,
          11,
          483,
          51008
        ]
      },
      {
        "avg_logprob": -0.18831250781104678,
        "compression_ratio": 1.5353535353535352,
        "end": 531.12,
        "id": 85,
        "no_speech_prob": 0.0035380395129323006,
        "seek": 50968,
        "start": 522.5600000000001,
        "temperature": 0,
        "text": " string. Okay, what do I want to do? Maybe I want to just get the year and the January temperature anomaly.",
        "tokens": [
          51008,
          6798,
          13,
          1033,
          11,
          437,
          360,
          286,
          528,
          281,
          360,
          30,
          2704,
          286,
          528,
          281,
          445,
          483,
          264,
          1064,
          293,
          264,
          7061,
          4292,
          42737,
          13,
          51436
        ]
      },
      {
        "avg_logprob": -0.2364851283276175,
        "compression_ratio": 1.732394366197183,
        "end": 537.92,
        "id": 86,
        "no_speech_prob": 0.02297705039381981,
        "seek": 53112,
        "start": 531.52,
        "temperature": 0,
        "text": " Great. So we can see that from the row, I can pull out a piece of data using the get function. So the",
        "tokens": [
          50384,
          3769,
          13,
          407,
          321,
          393,
          536,
          300,
          490,
          264,
          5386,
          11,
          286,
          393,
          2235,
          484,
          257,
          2522,
          295,
          1412,
          1228,
          264,
          483,
          2445,
          13,
          407,
          264,
          50704
        ]
      },
      {
        "avg_logprob": -0.2364851283276175,
        "compression_ratio": 1.732394366197183,
        "end": 543.28,
        "id": 87,
        "no_speech_prob": 0.02297705039381981,
        "seek": 53112,
        "start": 537.92,
        "temperature": 0,
        "text": " get function is probably going to always give me back the data as a string as text. And since I do",
        "tokens": [
          50704,
          483,
          2445,
          307,
          1391,
          516,
          281,
          1009,
          976,
          385,
          646,
          264,
          1412,
          382,
          257,
          6798,
          382,
          2487,
          13,
          400,
          1670,
          286,
          360,
          50972
        ]
      },
      {
        "avg_logprob": -0.2364851283276175,
        "compression_ratio": 1.732394366197183,
        "end": 548.24,
        "id": 88,
        "no_speech_prob": 0.02297705039381981,
        "seek": 53112,
        "start": 543.28,
        "temperature": 0,
        "text": " want the temperature to be a number, I will switch this one to get num. And you can even see in the",
        "tokens": [
          50972,
          528,
          264,
          4292,
          281,
          312,
          257,
          1230,
          11,
          286,
          486,
          3679,
          341,
          472,
          281,
          483,
          1031,
          13,
          400,
          291,
          393,
          754,
          536,
          294,
          264,
          51220
        ]
      },
      {
        "avg_logprob": -0.2364851283276175,
        "compression_ratio": 1.732394366197183,
        "end": 552.4,
        "id": 89,
        "no_speech_prob": 0.02297705039381981,
        "seek": 53112,
        "start": 548.24,
        "temperature": 0,
        "text": " console now it's a different color because it's logging it as a number as a floating point number",
        "tokens": [
          51220,
          11076,
          586,
          309,
          311,
          257,
          819,
          2017,
          570,
          309,
          311,
          27991,
          309,
          382,
          257,
          1230,
          382,
          257,
          12607,
          935,
          1230,
          51428
        ]
      },
      {
        "avg_logprob": -0.2364851283276175,
        "compression_ratio": 1.732394366197183,
        "end": 558.32,
        "id": 90,
        "no_speech_prob": 0.02297705039381981,
        "seek": 53112,
        "start": 552.4,
        "temperature": 0,
        "text": " rather than as raw text. All right, I think I understand what I need to do. Because I'm going",
        "tokens": [
          51428,
          2831,
          813,
          382,
          8936,
          2487,
          13,
          1057,
          558,
          11,
          286,
          519,
          286,
          1223,
          437,
          286,
          643,
          281,
          360,
          13,
          1436,
          286,
          478,
          516,
          51724
        ]
      },
      {
        "avg_logprob": -0.37225142584906684,
        "compression_ratio": 1.5442477876106195,
        "end": 566.6400000000001,
        "id": 91,
        "no_speech_prob": 0.15608012676239014,
        "seek": 55832,
        "start": 558.8000000000001,
        "temperature": 0,
        "text": " to need to go through every year and draw a spiral based on those values. All right, so using Ed",
        "tokens": [
          50388,
          281,
          643,
          281,
          352,
          807,
          633,
          1064,
          293,
          2642,
          257,
          25165,
          2361,
          322,
          729,
          4190,
          13,
          1057,
          558,
          11,
          370,
          1228,
          3977,
          50780
        ]
      },
      {
        "avg_logprob": -0.37225142584906684,
        "compression_ratio": 1.5442477876106195,
        "end": 572.48,
        "id": 92,
        "no_speech_prob": 0.15608012676239014,
        "seek": 55832,
        "start": 566.6400000000001,
        "temperature": 0,
        "text": " Hawkins's website as a basis, let me see if I can even just set up the months and the various",
        "tokens": [
          50780,
          9325,
          10277,
          311,
          3144,
          382,
          257,
          5143,
          11,
          718,
          385,
          536,
          498,
          286,
          393,
          754,
          445,
          992,
          493,
          264,
          2493,
          293,
          264,
          3683,
          51072
        ]
      },
      {
        "avg_logprob": -0.37225142584906684,
        "compression_ratio": 1.5442477876106195,
        "end": 579.6,
        "id": 93,
        "no_speech_prob": 0.15608012676239014,
        "seek": 55832,
        "start": 572.48,
        "temperature": 0,
        "text": " temperature indicators as a baseline, as a sort of background before I draw the spiral over top of it.",
        "tokens": [
          51072,
          4292,
          22176,
          382,
          257,
          20518,
          11,
          382,
          257,
          1333,
          295,
          3678,
          949,
          286,
          2642,
          264,
          25165,
          670,
          1192,
          295,
          309,
          13,
          51428
        ]
      },
      {
        "avg_logprob": -0.37225142584906684,
        "compression_ratio": 1.5442477876106195,
        "end": 582.8000000000001,
        "id": 94,
        "no_speech_prob": 0.15608012676239014,
        "seek": 55832,
        "start": 579.6,
        "temperature": 0,
        "text": " I'm going to translate to put zero, zero in the middle.",
        "tokens": [
          51428,
          286,
          478,
          516,
          281,
          13799,
          281,
          829,
          4018,
          11,
          4018,
          294,
          264,
          2808,
          13,
          51588
        ]
      },
      {
        "avg_logprob": -0.37264533042907716,
        "compression_ratio": 1.477832512315271,
        "end": 586.9599999999999,
        "id": 95,
        "no_speech_prob": 0.007011642679572105,
        "seek": 58280,
        "start": 583.76,
        "temperature": 0,
        "text": " All right, I'm picking arbitrary numbers right now. We can finesse it later,",
        "tokens": [
          50412,
          1057,
          558,
          11,
          286,
          478,
          8867,
          23211,
          3547,
          558,
          586,
          13,
          492,
          393,
          962,
          7357,
          309,
          1780,
          11,
          50572
        ]
      },
      {
        "avg_logprob": -0.37264533042907716,
        "compression_ratio": 1.477832512315271,
        "end": 590.7199999999999,
        "id": 96,
        "no_speech_prob": 0.007011642679572105,
        "seek": 58280,
        "start": 586.9599999999999,
        "temperature": 0,
        "text": " but let's use a diameter of 100 for zero degrees.",
        "tokens": [
          50572,
          457,
          718,
          311,
          764,
          257,
          14196,
          295,
          2319,
          337,
          4018,
          5310,
          13,
          50760
        ]
      },
      {
        "avg_logprob": -0.37264533042907716,
        "compression_ratio": 1.477832512315271,
        "end": 599.1999999999999,
        "id": 97,
        "no_speech_prob": 0.007011642679572105,
        "seek": 58280,
        "start": 593.68,
        "temperature": 0,
        "text": " Or did we get the data in Celsius? All right, looking at the TXT version of the same data I",
        "tokens": [
          50908,
          1610,
          630,
          321,
          483,
          264,
          1412,
          294,
          22658,
          30,
          1057,
          558,
          11,
          1237,
          412,
          264,
          314,
          20542,
          3037,
          295,
          264,
          912,
          1412,
          286,
          51184
        ]
      },
      {
        "avg_logprob": -0.37264533042907716,
        "compression_ratio": 1.477832512315271,
        "end": 603.12,
        "id": 98,
        "no_speech_prob": 0.007011642679572105,
        "seek": 58280,
        "start": 599.1999999999999,
        "temperature": 0,
        "text": " downloaded, it specifically says Celsius at the top. So I'm working with Celsius.",
        "tokens": [
          51184,
          21748,
          11,
          309,
          4682,
          1619,
          22658,
          412,
          264,
          1192,
          13,
          407,
          286,
          478,
          1364,
          365,
          22658,
          13,
          51380
        ]
      },
      {
        "avg_logprob": -0.6304158724271334,
        "compression_ratio": 1.519736842105263,
        "end": 610.48,
        "id": 99,
        "no_speech_prob": 0.00154870783444494,
        "seek": 60312,
        "start": 604.08,
        "temperature": 0,
        "text": " So now I have a circle to show for zero degrees and one to show for one degree. I think I'm going",
        "tokens": [
          50412,
          407,
          586,
          286,
          362,
          257,
          6329,
          281,
          855,
          337,
          4018,
          5310,
          293,
          472,
          281,
          855,
          337,
          472,
          4314,
          13,
          286,
          519,
          286,
          478,
          516,
          50732
        ]
      },
      {
        "avg_logprob": -0.6304158724271334,
        "compression_ratio": 1.519736842105263,
        "end": 618.16,
        "id": 100,
        "no_speech_prob": 0.00154870783444494,
        "seek": 60312,
        "start": 610.48,
        "temperature": 0,
        "text": " to need a bigger canvas. And I need one more circle to put the month labels around.",
        "tokens": [
          50732,
          281,
          643,
          257,
          3801,
          16267,
          13,
          400,
          286,
          643,
          472,
          544,
          6329,
          281,
          829,
          264,
          1618,
          16949,
          926,
          13,
          51116
        ]
      },
      {
        "avg_logprob": -0.6304158724271334,
        "compression_ratio": 1.519736842105263,
        "end": 624.24,
        "id": 101,
        "no_speech_prob": 0.00154870783444494,
        "seek": 60312,
        "start": 621.2,
        "temperature": 0,
        "text": " All right, so I'm going to use a diameter of 100.",
        "tokens": [
          51268,
          1057,
          558,
          11,
          370,
          286,
          478,
          516,
          281,
          764,
          257,
          14196,
          295,
          2319,
          13,
          51420
        ]
      },
      {
        "avg_logprob": -0.20204329216617278,
        "compression_ratio": 1.591743119266055,
        "end": 630.4,
        "id": 102,
        "no_speech_prob": 0.03676747530698776,
        "seek": 62424,
        "start": 624.24,
        "temperature": 0,
        "text": " Bigger canvas. And I need one more circle to put the month labels around.",
        "tokens": [
          50364,
          5429,
          1321,
          16267,
          13,
          400,
          286,
          643,
          472,
          544,
          6329,
          281,
          829,
          264,
          1618,
          16949,
          926,
          13,
          50672
        ]
      },
      {
        "avg_logprob": -0.20204329216617278,
        "compression_ratio": 1.591743119266055,
        "end": 638.96,
        "id": 103,
        "no_speech_prob": 0.03676747530698776,
        "seek": 62424,
        "start": 632.96,
        "temperature": 0,
        "text": " So putting the month labels will be a little tricky, but thank goodness for all of the",
        "tokens": [
          50800,
          407,
          3372,
          264,
          1618,
          16949,
          486,
          312,
          257,
          707,
          12414,
          11,
          457,
          1309,
          8387,
          337,
          439,
          295,
          264,
          51100
        ]
      },
      {
        "avg_logprob": -0.20204329216617278,
        "compression_ratio": 1.591743119266055,
        "end": 645.12,
        "id": 104,
        "no_speech_prob": 0.03676747530698776,
        "seek": 62424,
        "start": 638.96,
        "temperature": 0,
        "text": " videos I've made over the years that use the concept of polar coordinates. I'll give you a",
        "tokens": [
          51100,
          2145,
          286,
          600,
          1027,
          670,
          264,
          924,
          300,
          764,
          264,
          3410,
          295,
          12367,
          21056,
          13,
          286,
          603,
          976,
          291,
          257,
          51408
        ]
      },
      {
        "avg_logprob": -0.20204329216617278,
        "compression_ratio": 1.591743119266055,
        "end": 650.16,
        "id": 105,
        "no_speech_prob": 0.03676747530698776,
        "seek": 62424,
        "start": 645.12,
        "temperature": 0,
        "text": " quick primer here, but I will link to many, many videos where I've covered this in great depth.",
        "tokens": [
          51408,
          1702,
          12595,
          510,
          11,
          457,
          286,
          486,
          2113,
          281,
          867,
          11,
          867,
          2145,
          689,
          286,
          600,
          5343,
          341,
          294,
          869,
          7161,
          13,
          51660
        ]
      },
      {
        "avg_logprob": -0.22158170483775974,
        "compression_ratio": 1.646551724137931,
        "end": 657.04,
        "id": 106,
        "no_speech_prob": 0.002115677809342742,
        "seek": 65016,
        "start": 651.12,
        "temperature": 0,
        "text": " So if this is my P5 canvas and I'm considering the center to be zero, zero based on that call",
        "tokens": [
          50412,
          407,
          498,
          341,
          307,
          452,
          430,
          20,
          16267,
          293,
          286,
          478,
          8079,
          264,
          3056,
          281,
          312,
          4018,
          11,
          4018,
          2361,
          322,
          300,
          818,
          50708
        ]
      },
      {
        "avg_logprob": -0.22158170483775974,
        "compression_ratio": 1.646551724137931,
        "end": 662.88,
        "id": 107,
        "no_speech_prob": 0.002115677809342742,
        "seek": 65016,
        "start": 657.04,
        "temperature": 0,
        "text": " to translate that I did, then normally whenever I talk about a point, I'm going to talk about its",
        "tokens": [
          50708,
          281,
          13799,
          300,
          286,
          630,
          11,
          550,
          5646,
          5699,
          286,
          751,
          466,
          257,
          935,
          11,
          286,
          478,
          516,
          281,
          751,
          466,
          1080,
          51000
        ]
      },
      {
        "avg_logprob": -0.22158170483775974,
        "compression_ratio": 1.646551724137931,
        "end": 670.16,
        "id": 108,
        "no_speech_prob": 0.002115677809342742,
        "seek": 65016,
        "start": 662.88,
        "temperature": 0,
        "text": " X, Y position. But if I want to describe a set of points that are following a radial path around",
        "tokens": [
          51000,
          1783,
          11,
          398,
          2535,
          13,
          583,
          498,
          286,
          528,
          281,
          6786,
          257,
          992,
          295,
          2793,
          300,
          366,
          3480,
          257,
          38783,
          3100,
          926,
          51364
        ]
      },
      {
        "avg_logprob": -0.22158170483775974,
        "compression_ratio": 1.646551724137931,
        "end": 677.52,
        "id": 109,
        "no_speech_prob": 0.002115677809342742,
        "seek": 65016,
        "start": 670.16,
        "temperature": 0,
        "text": " that center, I'm going to want to talk about them in terms of their radius and angle relative",
        "tokens": [
          51364,
          300,
          3056,
          11,
          286,
          478,
          516,
          281,
          528,
          281,
          751,
          466,
          552,
          294,
          2115,
          295,
          641,
          15845,
          293,
          5802,
          4972,
          51732
        ]
      },
      {
        "avg_logprob": -0.17244665084346647,
        "compression_ratio": 1.554585152838428,
        "end": 684.56,
        "id": 110,
        "no_speech_prob": 0.0008295818697661161,
        "seek": 67752,
        "start": 678.24,
        "temperature": 0,
        "text": " to the horizontal axis. The distance from the center radius, that angle using the Greek letter",
        "tokens": [
          50400,
          281,
          264,
          12750,
          10298,
          13,
          440,
          4560,
          490,
          264,
          3056,
          15845,
          11,
          300,
          5802,
          1228,
          264,
          10281,
          5063,
          50716
        ]
      },
      {
        "avg_logprob": -0.17244665084346647,
        "compression_ratio": 1.554585152838428,
        "end": 691.28,
        "id": 111,
        "no_speech_prob": 0.0008295818697661161,
        "seek": 67752,
        "start": 684.56,
        "temperature": 0,
        "text": " theta is a common way to notate it. So if I want to place the month January over here,",
        "tokens": [
          50716,
          9725,
          307,
          257,
          2689,
          636,
          281,
          406,
          473,
          309,
          13,
          407,
          498,
          286,
          528,
          281,
          1081,
          264,
          1618,
          7061,
          670,
          510,
          11,
          51052
        ]
      },
      {
        "avg_logprob": -0.17244665084346647,
        "compression_ratio": 1.554585152838428,
        "end": 697.52,
        "id": 112,
        "no_speech_prob": 0.0008295818697661161,
        "seek": 67752,
        "start": 691.28,
        "temperature": 0,
        "text": " maybe that's an angle of 60 degrees with a certain distance from the center.",
        "tokens": [
          51052,
          1310,
          300,
          311,
          364,
          5802,
          295,
          4060,
          5310,
          365,
          257,
          1629,
          4560,
          490,
          264,
          3056,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.17244665084346647,
        "compression_ratio": 1.554585152838428,
        "end": 703.1999999999999,
        "id": 113,
        "no_speech_prob": 0.0008295818697661161,
        "seek": 67752,
        "start": 697.52,
        "temperature": 0,
        "text": " But I actually need to know the X, Y to be able to draw it in P5. And the formula for doing that,",
        "tokens": [
          51364,
          583,
          286,
          767,
          643,
          281,
          458,
          264,
          1783,
          11,
          398,
          281,
          312,
          1075,
          281,
          2642,
          309,
          294,
          430,
          20,
          13,
          400,
          264,
          8513,
          337,
          884,
          300,
          11,
          51648
        ]
      },
      {
        "avg_logprob": -0.16709892724149972,
        "compression_ratio": 1.704035874439462,
        "end": 713.12,
        "id": 114,
        "no_speech_prob": 0.0001022993674268946,
        "seek": 70320,
        "start": 703.2,
        "temperature": 0,
        "text": " which I derived in other videos, is X equals R times cosine of that angle, and Y equals R",
        "tokens": [
          50364,
          597,
          286,
          18949,
          294,
          661,
          2145,
          11,
          307,
          1783,
          6915,
          497,
          1413,
          23565,
          295,
          300,
          5802,
          11,
          293,
          398,
          6915,
          497,
          50860
        ]
      },
      {
        "avg_logprob": -0.16709892724149972,
        "compression_ratio": 1.704035874439462,
        "end": 719.76,
        "id": 115,
        "no_speech_prob": 0.0001022993674268946,
        "seek": 70320,
        "start": 713.12,
        "temperature": 0,
        "text": " times sine of that angle. I realized I could also just use translate and rotate. Maybe that would",
        "tokens": [
          50860,
          1413,
          18609,
          295,
          300,
          5802,
          13,
          286,
          5334,
          286,
          727,
          611,
          445,
          764,
          13799,
          293,
          13121,
          13,
          2704,
          300,
          576,
          51192
        ]
      },
      {
        "avg_logprob": -0.16709892724149972,
        "compression_ratio": 1.704035874439462,
        "end": 725.2,
        "id": 116,
        "no_speech_prob": 0.0001022993674268946,
        "seek": 70320,
        "start": 719.76,
        "temperature": 0,
        "text": " make more sense. It's always a question of whether you want to calculate and do the math yourself",
        "tokens": [
          51192,
          652,
          544,
          2020,
          13,
          467,
          311,
          1009,
          257,
          1168,
          295,
          1968,
          291,
          528,
          281,
          8873,
          293,
          360,
          264,
          5221,
          1803,
          51464
        ]
      },
      {
        "avg_logprob": -0.16709892724149972,
        "compression_ratio": 1.704035874439462,
        "end": 730.88,
        "id": 117,
        "no_speech_prob": 0.0001022993674268946,
        "seek": 70320,
        "start": 725.2,
        "temperature": 0,
        "text": " or use transformations in P5. And by the way, I also have videos around transformations in P5.",
        "tokens": [
          51464,
          420,
          764,
          34852,
          294,
          430,
          20,
          13,
          400,
          538,
          264,
          636,
          11,
          286,
          611,
          362,
          2145,
          926,
          34852,
          294,
          430,
          20,
          13,
          51748
        ]
      },
      {
        "avg_logprob": -0.15631301262799432,
        "compression_ratio": 1.7628205128205128,
        "end": 734.64,
        "id": 118,
        "no_speech_prob": 0.0009253759635612369,
        "seek": 73088,
        "start": 730.88,
        "temperature": 0,
        "text": " I'm going to think about this as I walk back over there. And by the time I get there,",
        "tokens": [
          50364,
          286,
          478,
          516,
          281,
          519,
          466,
          341,
          382,
          286,
          1792,
          646,
          670,
          456,
          13,
          400,
          538,
          264,
          565,
          286,
          483,
          456,
          11,
          50552
        ]
      },
      {
        "avg_logprob": -0.15631301262799432,
        "compression_ratio": 1.7628205128205128,
        "end": 738.96,
        "id": 119,
        "no_speech_prob": 0.0009253759635612369,
        "seek": 73088,
        "start": 734.64,
        "temperature": 0,
        "text": " I'll have picked one method of doing this. All right, I'm going to use polar coordinates,",
        "tokens": [
          50552,
          286,
          603,
          362,
          6183,
          472,
          3170,
          295,
          884,
          341,
          13,
          1057,
          558,
          11,
          286,
          478,
          516,
          281,
          764,
          12367,
          21056,
          11,
          50768
        ]
      },
      {
        "avg_logprob": -0.15631301262799432,
        "compression_ratio": 1.7628205128205128,
        "end": 742.56,
        "id": 120,
        "no_speech_prob": 0.0009253759635612369,
        "seek": 73088,
        "start": 738.96,
        "temperature": 0,
        "text": " because that's really what I'm going to need when I start doing the spiral of temperatures",
        "tokens": [
          50768,
          570,
          300,
          311,
          534,
          437,
          286,
          478,
          516,
          281,
          643,
          562,
          286,
          722,
          884,
          264,
          25165,
          295,
          12633,
          50948
        ]
      },
      {
        "avg_logprob": -0.15631301262799432,
        "compression_ratio": 1.7628205128205128,
        "end": 747.4399999999999,
        "id": 121,
        "no_speech_prob": 0.0009253759635612369,
        "seek": 73088,
        "start": 742.56,
        "temperature": 0,
        "text": " themselves. But as an exercise, you might try placing all the labels without polar coordinates",
        "tokens": [
          50948,
          2969,
          13,
          583,
          382,
          364,
          5380,
          11,
          291,
          1062,
          853,
          17221,
          439,
          264,
          16949,
          1553,
          12367,
          21056,
          51192
        ]
      },
      {
        "avg_logprob": -0.15631301262799432,
        "compression_ratio": 1.7628205128205128,
        "end": 753.28,
        "id": 122,
        "no_speech_prob": 0.0009253759635612369,
        "seek": 73088,
        "start": 747.4399999999999,
        "temperature": 0,
        "text": " and just use translate and rotate. I also want to get the labels from the CSV file itself.",
        "tokens": [
          51192,
          293,
          445,
          764,
          13799,
          293,
          13121,
          13,
          286,
          611,
          528,
          281,
          483,
          264,
          16949,
          490,
          264,
          48814,
          3991,
          2564,
          13,
          51484
        ]
      },
      {
        "avg_logprob": -0.15631301262799432,
        "compression_ratio": 1.7628205128205128,
        "end": 759.68,
        "id": 123,
        "no_speech_prob": 0.0009253759635612369,
        "seek": 73088,
        "start": 753.28,
        "temperature": 0,
        "text": " So let me make a array called months. Well, it'll just be a variable called months. And I'm going",
        "tokens": [
          51484,
          407,
          718,
          385,
          652,
          257,
          10225,
          1219,
          2493,
          13,
          1042,
          11,
          309,
          603,
          445,
          312,
          257,
          7006,
          1219,
          2493,
          13,
          400,
          286,
          478,
          516,
          51804
        ]
      },
      {
        "avg_logprob": -0.20175751852333,
        "compression_ratio": 1.6387665198237886,
        "end": 769.12,
        "id": 124,
        "no_speech_prob": 0.008577448315918446,
        "seek": 75968,
        "start": 759.68,
        "temperature": 0,
        "text": " to say months equals data.columns. Let's just see. Console.log months. I'm going to take out",
        "tokens": [
          50364,
          281,
          584,
          2493,
          6915,
          1412,
          13,
          8768,
          449,
          3695,
          13,
          961,
          311,
          445,
          536,
          13,
          44152,
          13,
          4987,
          2493,
          13,
          286,
          478,
          516,
          281,
          747,
          484,
          50836
        ]
      },
      {
        "avg_logprob": -0.20175751852333,
        "compression_ratio": 1.6387665198237886,
        "end": 775.92,
        "id": 125,
        "no_speech_prob": 0.008577448315918446,
        "seek": 75968,
        "start": 769.12,
        "temperature": 0,
        "text": " these console logs. Okay, so that's giving me an array with those in it. It does have year in it.",
        "tokens": [
          50836,
          613,
          11076,
          20820,
          13,
          1033,
          11,
          370,
          300,
          311,
          2902,
          385,
          364,
          10225,
          365,
          729,
          294,
          309,
          13,
          467,
          775,
          362,
          1064,
          294,
          309,
          13,
          51176
        ]
      },
      {
        "avg_logprob": -0.20175751852333,
        "compression_ratio": 1.6387665198237886,
        "end": 784.8,
        "id": 126,
        "no_speech_prob": 0.008577448315918446,
        "seek": 75968,
        "start": 775.92,
        "temperature": 0,
        "text": " So why don't I make a copy of it with.slice and then months.splice. Let me take out that",
        "tokens": [
          51176,
          407,
          983,
          500,
          380,
          286,
          652,
          257,
          5055,
          295,
          309,
          365,
          2411,
          82,
          2081,
          384,
          293,
          550,
          2493,
          13,
          46535,
          573,
          13,
          961,
          385,
          747,
          484,
          300,
          51620
        ]
      },
      {
        "avg_logprob": -0.20175751852333,
        "compression_ratio": 1.6387665198237886,
        "end": 788.9599999999999,
        "id": 127,
        "no_speech_prob": 0.008577448315918446,
        "seek": 75968,
        "start": 784.8,
        "temperature": 0,
        "text": " first element. Splice is a function where you remove an element from an array. So now I have",
        "tokens": [
          51620,
          700,
          4478,
          13,
          19788,
          573,
          307,
          257,
          2445,
          689,
          291,
          4159,
          364,
          4478,
          490,
          364,
          10225,
          13,
          407,
          586,
          286,
          362,
          51828
        ]
      },
      {
        "avg_logprob": -0.1786057154337565,
        "compression_ratio": 1.548780487804878,
        "end": 798.8000000000001,
        "id": 128,
        "no_speech_prob": 0.0060975211672484875,
        "seek": 78896,
        "start": 788.96,
        "temperature": 0,
        "text": " an array with all the months in it. And let's start the first one at the top, which would be",
        "tokens": [
          50364,
          364,
          10225,
          365,
          439,
          264,
          2493,
          294,
          309,
          13,
          400,
          718,
          311,
          722,
          264,
          700,
          472,
          412,
          264,
          1192,
          11,
          597,
          576,
          312,
          50856
        ]
      },
      {
        "avg_logprob": -0.1786057154337565,
        "compression_ratio": 1.548780487804878,
        "end": 808.72,
        "id": 129,
        "no_speech_prob": 0.0060975211672484875,
        "seek": 78896,
        "start": 799.6800000000001,
        "temperature": 0,
        "text": " 0, negative 250. So all the months are being drawn right on top of each other.",
        "tokens": [
          50900,
          1958,
          11,
          3671,
          11650,
          13,
          407,
          439,
          264,
          2493,
          366,
          885,
          10117,
          558,
          322,
          1192,
          295,
          1184,
          661,
          13,
          51352
        ]
      },
      {
        "avg_logprob": -0.1786057154337565,
        "compression_ratio": 1.548780487804878,
        "end": 814.96,
        "id": 130,
        "no_speech_prob": 0.0060975211672484875,
        "seek": 78896,
        "start": 808.72,
        "temperature": 0,
        "text": " So I need to start moving them according to polar coordinates. So I need to map I,",
        "tokens": [
          51352,
          407,
          286,
          643,
          281,
          722,
          2684,
          552,
          4650,
          281,
          12367,
          21056,
          13,
          407,
          286,
          643,
          281,
          4471,
          286,
          11,
          51664
        ]
      },
      {
        "avg_logprob": -0.1644150195735516,
        "compression_ratio": 1.6343612334801763,
        "end": 822.08,
        "id": 131,
        "no_speech_prob": 0.002550898352637887,
        "seek": 81496,
        "start": 814.96,
        "temperature": 0,
        "text": " which is counting through the array, which goes from 0 to the number of months, to an angle.",
        "tokens": [
          50364,
          597,
          307,
          13251,
          807,
          264,
          10225,
          11,
          597,
          1709,
          490,
          1958,
          281,
          264,
          1230,
          295,
          2493,
          11,
          281,
          364,
          5802,
          13,
          50720
        ]
      },
      {
        "avg_logprob": -0.1644150195735516,
        "compression_ratio": 1.6343612334801763,
        "end": 828.88,
        "id": 132,
        "no_speech_prob": 0.002550898352637887,
        "seek": 81496,
        "start": 822.08,
        "temperature": 0,
        "text": " And if it's relative to the horizontal axis, the top is going to be negative pi divided by 2,",
        "tokens": [
          50720,
          400,
          498,
          309,
          311,
          4972,
          281,
          264,
          12750,
          10298,
          11,
          264,
          1192,
          307,
          516,
          281,
          312,
          3671,
          3895,
          6666,
          538,
          568,
          11,
          51060
        ]
      },
      {
        "avg_logprob": -0.1644150195735516,
        "compression_ratio": 1.6343612334801763,
        "end": 834.5600000000001,
        "id": 133,
        "no_speech_prob": 0.002550898352637887,
        "seek": 81496,
        "start": 828.88,
        "temperature": 0,
        "text": " which is radians for negative 90 degrees. I think this is going to be easier to work out if we just",
        "tokens": [
          51060,
          597,
          307,
          2843,
          2567,
          337,
          3671,
          4289,
          5310,
          13,
          286,
          519,
          341,
          307,
          516,
          281,
          312,
          3571,
          281,
          589,
          484,
          498,
          321,
          445,
          51344
        ]
      },
      {
        "avg_logprob": -0.1644150195735516,
        "compression_ratio": 1.6343612334801763,
        "end": 840.32,
        "id": 134,
        "no_speech_prob": 0.002550898352637887,
        "seek": 81496,
        "start": 834.5600000000001,
        "temperature": 0,
        "text": " think of it from 0 to 360 degrees or 0 to 2 pi, and then I'll shift it if I need to.",
        "tokens": [
          51344,
          519,
          295,
          309,
          490,
          1958,
          281,
          13898,
          5310,
          420,
          1958,
          281,
          568,
          3895,
          11,
          293,
          550,
          286,
          603,
          5513,
          309,
          498,
          286,
          643,
          281,
          13,
          51632
        ]
      },
      {
        "avg_logprob": -0.254715607716487,
        "compression_ratio": 1.6293103448275863,
        "end": 846.72,
        "id": 135,
        "no_speech_prob": 0.020332006737589836,
        "seek": 84032,
        "start": 840.96,
        "temperature": 0,
        "text": " And also, I just realized that I don't need to use slice and then splice. So if you were",
        "tokens": [
          50396,
          400,
          611,
          11,
          286,
          445,
          5334,
          300,
          286,
          500,
          380,
          643,
          281,
          764,
          13153,
          293,
          550,
          4732,
          573,
          13,
          407,
          498,
          291,
          645,
          50684
        ]
      },
      {
        "avg_logprob": -0.254715607716487,
        "compression_ratio": 1.6293103448275863,
        "end": 851.6,
        "id": 136,
        "no_speech_prob": 0.020332006737589836,
        "seek": 84032,
        "start": 846.72,
        "temperature": 0,
        "text": " shouting at the screen earlier, I'm now going to fix that. I could just actually say slice",
        "tokens": [
          50684,
          20382,
          412,
          264,
          2568,
          3071,
          11,
          286,
          478,
          586,
          516,
          281,
          3191,
          300,
          13,
          286,
          727,
          445,
          767,
          584,
          13153,
          50928
        ]
      },
      {
        "avg_logprob": -0.254715607716487,
        "compression_ratio": 1.6293103448275863,
        "end": 856.88,
        "id": 137,
        "no_speech_prob": 0.020332006737589836,
        "seek": 84032,
        "start": 851.6,
        "temperature": 0,
        "text": " and give it 1, which will give me a copy of the array, starting with the second element or index",
        "tokens": [
          50928,
          293,
          976,
          309,
          502,
          11,
          597,
          486,
          976,
          385,
          257,
          5055,
          295,
          264,
          10225,
          11,
          2891,
          365,
          264,
          1150,
          4478,
          420,
          8186,
          51192
        ]
      },
      {
        "avg_logprob": -0.254715607716487,
        "compression_ratio": 1.6293103448275863,
        "end": 869.12,
        "id": 138,
        "no_speech_prob": 0.020332006737589836,
        "seek": 84032,
        "start": 856.88,
        "temperature": 0,
        "text": " 1. So now x is 250 times cosine of the angle, and y is 250 times sine of the angle. Oh, look at that!",
        "tokens": [
          51192,
          502,
          13,
          407,
          586,
          2031,
          307,
          11650,
          1413,
          23565,
          295,
          264,
          5802,
          11,
          293,
          288,
          307,
          11650,
          1413,
          18609,
          295,
          264,
          5802,
          13,
          876,
          11,
          574,
          412,
          300,
          0,
          51804
        ]
      },
      {
        "avg_logprob": -0.17494297971819886,
        "compression_ratio": 1.4958333333333333,
        "end": 875.36,
        "id": 139,
        "no_speech_prob": 0.0000991523265838623,
        "seek": 86912,
        "start": 869.12,
        "temperature": 0,
        "text": " Oh, look at that! So I'm not paying attention to the details of my data set. There's actually",
        "tokens": [
          50364,
          876,
          11,
          574,
          412,
          300,
          0,
          407,
          286,
          478,
          406,
          6229,
          3202,
          281,
          264,
          4365,
          295,
          452,
          1412,
          992,
          13,
          821,
          311,
          767,
          50676
        ]
      },
      {
        "avg_logprob": -0.17494297971819886,
        "compression_ratio": 1.4958333333333333,
        "end": 883.92,
        "id": 140,
        "no_speech_prob": 0.0000991523265838623,
        "seek": 86912,
        "start": 875.36,
        "temperature": 0,
        "text": " 18 column headers, but there's not 18 months. So why don't I say from 1 to 13? That's going to",
        "tokens": [
          50676,
          2443,
          7738,
          45101,
          11,
          457,
          456,
          311,
          406,
          2443,
          2493,
          13,
          407,
          983,
          500,
          380,
          286,
          584,
          490,
          502,
          281,
          3705,
          30,
          663,
          311,
          516,
          281,
          51104
        ]
      },
      {
        "avg_logprob": -0.17494297971819886,
        "compression_ratio": 1.4958333333333333,
        "end": 889.28,
        "id": 141,
        "no_speech_prob": 0.0000991523265838623,
        "seek": 86912,
        "start": 883.92,
        "temperature": 0,
        "text": " give me all 12 months. And you can see it's working, but January is off to the right.",
        "tokens": [
          51104,
          976,
          385,
          439,
          2272,
          2493,
          13,
          400,
          291,
          393,
          536,
          309,
          311,
          1364,
          11,
          457,
          7061,
          307,
          766,
          281,
          264,
          558,
          13,
          51372
        ]
      },
      {
        "avg_logprob": -0.17494297971819886,
        "compression_ratio": 1.4958333333333333,
        "end": 896.8,
        "id": 142,
        "no_speech_prob": 0.0000991523265838623,
        "seek": 86912,
        "start": 890,
        "temperature": 0,
        "text": " So let's just say that angle is everything minus pi divided by 2. Whoops, not there,",
        "tokens": [
          51408,
          407,
          718,
          311,
          445,
          584,
          300,
          5802,
          307,
          1203,
          3175,
          3895,
          6666,
          538,
          568,
          13,
          45263,
          11,
          406,
          456,
          11,
          51748
        ]
      },
      {
        "avg_logprob": -0.1739948497099035,
        "compression_ratio": 1.6422413793103448,
        "end": 903.4399999999999,
        "id": 143,
        "no_speech_prob": 0.00016865260840859264,
        "seek": 89680,
        "start": 896.8,
        "temperature": 0,
        "text": " not the map, after minus pi divided by 2. And in the original version, December is at the top,",
        "tokens": [
          50364,
          406,
          264,
          4471,
          11,
          934,
          3175,
          3895,
          6666,
          538,
          568,
          13,
          400,
          294,
          264,
          3380,
          3037,
          11,
          7687,
          307,
          412,
          264,
          1192,
          11,
          50696
        ]
      },
      {
        "avg_logprob": -0.1739948497099035,
        "compression_ratio": 1.6422413793103448,
        "end": 909.3599999999999,
        "id": 144,
        "no_speech_prob": 0.00016865260840859264,
        "seek": 89680,
        "start": 903.4399999999999,
        "temperature": 0,
        "text": " so let's actually make that happen. How would I do that? All right, so there's probably some",
        "tokens": [
          50696,
          370,
          718,
          311,
          767,
          652,
          300,
          1051,
          13,
          1012,
          576,
          286,
          360,
          300,
          30,
          1057,
          558,
          11,
          370,
          456,
          311,
          1391,
          512,
          50992
        ]
      },
      {
        "avg_logprob": -0.1739948497099035,
        "compression_ratio": 1.6422413793103448,
        "end": 913.92,
        "id": 145,
        "no_speech_prob": 0.00016865260840859264,
        "seek": 89680,
        "start": 909.3599999999999,
        "temperature": 0,
        "text": " clever ways that I could do this, but how about I just type out the months in the order that I want",
        "tokens": [
          50992,
          13494,
          2098,
          300,
          286,
          727,
          360,
          341,
          11,
          457,
          577,
          466,
          286,
          445,
          2010,
          484,
          264,
          2493,
          294,
          264,
          1668,
          300,
          286,
          528,
          51220
        ]
      },
      {
        "avg_logprob": -0.1739948497099035,
        "compression_ratio": 1.6422413793103448,
        "end": 921.04,
        "id": 146,
        "no_speech_prob": 0.00016865260840859264,
        "seek": 89680,
        "start": 913.92,
        "temperature": 0,
        "text": " them? And actually, in that sense, I don't need to do this shift, because I just want to have",
        "tokens": [
          51220,
          552,
          30,
          400,
          767,
          11,
          294,
          300,
          2020,
          11,
          286,
          500,
          380,
          643,
          281,
          360,
          341,
          5513,
          11,
          570,
          286,
          445,
          528,
          281,
          362,
          51576
        ]
      },
      {
        "avg_logprob": -0.2599835676305434,
        "compression_ratio": 1.31875,
        "end": 922.48,
        "id": 147,
        "no_speech_prob": 0.13116146624088287,
        "seek": 92104,
        "start": 921.04,
        "temperature": 0,
        "text": " March be the first one.",
        "tokens": [
          50364,
          6129,
          312,
          264,
          700,
          472,
          13,
          50436
        ]
      },
      {
        "avg_logprob": -0.2599835676305434,
        "compression_ratio": 1.31875,
        "end": 937.1999999999999,
        "id": 148,
        "no_speech_prob": 0.13116146624088287,
        "seek": 92104,
        "start": 930.8,
        "temperature": 0,
        "text": " Oh, they don't line up at the top. Wait, March, June, July. Oh, I've left out September.",
        "tokens": [
          50852,
          876,
          11,
          436,
          500,
          380,
          1622,
          493,
          412,
          264,
          1192,
          13,
          3802,
          11,
          6129,
          11,
          6928,
          11,
          7370,
          13,
          876,
          11,
          286,
          600,
          1411,
          484,
          7216,
          13,
          51172
        ]
      },
      {
        "avg_logprob": -0.2599835676305434,
        "compression_ratio": 1.31875,
        "end": 945.4399999999999,
        "id": 149,
        "no_speech_prob": 0.13116146624088287,
        "seek": 92104,
        "start": 938.0799999999999,
        "temperature": 0,
        "text": " All right, so mine doesn't look exactly, but oh, oh no, I forgot February. No wonder. There we go,",
        "tokens": [
          51216,
          1057,
          558,
          11,
          370,
          3892,
          1177,
          380,
          574,
          2293,
          11,
          457,
          1954,
          11,
          1954,
          572,
          11,
          286,
          5298,
          8711,
          13,
          883,
          2441,
          13,
          821,
          321,
          352,
          11,
          51584
        ]
      },
      {
        "avg_logprob": -0.17201693628875303,
        "compression_ratio": 1.427807486631016,
        "end": 950.72,
        "id": 150,
        "no_speech_prob": 0.029310522601008415,
        "seek": 94544,
        "start": 945.44,
        "temperature": 0,
        "text": " everybody. We got to get all 12 months in, people. I'm just checking to see if you're",
        "tokens": [
          50364,
          2201,
          13,
          492,
          658,
          281,
          483,
          439,
          2272,
          2493,
          294,
          11,
          561,
          13,
          286,
          478,
          445,
          8568,
          281,
          536,
          498,
          291,
          434,
          50628
        ]
      },
      {
        "avg_logprob": -0.17201693628875303,
        "compression_ratio": 1.427807486631016,
        "end": 956.1600000000001,
        "id": 151,
        "no_speech_prob": 0.029310522601008415,
        "seek": 94544,
        "start": 950.72,
        "temperature": 0,
        "text": " paying attention, that's all. Something that also might be nice is I can rotate the text to",
        "tokens": [
          50628,
          6229,
          3202,
          11,
          300,
          311,
          439,
          13,
          6595,
          300,
          611,
          1062,
          312,
          1481,
          307,
          286,
          393,
          13121,
          264,
          2487,
          281,
          50900
        ]
      },
      {
        "avg_logprob": -0.17201693628875303,
        "compression_ratio": 1.427807486631016,
        "end": 970.32,
        "id": 152,
        "no_speech_prob": 0.029310522601008415,
        "seek": 94544,
        "start": 956.1600000000001,
        "temperature": 0,
        "text": " line up with that circle. There we go. We now have a base pattern for the climate spiral.",
        "tokens": [
          50900,
          1622,
          493,
          365,
          300,
          6329,
          13,
          821,
          321,
          352,
          13,
          492,
          586,
          362,
          257,
          3096,
          5102,
          337,
          264,
          5659,
          25165,
          13,
          51608
        ]
      },
      {
        "avg_logprob": -0.24319093877618964,
        "compression_ratio": 1.4171779141104295,
        "end": 977.44,
        "id": 153,
        "no_speech_prob": 0.000036478326364886016,
        "seek": 97032,
        "start": 970.32,
        "temperature": 0,
        "text": " Okay, it's time for some data. Let's start by drawing one ring for one year.",
        "tokens": [
          50364,
          1033,
          11,
          309,
          311,
          565,
          337,
          512,
          1412,
          13,
          961,
          311,
          722,
          538,
          6316,
          472,
          4875,
          337,
          472,
          1064,
          13,
          50720
        ]
      },
      {
        "avg_logprob": -0.24319093877618964,
        "compression_ratio": 1.4171779141104295,
        "end": 982.4000000000001,
        "id": 154,
        "no_speech_prob": 0.000036478326364886016,
        "seek": 97032,
        "start": 978,
        "temperature": 0,
        "text": " So remember, I can get the first row with getRowIndex zero.",
        "tokens": [
          50748,
          407,
          1604,
          11,
          286,
          393,
          483,
          264,
          700,
          5386,
          365,
          483,
          49,
          305,
          21790,
          3121,
          4018,
          13,
          50968
        ]
      },
      {
        "avg_logprob": -0.24319093877618964,
        "compression_ratio": 1.4171779141104295,
        "end": 991.5200000000001,
        "id": 155,
        "no_speech_prob": 0.000036478326364886016,
        "seek": 97032,
        "start": 984.08,
        "temperature": 0,
        "text": " Then what I want to do is use my months array to get the anomaly value for every single month.",
        "tokens": [
          51052,
          1396,
          437,
          286,
          528,
          281,
          360,
          307,
          764,
          452,
          2493,
          10225,
          281,
          483,
          264,
          42737,
          2158,
          337,
          633,
          2167,
          1618,
          13,
          51424
        ]
      },
      {
        "avg_logprob": -0.4352349977235536,
        "compression_ratio": 1.494186046511628,
        "end": 995.68,
        "id": 156,
        "no_speech_prob": 0.0018102037720382214,
        "seek": 99152,
        "start": 991.76,
        "temperature": 0,
        "text": " Let's add no loop and console.log that just to see that it works.",
        "tokens": [
          50376,
          961,
          311,
          909,
          572,
          6367,
          293,
          11076,
          13,
          4987,
          300,
          445,
          281,
          536,
          300,
          309,
          1985,
          13,
          50572
        ]
      },
      {
        "avg_logprob": -0.4352349977235536,
        "compression_ratio": 1.494186046511628,
        "end": 1003.12,
        "id": 157,
        "no_speech_prob": 0.0018102037720382214,
        "seek": 99152,
        "start": 996.8,
        "temperature": 0,
        "text": " P5 is telling me there is a reserved word value, so I'll change that to anomaly.",
        "tokens": [
          50628,
          430,
          20,
          307,
          3585,
          385,
          456,
          307,
          257,
          24819,
          1349,
          2158,
          11,
          370,
          286,
          603,
          1319,
          300,
          281,
          42737,
          13,
          50944
        ]
      },
      {
        "avg_logprob": -0.4352349977235536,
        "compression_ratio": 1.494186046511628,
        "end": 1007.52,
        "id": 158,
        "no_speech_prob": 0.0018102037720382214,
        "seek": 99152,
        "start": 1005.92,
        "temperature": 0,
        "text": " And I also could look at the year.",
        "tokens": [
          51084,
          400,
          286,
          611,
          727,
          574,
          412,
          264,
          1064,
          13,
          51164
        ]
      },
      {
        "avg_logprob": -0.4352349977235536,
        "compression_ratio": 1.494186046511628,
        "end": 1015.12,
        "id": 159,
        "no_speech_prob": 0.0018102037720382214,
        "seek": 99152,
        "start": 1011.1999999999999,
        "temperature": 0,
        "text": " And the original design put the year in the center, so let's draw it there.",
        "tokens": [
          51348,
          400,
          264,
          3380,
          1715,
          829,
          264,
          1064,
          294,
          264,
          3056,
          11,
          370,
          718,
          311,
          2642,
          309,
          456,
          13,
          51544
        ]
      },
      {
        "avg_logprob": -0.39162693852963654,
        "compression_ratio": 1.478021978021978,
        "end": 1022.08,
        "id": 160,
        "no_speech_prob": 0.00045831030001863837,
        "seek": 101512,
        "start": 1016.08,
        "temperature": 0,
        "text": " So now I just need a way to draw the spiral. And in fact, I can use the same exact polar",
        "tokens": [
          50412,
          407,
          586,
          286,
          445,
          643,
          257,
          636,
          281,
          2642,
          264,
          25165,
          13,
          400,
          294,
          1186,
          11,
          286,
          393,
          764,
          264,
          912,
          1900,
          12367,
          50712
        ]
      },
      {
        "avg_logprob": -0.39162693852963654,
        "compression_ratio": 1.478021978021978,
        "end": 1030.08,
        "id": 161,
        "no_speech_prob": 0.00045831030001863837,
        "seek": 101512,
        "start": 1022.08,
        "temperature": 0,
        "text": " coordinate math to place a data point around this radial path in the same way that I did the months.",
        "tokens": [
          50712,
          15670,
          5221,
          281,
          1081,
          257,
          1412,
          935,
          926,
          341,
          38783,
          3100,
          294,
          264,
          912,
          636,
          300,
          286,
          630,
          264,
          2493,
          13,
          51112
        ]
      },
      {
        "avg_logprob": -0.39162693852963654,
        "compression_ratio": 1.478021978021978,
        "end": 1038.16,
        "id": 162,
        "no_speech_prob": 0.00045831030001863837,
        "seek": 101512,
        "start": 1033.68,
        "temperature": 0,
        "text": " Now I need to remember that 90 degree offset because I'm starting from the top.",
        "tokens": [
          51292,
          823,
          286,
          643,
          281,
          1604,
          300,
          4289,
          4314,
          18687,
          570,
          286,
          478,
          2891,
          490,
          264,
          1192,
          13,
          51516
        ]
      },
      {
        "avg_logprob": -0.5632532098320093,
        "compression_ratio": 1.6556603773584906,
        "end": 1042.64,
        "id": 163,
        "no_speech_prob": 0.003707188880071044,
        "seek": 103816,
        "start": 1038.24,
        "temperature": 0,
        "text": " And let's try to place the points along the zero degrees right now.",
        "tokens": [
          50368,
          400,
          718,
          311,
          853,
          281,
          1081,
          264,
          2793,
          2051,
          264,
          4018,
          5310,
          558,
          586,
          13,
          50588
        ]
      },
      {
        "avg_logprob": -0.5632532098320093,
        "compression_ratio": 1.6556603773584906,
        "end": 1051.92,
        "id": 164,
        "no_speech_prob": 0.003707188880071044,
        "seek": 103816,
        "start": 1046.0800000000002,
        "temperature": 0,
        "text": " Okay, so you can see what I've done is in the same way I placed all the months around the",
        "tokens": [
          50760,
          1033,
          11,
          370,
          291,
          393,
          536,
          437,
          286,
          600,
          1096,
          307,
          294,
          264,
          912,
          636,
          286,
          7074,
          439,
          264,
          2493,
          926,
          264,
          51052
        ]
      },
      {
        "avg_logprob": -0.5632532098320093,
        "compression_ratio": 1.6556603773584906,
        "end": 1060.0800000000002,
        "id": 165,
        "no_speech_prob": 0.003707188880071044,
        "seek": 103816,
        "start": 1051.92,
        "temperature": 0,
        "text": " outer ring, I've now placed a dot around the inner ring that is where zero degrees, that base",
        "tokens": [
          51052,
          10847,
          4875,
          11,
          286,
          600,
          586,
          7074,
          257,
          5893,
          926,
          264,
          7284,
          4875,
          300,
          307,
          689,
          4018,
          5310,
          11,
          300,
          3096,
          51460
        ]
      },
      {
        "avg_logprob": -0.5632532098320093,
        "compression_ratio": 1.6556603773584906,
        "end": 1066.3200000000002,
        "id": 166,
        "no_speech_prob": 0.003707188880071044,
        "seek": 103816,
        "start": 1060.0800000000002,
        "temperature": 0,
        "text": " pattern for the climate spiral is. And I can now use that to get the anomaly value for every single",
        "tokens": [
          51460,
          5102,
          337,
          264,
          5659,
          25165,
          307,
          13,
          400,
          286,
          393,
          586,
          764,
          300,
          281,
          483,
          264,
          42737,
          2158,
          337,
          633,
          2167,
          51772
        ]
      },
      {
        "avg_logprob": -0.20404340865764212,
        "compression_ratio": 1.6853448275862069,
        "end": 1072.6399999999999,
        "id": 167,
        "no_speech_prob": 0.00198773923330009,
        "seek": 106632,
        "start": 1066.6399999999999,
        "temperature": 0,
        "text": " degrees that baseline temperature is indicated. So something I should really do here, when I was",
        "tokens": [
          50380,
          5310,
          300,
          20518,
          4292,
          307,
          16176,
          13,
          407,
          746,
          286,
          820,
          534,
          360,
          510,
          11,
          562,
          286,
          390,
          50680
        ]
      },
      {
        "avg_logprob": -0.20404340865764212,
        "compression_ratio": 1.6853448275862069,
        "end": 1077.84,
        "id": 168,
        "no_speech_prob": 0.00198773923330009,
        "seek": 106632,
        "start": 1072.6399999999999,
        "temperature": 0,
        "text": " setting this layout initially, I just hard-coded a lot of values. But now it's very important that",
        "tokens": [
          50680,
          3287,
          341,
          13333,
          9105,
          11,
          286,
          445,
          1152,
          12,
          66,
          12340,
          257,
          688,
          295,
          4190,
          13,
          583,
          586,
          309,
          311,
          588,
          1021,
          300,
          50940
        ]
      },
      {
        "avg_logprob": -0.20404340865764212,
        "compression_ratio": 1.6853448275862069,
        "end": 1085.2,
        "id": 169,
        "no_speech_prob": 0.00198773923330009,
        "seek": 106632,
        "start": 1077.84,
        "temperature": 0,
        "text": " I know that zero degrees means 50 pixels from the center, and one degree means 100 pixels from the",
        "tokens": [
          50940,
          286,
          458,
          300,
          4018,
          5310,
          1355,
          2625,
          18668,
          490,
          264,
          3056,
          11,
          293,
          472,
          4314,
          1355,
          2319,
          18668,
          490,
          264,
          51308
        ]
      },
      {
        "avg_logprob": -0.20404340865764212,
        "compression_ratio": 1.6853448275862069,
        "end": 1092.96,
        "id": 170,
        "no_speech_prob": 0.00198773923330009,
        "seek": 106632,
        "start": 1085.2,
        "temperature": 0,
        "text": " center, 150 pixels from the center. So let's set up some global variables. I'll call it the zero",
        "tokens": [
          51308,
          3056,
          11,
          8451,
          18668,
          490,
          264,
          3056,
          13,
          407,
          718,
          311,
          992,
          493,
          512,
          4338,
          9102,
          13,
          286,
          603,
          818,
          309,
          264,
          4018,
          51696
        ]
      },
      {
        "avg_logprob": -0.19467631508322322,
        "compression_ratio": 1.6585365853658536,
        "end": 1100.4,
        "id": 171,
        "no_speech_prob": 0.0007321796729229391,
        "seek": 109296,
        "start": 1092.96,
        "temperature": 0,
        "text": " radius and the one radius. Maybe the distance between the center and zero needs to be equal",
        "tokens": [
          50364,
          15845,
          293,
          264,
          472,
          15845,
          13,
          2704,
          264,
          4560,
          1296,
          264,
          3056,
          293,
          4018,
          2203,
          281,
          312,
          2681,
          50736
        ]
      },
      {
        "avg_logprob": -0.19467631508322322,
        "compression_ratio": 1.6585365853658536,
        "end": 1110.24,
        "id": 172,
        "no_speech_prob": 0.0007321796729229391,
        "seek": 109296,
        "start": 1100.4,
        "temperature": 0,
        "text": " to the distance between zero and one. So how about 75 and 150? So zero degrees is at zero radius,",
        "tokens": [
          50736,
          281,
          264,
          4560,
          1296,
          4018,
          293,
          472,
          13,
          407,
          577,
          466,
          9562,
          293,
          8451,
          30,
          407,
          4018,
          5310,
          307,
          412,
          4018,
          15845,
          11,
          51228
        ]
      },
      {
        "avg_logprob": -0.19467631508322322,
        "compression_ratio": 1.6585365853658536,
        "end": 1118.08,
        "id": 173,
        "no_speech_prob": 0.0007321796729229391,
        "seek": 109296,
        "start": 1111.04,
        "temperature": 0,
        "text": " plus some offset for the text, maybe 10 pixels. This one degrees is at one radius.",
        "tokens": [
          51268,
          1804,
          512,
          18687,
          337,
          264,
          2487,
          11,
          1310,
          1266,
          18668,
          13,
          639,
          472,
          5310,
          307,
          412,
          472,
          15845,
          13,
          51620
        ]
      },
      {
        "avg_logprob": -0.27011494822316356,
        "compression_ratio": 1.6446700507614214,
        "end": 1120.3999999999999,
        "id": 174,
        "no_speech_prob": 0.00022341604926623404,
        "seek": 111808,
        "start": 1118.3999999999999,
        "temperature": 0,
        "text": " Then I need to size those circles correctly.",
        "tokens": [
          50380,
          1396,
          286,
          643,
          281,
          2744,
          729,
          13040,
          8944,
          13,
          50480
        ]
      },
      {
        "avg_logprob": -0.27011494822316356,
        "compression_ratio": 1.6446700507614214,
        "end": 1130.32,
        "id": 175,
        "no_speech_prob": 0.00022341604926623404,
        "seek": 111808,
        "start": 1123.84,
        "temperature": 0,
        "text": " And now the x and y positions of these dots are going to be mapped to the actual data.",
        "tokens": [
          50652,
          400,
          586,
          264,
          2031,
          293,
          288,
          8432,
          295,
          613,
          15026,
          366,
          516,
          281,
          312,
          33318,
          281,
          264,
          3539,
          1412,
          13,
          50976
        ]
      },
      {
        "avg_logprob": -0.27011494822316356,
        "compression_ratio": 1.6446700507614214,
        "end": 1138.6399999999999,
        "id": 176,
        "no_speech_prob": 0.00022341604926623404,
        "seek": 111808,
        "start": 1131.9199999999998,
        "temperature": 0,
        "text": " So to figure out what values need to go in the map function, I just need to look at what are",
        "tokens": [
          51056,
          407,
          281,
          2573,
          484,
          437,
          4190,
          643,
          281,
          352,
          294,
          264,
          4471,
          2445,
          11,
          286,
          445,
          643,
          281,
          574,
          412,
          437,
          366,
          51392
        ]
      },
      {
        "avg_logprob": -0.27011494822316356,
        "compression_ratio": 1.6446700507614214,
        "end": 1146.8799999999999,
        "id": 177,
        "no_speech_prob": 0.00022341604926623404,
        "seek": 111808,
        "start": 1138.6399999999999,
        "temperature": 0,
        "text": " the pixel values associated with specific degree values. Zero degrees and one degree are associated",
        "tokens": [
          51392,
          264,
          19261,
          4190,
          6615,
          365,
          2685,
          4314,
          4190,
          13,
          17182,
          5310,
          293,
          472,
          4314,
          366,
          6615,
          51804
        ]
      },
      {
        "avg_logprob": -0.20486802321213943,
        "compression_ratio": 1.592,
        "end": 1155.2,
        "id": 178,
        "no_speech_prob": 0.0041337828151881695,
        "seek": 114688,
        "start": 1147.1200000000001,
        "temperature": 0,
        "text": " with pixel 75 and 150. It's important to note that the map function is really special. You don't have",
        "tokens": [
          50376,
          365,
          19261,
          9562,
          293,
          8451,
          13,
          467,
          311,
          1021,
          281,
          3637,
          300,
          264,
          4471,
          2445,
          307,
          534,
          2121,
          13,
          509,
          500,
          380,
          362,
          50780
        ]
      },
      {
        "avg_logprob": -0.20486802321213943,
        "compression_ratio": 1.592,
        "end": 1161.44,
        "id": 179,
        "no_speech_prob": 0.0041337828151881695,
        "seek": 114688,
        "start": 1155.2,
        "temperature": 0,
        "text": " to know the specific minimum and maximum of your range. You just need to establish some corresponding",
        "tokens": [
          50780,
          281,
          458,
          264,
          2685,
          7285,
          293,
          6674,
          295,
          428,
          3613,
          13,
          509,
          445,
          643,
          281,
          8327,
          512,
          11760,
          51092
        ]
      },
      {
        "avg_logprob": -0.20486802321213943,
        "compression_ratio": 1.592,
        "end": 1166.96,
        "id": 180,
        "no_speech_prob": 0.0041337828151881695,
        "seek": 114688,
        "start": 1161.44,
        "temperature": 0,
        "text": " values between two ranges, which I have right here. So even if I have negative values, it's going to",
        "tokens": [
          51092,
          4190,
          1296,
          732,
          22526,
          11,
          597,
          286,
          362,
          558,
          510,
          13,
          407,
          754,
          498,
          286,
          362,
          3671,
          4190,
          11,
          309,
          311,
          516,
          281,
          51368
        ]
      },
      {
        "avg_logprob": -0.20486802321213943,
        "compression_ratio": 1.592,
        "end": 1173.2,
        "id": 181,
        "no_speech_prob": 0.0041337828151881695,
        "seek": 114688,
        "start": 1166.96,
        "temperature": 0,
        "text": " figure out where to place those correctly below pixel 75 and values that are greater than one",
        "tokens": [
          51368,
          2573,
          484,
          689,
          281,
          1081,
          729,
          8944,
          2507,
          19261,
          9562,
          293,
          4190,
          300,
          366,
          5044,
          813,
          472,
          51680
        ]
      },
      {
        "avg_logprob": -0.18417046070098878,
        "compression_ratio": 1.4411764705882353,
        "end": 1182.88,
        "id": 182,
        "no_speech_prob": 0.008315661922097206,
        "seek": 117320,
        "start": 1173.2,
        "temperature": 0,
        "text": " degree beyond pixel 150. So those are all the values for 1880. If I pick a different year, like",
        "tokens": [
          50364,
          4314,
          4399,
          19261,
          8451,
          13,
          407,
          729,
          366,
          439,
          264,
          4190,
          337,
          2443,
          4702,
          13,
          759,
          286,
          1888,
          257,
          819,
          1064,
          11,
          411,
          50848
        ]
      },
      {
        "avg_logprob": -0.18417046070098878,
        "compression_ratio": 1.4411764705882353,
        "end": 1194.56,
        "id": 183,
        "no_speech_prob": 0.008315661922097206,
        "seek": 117320,
        "start": 1184,
        "temperature": 0,
        "text": " row 50, which is 1930, those are the values. 1980, and so 2020 would be row 140. Great. So I believe",
        "tokens": [
          50904,
          5386,
          2625,
          11,
          597,
          307,
          22350,
          11,
          729,
          366,
          264,
          4190,
          13,
          13626,
          11,
          293,
          370,
          4808,
          576,
          312,
          5386,
          21548,
          13,
          3769,
          13,
          407,
          286,
          1697,
          51432
        ]
      },
      {
        "avg_logprob": -0.18417046070098878,
        "compression_ratio": 1.4411764705882353,
        "end": 1200.48,
        "id": 184,
        "no_speech_prob": 0.008315661922097206,
        "seek": 117320,
        "start": 1194.56,
        "temperature": 0,
        "text": " that this mapping is now accurate. But I'm not just looking to place dots, I'm looking to connect",
        "tokens": [
          51432,
          300,
          341,
          18350,
          307,
          586,
          8559,
          13,
          583,
          286,
          478,
          406,
          445,
          1237,
          281,
          1081,
          15026,
          11,
          286,
          478,
          1237,
          281,
          1745,
          51728
        ]
      },
      {
        "avg_logprob": -0.2087126466416821,
        "compression_ratio": 1.5874439461883407,
        "end": 1206,
        "id": 185,
        "no_speech_prob": 0.000709668209310621,
        "seek": 120048,
        "start": 1200.48,
        "temperature": 0,
        "text": " everything with a spiral pattern. So I'm going to add begin shape and end shape.",
        "tokens": [
          50364,
          1203,
          365,
          257,
          25165,
          5102,
          13,
          407,
          286,
          478,
          516,
          281,
          909,
          1841,
          3909,
          293,
          917,
          3909,
          13,
          50640
        ]
      },
      {
        "avg_logprob": -0.2087126466416821,
        "compression_ratio": 1.5874439461883407,
        "end": 1214,
        "id": 186,
        "no_speech_prob": 0.000709668209310621,
        "seek": 120048,
        "start": 1207.84,
        "temperature": 0,
        "text": " I'm gonna say no fill, stroke 255. And instead of a circle, I'm going to set a vertex.",
        "tokens": [
          50732,
          286,
          478,
          799,
          584,
          572,
          2836,
          11,
          12403,
          3552,
          20,
          13,
          400,
          2602,
          295,
          257,
          6329,
          11,
          286,
          478,
          516,
          281,
          992,
          257,
          28162,
          13,
          51040
        ]
      },
      {
        "avg_logprob": -0.2087126466416821,
        "compression_ratio": 1.5874439461883407,
        "end": 1219.68,
        "id": 187,
        "no_speech_prob": 0.000709668209310621,
        "seek": 120048,
        "start": 1215.04,
        "temperature": 0,
        "text": " And right now I'm going to put close so that it connects the last point to the new point.",
        "tokens": [
          51092,
          400,
          558,
          586,
          286,
          478,
          516,
          281,
          829,
          1998,
          370,
          300,
          309,
          16967,
          264,
          1036,
          935,
          281,
          264,
          777,
          935,
          13,
          51324
        ]
      },
      {
        "avg_logprob": -0.2087126466416821,
        "compression_ratio": 1.5874439461883407,
        "end": 1229.3600000000001,
        "id": 188,
        "no_speech_prob": 0.000709668209310621,
        "seek": 120048,
        "start": 1220.32,
        "temperature": 0,
        "text": " So what should I do next? Let's see if we can add another loop to loop through every single row,",
        "tokens": [
          51356,
          407,
          437,
          820,
          286,
          360,
          958,
          30,
          961,
          311,
          536,
          498,
          321,
          393,
          909,
          1071,
          6367,
          281,
          6367,
          807,
          633,
          2167,
          5386,
          11,
          51808
        ]
      },
      {
        "avg_logprob": -0.19121194393076796,
        "compression_ratio": 1.5374449339207048,
        "end": 1235.52,
        "id": 189,
        "no_speech_prob": 0.00009028023487189785,
        "seek": 122936,
        "start": 1229.36,
        "temperature": 0,
        "text": " every year, all at once. Get row count is going to give me the total number of rows.",
        "tokens": [
          50364,
          633,
          1064,
          11,
          439,
          412,
          1564,
          13,
          3240,
          5386,
          1207,
          307,
          516,
          281,
          976,
          385,
          264,
          3217,
          1230,
          295,
          13241,
          13,
          50672
        ]
      },
      {
        "avg_logprob": -0.19121194393076796,
        "compression_ratio": 1.5374449339207048,
        "end": 1242.8799999999999,
        "id": 190,
        "no_speech_prob": 0.00009028023487189785,
        "seek": 122936,
        "start": 1238.08,
        "temperature": 0,
        "text": " So now I have an outer loop going through every row. Let me bring this in.",
        "tokens": [
          50800,
          407,
          586,
          286,
          362,
          364,
          10847,
          6367,
          516,
          807,
          633,
          5386,
          13,
          961,
          385,
          1565,
          341,
          294,
          13,
          51040
        ]
      },
      {
        "avg_logprob": -0.19121194393076796,
        "compression_ratio": 1.5374449339207048,
        "end": 1254.08,
        "id": 191,
        "no_speech_prob": 0.00009028023487189785,
        "seek": 122936,
        "start": 1245.04,
        "temperature": 0,
        "text": " So now instead of hard coding row 140 for the year 2020, I can put in j. Undefined. Let's",
        "tokens": [
          51148,
          407,
          586,
          2602,
          295,
          1152,
          17720,
          5386,
          21548,
          337,
          264,
          1064,
          4808,
          11,
          286,
          393,
          829,
          294,
          361,
          13,
          2719,
          5666,
          2001,
          13,
          961,
          311,
          51600
        ]
      },
      {
        "avg_logprob": -0.19121194393076796,
        "compression_ratio": 1.5374449339207048,
        "end": 1258,
        "id": 192,
        "no_speech_prob": 0.00009028023487189785,
        "seek": 122936,
        "start": 1254.08,
        "temperature": 0,
        "text": " simplify things for a moment by not drawing the year because I might need to do that in a different",
        "tokens": [
          51600,
          20460,
          721,
          337,
          257,
          1623,
          538,
          406,
          6316,
          264,
          1064,
          570,
          286,
          1062,
          643,
          281,
          360,
          300,
          294,
          257,
          819,
          51796
        ]
      },
      {
        "avg_logprob": -0.15926570641367058,
        "compression_ratio": 1.455958549222798,
        "end": 1264.16,
        "id": 193,
        "no_speech_prob": 0.010327881202101707,
        "seek": 125800,
        "start": 1258,
        "temperature": 0,
        "text": " way. This is maybe the most unhelpful error message I've ever seen. My suspicion is there",
        "tokens": [
          50364,
          636,
          13,
          639,
          307,
          1310,
          264,
          881,
          517,
          37451,
          906,
          6713,
          3636,
          286,
          600,
          1562,
          1612,
          13,
          1222,
          32020,
          307,
          456,
          50672
        ]
      },
      {
        "avg_logprob": -0.15926570641367058,
        "compression_ratio": 1.455958549222798,
        "end": 1269.76,
        "id": 194,
        "no_speech_prob": 0.010327881202101707,
        "seek": 125800,
        "start": 1264.16,
        "temperature": 0,
        "text": " might be some elements of the data set that are actually null or empty. We saw those asterisks,",
        "tokens": [
          50672,
          1062,
          312,
          512,
          4959,
          295,
          264,
          1412,
          992,
          300,
          366,
          767,
          18184,
          420,
          6707,
          13,
          492,
          1866,
          729,
          257,
          3120,
          271,
          1694,
          11,
          50952
        ]
      },
      {
        "avg_logprob": -0.15926570641367058,
        "compression_ratio": 1.455958549222798,
        "end": 1274.32,
        "id": 195,
        "no_speech_prob": 0.010327881202101707,
        "seek": 125800,
        "start": 1269.76,
        "temperature": 0,
        "text": " and that could be messing things up. Let's see if we can debug this. Let's put in a console log",
        "tokens": [
          50952,
          293,
          300,
          727,
          312,
          23258,
          721,
          493,
          13,
          961,
          311,
          536,
          498,
          321,
          393,
          24083,
          341,
          13,
          961,
          311,
          829,
          294,
          257,
          11076,
          3565,
          51180
        ]
      },
      {
        "avg_logprob": -0.18035583747060677,
        "compression_ratio": 1.6395348837209303,
        "end": 1286.8,
        "id": 196,
        "no_speech_prob": 0.3775147497653961,
        "seek": 127432,
        "start": 1274.32,
        "temperature": 0,
        "text": " for the anomaly. All right, let's try doing just two years. That worked. Three, four, 100.",
        "tokens": [
          50364,
          337,
          264,
          42737,
          13,
          1057,
          558,
          11,
          718,
          311,
          853,
          884,
          445,
          732,
          924,
          13,
          663,
          2732,
          13,
          6244,
          11,
          1451,
          11,
          2319,
          13,
          50988
        ]
      },
      {
        "avg_logprob": -0.18035583747060677,
        "compression_ratio": 1.6395348837209303,
        "end": 1294.8799999999999,
        "id": 197,
        "no_speech_prob": 0.3775147497653961,
        "seek": 127432,
        "start": 1288.24,
        "temperature": 0,
        "text": " All right, so I must be right. It must be getting to some point in the data where there is no",
        "tokens": [
          51060,
          1057,
          558,
          11,
          370,
          286,
          1633,
          312,
          558,
          13,
          467,
          1633,
          312,
          1242,
          281,
          512,
          935,
          294,
          264,
          1412,
          689,
          456,
          307,
          572,
          51392
        ]
      },
      {
        "avg_logprob": -0.18035583747060677,
        "compression_ratio": 1.6395348837209303,
        "end": 1301.12,
        "id": 198,
        "no_speech_prob": 0.3775147497653961,
        "seek": 127432,
        "start": 1294.8799999999999,
        "temperature": 0,
        "text": " anomaly reading. And I can see that that happens right there at the end of the data set where the",
        "tokens": [
          51392,
          42737,
          3760,
          13,
          400,
          286,
          393,
          536,
          300,
          300,
          2314,
          558,
          456,
          412,
          264,
          917,
          295,
          264,
          1412,
          992,
          689,
          264,
          51704
        ]
      },
      {
        "avg_logprob": -0.15292560352998621,
        "compression_ratio": 1.4775280898876404,
        "end": 1306.8799999999999,
        "id": 199,
        "no_speech_prob": 0.017442217096686363,
        "seek": 130112,
        "start": 1301.12,
        "temperature": 0,
        "text": " asterisks appear. A quick scan, I see some asterisks up here, but that's additional data",
        "tokens": [
          50364,
          257,
          3120,
          271,
          1694,
          4204,
          13,
          316,
          1702,
          11049,
          11,
          286,
          536,
          512,
          257,
          3120,
          271,
          1694,
          493,
          510,
          11,
          457,
          300,
          311,
          4497,
          1412,
          50652
        ]
      },
      {
        "avg_logprob": -0.15292560352998621,
        "compression_ratio": 1.4775280898876404,
        "end": 1314.8799999999999,
        "id": 200,
        "no_speech_prob": 0.017442217096686363,
        "seek": 130112,
        "start": 1306.8799999999999,
        "temperature": 0,
        "text": " that I'm not using. So I think we're okay. I wonder if the getNum will give me undefined.",
        "tokens": [
          50652,
          300,
          286,
          478,
          406,
          1228,
          13,
          407,
          286,
          519,
          321,
          434,
          1392,
          13,
          286,
          2441,
          498,
          264,
          483,
          45,
          449,
          486,
          976,
          385,
          674,
          5666,
          2001,
          13,
          51052
        ]
      },
      {
        "avg_logprob": -0.15292560352998621,
        "compression_ratio": 1.4775280898876404,
        "end": 1324.4799999999998,
        "id": 201,
        "no_speech_prob": 0.017442217096686363,
        "seek": 130112,
        "start": 1314.8799999999999,
        "temperature": 0,
        "text": " So let me just see if anomaly is not equal to undefined. What if I don't use getNum,",
        "tokens": [
          51052,
          407,
          718,
          385,
          445,
          536,
          498,
          42737,
          307,
          406,
          2681,
          281,
          674,
          5666,
          2001,
          13,
          708,
          498,
          286,
          500,
          380,
          764,
          483,
          45,
          449,
          11,
          51532
        ]
      },
      {
        "avg_logprob": -0.21170913696289062,
        "compression_ratio": 1.5251396648044693,
        "end": 1331.3600000000001,
        "id": 202,
        "no_speech_prob": 0.0062898797914385796,
        "seek": 132448,
        "start": 1325.1200000000001,
        "temperature": 0,
        "text": " but instead just use get? Oh, wow, it's able to interpret it as a number even with just get.",
        "tokens": [
          50396,
          457,
          2602,
          445,
          764,
          483,
          30,
          876,
          11,
          6076,
          11,
          309,
          311,
          1075,
          281,
          7302,
          309,
          382,
          257,
          1230,
          754,
          365,
          445,
          483,
          13,
          50708
        ]
      },
      {
        "avg_logprob": -0.21170913696289062,
        "compression_ratio": 1.5251396648044693,
        "end": 1336.88,
        "id": 203,
        "no_speech_prob": 0.0062898797914385796,
        "seek": 132448,
        "start": 1331.3600000000001,
        "temperature": 0,
        "text": " That's interesting. I was going to say then I could check to make sure it's not a star, star,",
        "tokens": [
          50708,
          663,
          311,
          1880,
          13,
          286,
          390,
          516,
          281,
          584,
          550,
          286,
          727,
          1520,
          281,
          652,
          988,
          309,
          311,
          406,
          257,
          3543,
          11,
          3543,
          11,
          50984
        ]
      },
      {
        "avg_logprob": -0.21170913696289062,
        "compression_ratio": 1.5251396648044693,
        "end": 1348.96,
        "id": 204,
        "no_speech_prob": 0.0062898797914385796,
        "seek": 132448,
        "start": 1336.88,
        "temperature": 0,
        "text": " star. And then I thought what I would need to do is say anomaly equals number anomaly.",
        "tokens": [
          50984,
          3543,
          13,
          400,
          550,
          286,
          1194,
          437,
          286,
          576,
          643,
          281,
          360,
          307,
          584,
          42737,
          6915,
          1230,
          42737,
          13,
          51588
        ]
      },
      {
        "avg_logprob": -0.2014470963251023,
        "compression_ratio": 1.6160337552742616,
        "end": 1355.6000000000001,
        "id": 205,
        "no_speech_prob": 0.07055743783712387,
        "seek": 134896,
        "start": 1348.96,
        "temperature": 0,
        "text": " But that doesn't seem to be necessary. So I'll just leave that commented out. Sometimes JavaScript",
        "tokens": [
          50364,
          583,
          300,
          1177,
          380,
          1643,
          281,
          312,
          4818,
          13,
          407,
          286,
          603,
          445,
          1856,
          300,
          26940,
          484,
          13,
          4803,
          15778,
          50696
        ]
      },
      {
        "avg_logprob": -0.2014470963251023,
        "compression_ratio": 1.6160337552742616,
        "end": 1360.4,
        "id": 206,
        "no_speech_prob": 0.07055743783712387,
        "seek": 134896,
        "start": 1355.6000000000001,
        "temperature": 0,
        "text": " is just such a friendly place to be. It's like, I don't know if it's a string, but you want to use",
        "tokens": [
          50696,
          307,
          445,
          1270,
          257,
          9208,
          1081,
          281,
          312,
          13,
          467,
          311,
          411,
          11,
          286,
          500,
          380,
          458,
          498,
          309,
          311,
          257,
          6798,
          11,
          457,
          291,
          528,
          281,
          764,
          50936
        ]
      },
      {
        "avg_logprob": -0.2014470963251023,
        "compression_ratio": 1.6160337552742616,
        "end": 1365.28,
        "id": 207,
        "no_speech_prob": 0.07055743783712387,
        "seek": 134896,
        "start": 1360.4,
        "temperature": 0,
        "text": " it as a number. I'll just figure out. I kind of get what you want and I'll make it work.",
        "tokens": [
          50936,
          309,
          382,
          257,
          1230,
          13,
          286,
          603,
          445,
          2573,
          484,
          13,
          286,
          733,
          295,
          483,
          437,
          291,
          528,
          293,
          286,
          603,
          652,
          309,
          589,
          13,
          51180
        ]
      },
      {
        "avg_logprob": -0.2014470963251023,
        "compression_ratio": 1.6160337552742616,
        "end": 1371.44,
        "id": 208,
        "no_speech_prob": 0.07055743783712387,
        "seek": 134896,
        "start": 1365.28,
        "temperature": 0,
        "text": " So look, I think we just drew the entire climate spiral there. A couple things. I think it would",
        "tokens": [
          51180,
          407,
          574,
          11,
          286,
          519,
          321,
          445,
          12804,
          264,
          2302,
          5659,
          25165,
          456,
          13,
          316,
          1916,
          721,
          13,
          286,
          519,
          309,
          576,
          51488
        ]
      },
      {
        "avg_logprob": -0.16834318412924712,
        "compression_ratio": 1.556,
        "end": 1379.52,
        "id": 209,
        "no_speech_prob": 0.5774210095405579,
        "seek": 137144,
        "start": 1371.44,
        "temperature": 0,
        "text": " make more sense to expand the range so we don't have a lot of values beyond one degree. So maybe",
        "tokens": [
          50364,
          652,
          544,
          2020,
          281,
          5268,
          264,
          3613,
          370,
          321,
          500,
          380,
          362,
          257,
          688,
          295,
          4190,
          4399,
          472,
          4314,
          13,
          407,
          1310,
          50768
        ]
      },
      {
        "avg_logprob": -0.16834318412924712,
        "compression_ratio": 1.556,
        "end": 1387.44,
        "id": 210,
        "no_speech_prob": 0.5774210095405579,
        "seek": 137144,
        "start": 1379.52,
        "temperature": 0,
        "text": " I should increase that radius. Now, weirdly, it didn't change. Did I hard code the numbers in the",
        "tokens": [
          50768,
          286,
          820,
          3488,
          300,
          15845,
          13,
          823,
          11,
          48931,
          11,
          309,
          994,
          380,
          1319,
          13,
          2589,
          286,
          1152,
          3089,
          264,
          3547,
          294,
          264,
          51164
        ]
      },
      {
        "avg_logprob": -0.16834318412924712,
        "compression_ratio": 1.556,
        "end": 1396.16,
        "id": 211,
        "no_speech_prob": 0.5774210095405579,
        "seek": 137144,
        "start": 1387.44,
        "temperature": 0,
        "text": " map function? I did. I did, didn't I? Okay. I like this a little bit better. It just gives me a little",
        "tokens": [
          51164,
          4471,
          2445,
          30,
          286,
          630,
          13,
          286,
          630,
          11,
          994,
          380,
          286,
          30,
          1033,
          13,
          286,
          411,
          341,
          257,
          707,
          857,
          1101,
          13,
          467,
          445,
          2709,
          385,
          257,
          707,
          51600
        ]
      },
      {
        "avg_logprob": -0.16834318412924712,
        "compression_ratio": 1.556,
        "end": 1401.1200000000001,
        "id": 212,
        "no_speech_prob": 0.5774210095405579,
        "seek": 137144,
        "start": 1396.16,
        "temperature": 0,
        "text": " bit more space to work with. I'm just checking again to see if you're paying attention. I'm",
        "tokens": [
          51600,
          857,
          544,
          1901,
          281,
          589,
          365,
          13,
          286,
          478,
          445,
          8568,
          797,
          281,
          536,
          498,
          291,
          434,
          6229,
          3202,
          13,
          286,
          478,
          51848
        ]
      },
      {
        "avg_logprob": -0.1945338130982454,
        "compression_ratio": 1.6105263157894736,
        "end": 1406.32,
        "id": 213,
        "no_speech_prob": 0.00013551986194215715,
        "seek": 140112,
        "start": 1401.12,
        "temperature": 0,
        "text": " pretty sure I misspelled anomaly. Yeah, I did. It's with an A.",
        "tokens": [
          50364,
          1238,
          988,
          286,
          1713,
          33000,
          42737,
          13,
          865,
          11,
          286,
          630,
          13,
          467,
          311,
          365,
          364,
          316,
          13,
          50624
        ]
      },
      {
        "avg_logprob": -0.1945338130982454,
        "compression_ratio": 1.6105263157894736,
        "end": 1414.4799999999998,
        "id": 214,
        "no_speech_prob": 0.00013551986194215715,
        "seek": 140112,
        "start": 1408.7199999999998,
        "temperature": 0,
        "text": " Oh, and I definitely don't want close anymore. Do I want to connect the end of the previous year to",
        "tokens": [
          50744,
          876,
          11,
          293,
          286,
          2138,
          500,
          380,
          528,
          1998,
          3602,
          13,
          1144,
          286,
          528,
          281,
          1745,
          264,
          917,
          295,
          264,
          3894,
          1064,
          281,
          51032
        ]
      },
      {
        "avg_logprob": -0.1945338130982454,
        "compression_ratio": 1.6105263157894736,
        "end": 1418,
        "id": 215,
        "no_speech_prob": 0.00013551986194215715,
        "seek": 140112,
        "start": 1414.4799999999998,
        "temperature": 0,
        "text": " the next one? I guess that makes sense. As long as I don't have close at the end. Why are there so",
        "tokens": [
          51032,
          264,
          958,
          472,
          30,
          286,
          2041,
          300,
          1669,
          2020,
          13,
          1018,
          938,
          382,
          286,
          500,
          380,
          362,
          1998,
          412,
          264,
          917,
          13,
          1545,
          366,
          456,
          370,
          51208
        ]
      },
      {
        "avg_logprob": -0.1945338130982454,
        "compression_ratio": 1.6105263157894736,
        "end": 1423.04,
        "id": 216,
        "no_speech_prob": 0.00013551986194215715,
        "seek": 140112,
        "start": 1418,
        "temperature": 0,
        "text": " many lines going across the center though? That's a little bit weird. Should I work on animating at",
        "tokens": [
          51208,
          867,
          3876,
          516,
          2108,
          264,
          3056,
          1673,
          30,
          663,
          311,
          257,
          707,
          857,
          3657,
          13,
          6454,
          286,
          589,
          322,
          2383,
          990,
          412,
          51460
        ]
      },
      {
        "avg_logprob": -0.1945338130982454,
        "compression_ratio": 1.6105263157894736,
        "end": 1427.36,
        "id": 217,
        "no_speech_prob": 0.00013551986194215715,
        "seek": 140112,
        "start": 1423.04,
        "temperature": 0,
        "text": " first or adding color? Maybe I should animate this first because that's going to help us see that",
        "tokens": [
          51460,
          700,
          420,
          5127,
          2017,
          30,
          2704,
          286,
          820,
          36439,
          341,
          700,
          570,
          300,
          311,
          516,
          281,
          854,
          505,
          536,
          300,
          51676
        ]
      },
      {
        "avg_logprob": -0.18905575440661743,
        "compression_ratio": 1.6519823788546255,
        "end": 1433.04,
        "id": 218,
        "no_speech_prob": 0.028869984671473503,
        "seek": 142736,
        "start": 1427.36,
        "temperature": 0,
        "text": " this is working and it's doing what I want it to do. So right now, the code has two for loops,",
        "tokens": [
          50364,
          341,
          307,
          1364,
          293,
          309,
          311,
          884,
          437,
          286,
          528,
          309,
          281,
          360,
          13,
          407,
          558,
          586,
          11,
          264,
          3089,
          575,
          732,
          337,
          16121,
          11,
          50648
        ]
      },
      {
        "avg_logprob": -0.18905575440661743,
        "compression_ratio": 1.6519823788546255,
        "end": 1438.9599999999998,
        "id": 219,
        "no_speech_prob": 0.028869984671473503,
        "seek": 142736,
        "start": 1433.76,
        "temperature": 0,
        "text": " one loop to go through every single row and one loop to go through every single month.",
        "tokens": [
          50684,
          472,
          6367,
          281,
          352,
          807,
          633,
          2167,
          5386,
          293,
          472,
          6367,
          281,
          352,
          807,
          633,
          2167,
          1618,
          13,
          50944
        ]
      },
      {
        "avg_logprob": -0.18905575440661743,
        "compression_ratio": 1.6519823788546255,
        "end": 1446.3999999999999,
        "id": 220,
        "no_speech_prob": 0.028869984671473503,
        "seek": 142736,
        "start": 1439.52,
        "temperature": 0,
        "text": " Let's start by doing the years one at a time. So I think a better name for this variable would be",
        "tokens": [
          50972,
          961,
          311,
          722,
          538,
          884,
          264,
          924,
          472,
          412,
          257,
          565,
          13,
          407,
          286,
          519,
          257,
          1101,
          1315,
          337,
          341,
          7006,
          576,
          312,
          51316
        ]
      },
      {
        "avg_logprob": -0.18905575440661743,
        "compression_ratio": 1.6519823788546255,
        "end": 1454.32,
        "id": 221,
        "no_speech_prob": 0.028869984671473503,
        "seek": 142736,
        "start": 1446.3999999999999,
        "temperature": 0,
        "text": " current row. Then we get rid of this outer loop. In fact, I'm just going to delete it. And then",
        "tokens": [
          51316,
          2190,
          5386,
          13,
          1396,
          321,
          483,
          3973,
          295,
          341,
          10847,
          6367,
          13,
          682,
          1186,
          11,
          286,
          478,
          445,
          516,
          281,
          12097,
          309,
          13,
          400,
          550,
          51712
        ]
      },
      {
        "avg_logprob": -0.16647711339986548,
        "compression_ratio": 1.6008583690987124,
        "end": 1464.3999999999999,
        "id": 222,
        "no_speech_prob": 0.0028895721770823,
        "seek": 145432,
        "start": 1454.32,
        "temperature": 0,
        "text": " the row is the current row. So that's that first row, 1880. I can get rid of no loop,",
        "tokens": [
          50364,
          264,
          5386,
          307,
          264,
          2190,
          5386,
          13,
          407,
          300,
          311,
          300,
          700,
          5386,
          11,
          2443,
          4702,
          13,
          286,
          393,
          483,
          3973,
          295,
          572,
          6367,
          11,
          50868
        ]
      },
      {
        "avg_logprob": -0.16647711339986548,
        "compression_ratio": 1.6008583690987124,
        "end": 1474.24,
        "id": 223,
        "no_speech_prob": 0.0028895721770823,
        "seek": 145432,
        "start": 1464.3999999999999,
        "temperature": 0,
        "text": " and I can start to increase the row. Ah, okay. So I'm seeing each year one at a time. Eventually,",
        "tokens": [
          50868,
          293,
          286,
          393,
          722,
          281,
          3488,
          264,
          5386,
          13,
          2438,
          11,
          1392,
          13,
          407,
          286,
          478,
          2577,
          1184,
          1064,
          472,
          412,
          257,
          565,
          13,
          17586,
          11,
          51360
        ]
      },
      {
        "avg_logprob": -0.16647711339986548,
        "compression_ratio": 1.6008583690987124,
        "end": 1478.8,
        "id": 224,
        "no_speech_prob": 0.0028895721770823,
        "seek": 145432,
        "start": 1474.24,
        "temperature": 0,
        "text": " I get to the end and it's an error. And I just realized that I'm not seeing the previous one.",
        "tokens": [
          51360,
          286,
          483,
          281,
          264,
          917,
          293,
          309,
          311,
          364,
          6713,
          13,
          400,
          286,
          445,
          5334,
          300,
          286,
          478,
          406,
          2577,
          264,
          3894,
          472,
          13,
          51588
        ]
      },
      {
        "avg_logprob": -0.16647711339986548,
        "compression_ratio": 1.6008583690987124,
        "end": 1484,
        "id": 225,
        "no_speech_prob": 0.0028895721770823,
        "seek": 145432,
        "start": 1479.36,
        "temperature": 0,
        "text": " So maybe what I should actually do, well, there's so many different ways I could approach this.",
        "tokens": [
          51616,
          407,
          1310,
          437,
          286,
          820,
          767,
          360,
          11,
          731,
          11,
          456,
          311,
          370,
          867,
          819,
          2098,
          286,
          727,
          3109,
          341,
          13,
          51848
        ]
      },
      {
        "avg_logprob": -0.20599844058354697,
        "compression_ratio": 1.6051502145922747,
        "end": 1490.64,
        "id": 226,
        "no_speech_prob": 0.00020027285791002214,
        "seek": 148400,
        "start": 1484.24,
        "temperature": 0,
        "text": " I could just draw the base background and then let the different years build up. But because",
        "tokens": [
          50376,
          286,
          727,
          445,
          2642,
          264,
          3096,
          3678,
          293,
          550,
          718,
          264,
          819,
          924,
          1322,
          493,
          13,
          583,
          570,
          50696
        ]
      },
      {
        "avg_logprob": -0.20599844058354697,
        "compression_ratio": 1.6051502145922747,
        "end": 1495.68,
        "id": 227,
        "no_speech_prob": 0.00020027285791002214,
        "seek": 148400,
        "start": 1490.64,
        "temperature": 0,
        "text": " it's not a lot to draw, just give me full flexibility. I do want to put that loop back in.",
        "tokens": [
          50696,
          309,
          311,
          406,
          257,
          688,
          281,
          2642,
          11,
          445,
          976,
          385,
          1577,
          12635,
          13,
          286,
          360,
          528,
          281,
          829,
          300,
          6367,
          646,
          294,
          13,
          50948
        ]
      },
      {
        "avg_logprob": -0.20599844058354697,
        "compression_ratio": 1.6051502145922747,
        "end": 1506.08,
        "id": 228,
        "no_speech_prob": 0.00020027285791002214,
        "seek": 148400,
        "start": 1499.92,
        "temperature": 0,
        "text": " So the row I want to get is J, but I only want to iterate from zero all the way up to that current",
        "tokens": [
          51160,
          407,
          264,
          5386,
          286,
          528,
          281,
          483,
          307,
          508,
          11,
          457,
          286,
          787,
          528,
          281,
          44497,
          490,
          4018,
          439,
          264,
          636,
          493,
          281,
          300,
          2190,
          51468
        ]
      },
      {
        "avg_logprob": -0.20599844058354697,
        "compression_ratio": 1.6051502145922747,
        "end": 1513.52,
        "id": 229,
        "no_speech_prob": 0.00020027285791002214,
        "seek": 148400,
        "start": 1506.08,
        "temperature": 0,
        "text": " row. So we can see them layering very quickly because I'm doing remember the whole year all",
        "tokens": [
          51468,
          5386,
          13,
          407,
          321,
          393,
          536,
          552,
          40754,
          588,
          2661,
          570,
          286,
          478,
          884,
          1604,
          264,
          1379,
          1064,
          439,
          51840
        ]
      },
      {
        "avg_logprob": -0.18561452474349585,
        "compression_ratio": 1.5423728813559323,
        "end": 1520.56,
        "id": 230,
        "no_speech_prob": 0.0005527766770683229,
        "seek": 151352,
        "start": 1513.52,
        "temperature": 0,
        "text": " at once. Let's see if we can do one month at a time. So now I need a current month.",
        "tokens": [
          50364,
          412,
          1564,
          13,
          961,
          311,
          536,
          498,
          321,
          393,
          360,
          472,
          1618,
          412,
          257,
          565,
          13,
          407,
          586,
          286,
          643,
          257,
          2190,
          1618,
          13,
          50716
        ]
      },
      {
        "avg_logprob": -0.18561452474349585,
        "compression_ratio": 1.5423728813559323,
        "end": 1529.44,
        "id": 231,
        "no_speech_prob": 0.0005527766770683229,
        "seek": 151352,
        "start": 1522.16,
        "temperature": 0,
        "text": " And this loop should be just all the way up to the current month. So first, let me fix it so that",
        "tokens": [
          50796,
          400,
          341,
          6367,
          820,
          312,
          445,
          439,
          264,
          636,
          493,
          281,
          264,
          2190,
          1618,
          13,
          407,
          700,
          11,
          718,
          385,
          3191,
          309,
          370,
          300,
          51160
        ]
      },
      {
        "avg_logprob": -0.18561452474349585,
        "compression_ratio": 1.5423728813559323,
        "end": 1536.6399999999999,
        "id": 232,
        "no_speech_prob": 0.0005527766770683229,
        "seek": 151352,
        "start": 1529.44,
        "temperature": 0,
        "text": " when it gets to the end, it doesn't just crash. Current row equals current row plus one. If",
        "tokens": [
          51160,
          562,
          309,
          2170,
          281,
          264,
          917,
          11,
          309,
          1177,
          380,
          445,
          8252,
          13,
          15629,
          5386,
          6915,
          2190,
          5386,
          1804,
          472,
          13,
          759,
          51520
        ]
      },
      {
        "avg_logprob": -0.2178225108555385,
        "compression_ratio": 1.564102564102564,
        "end": 1545.6000000000001,
        "id": 233,
        "no_speech_prob": 0.031143110245466232,
        "seek": 153664,
        "start": 1536.64,
        "temperature": 0,
        "text": " current row equals data.getRowCount, then no loop. That'll stop it.",
        "tokens": [
          50364,
          2190,
          5386,
          6915,
          1412,
          13,
          847,
          49,
          305,
          34,
          792,
          11,
          550,
          572,
          6367,
          13,
          663,
          603,
          1590,
          309,
          13,
          50812
        ]
      },
      {
        "avg_logprob": -0.2178225108555385,
        "compression_ratio": 1.564102564102564,
        "end": 1554.8000000000002,
        "id": 234,
        "no_speech_prob": 0.031143110245466232,
        "seek": 153664,
        "start": 1548.0800000000002,
        "temperature": 0,
        "text": " Great. That worked. What happened to the months? Oh, I put current month there. That's the wrong",
        "tokens": [
          50936,
          3769,
          13,
          663,
          2732,
          13,
          708,
          2011,
          281,
          264,
          2493,
          30,
          876,
          11,
          286,
          829,
          2190,
          1618,
          456,
          13,
          663,
          311,
          264,
          2085,
          51272
        ]
      },
      {
        "avg_logprob": -0.2178225108555385,
        "compression_ratio": 1.564102564102564,
        "end": 1559.2,
        "id": 235,
        "no_speech_prob": 0.031143110245466232,
        "seek": 153664,
        "start": 1554.8000000000002,
        "temperature": 0,
        "text": " place. I put current month in drawing the months. I want to see all the months.",
        "tokens": [
          51272,
          1081,
          13,
          286,
          829,
          2190,
          1618,
          294,
          6316,
          264,
          2493,
          13,
          286,
          528,
          281,
          536,
          439,
          264,
          2493,
          13,
          51492
        ]
      },
      {
        "avg_logprob": -0.1936601970506751,
        "compression_ratio": 1.55625,
        "end": 1566.88,
        "id": 236,
        "no_speech_prob": 0.013848475180566311,
        "seek": 155920,
        "start": 1560.0800000000002,
        "temperature": 0,
        "text": " No wonder that didn't work. I want to do current months here. So every frame,",
        "tokens": [
          50408,
          883,
          2441,
          300,
          994,
          380,
          589,
          13,
          286,
          528,
          281,
          360,
          2190,
          2493,
          510,
          13,
          407,
          633,
          3920,
          11,
          50748
        ]
      },
      {
        "avg_logprob": -0.1936601970506751,
        "compression_ratio": 1.55625,
        "end": 1578.96,
        "id": 237,
        "no_speech_prob": 0.013848475180566311,
        "seek": 155920,
        "start": 1568.0800000000002,
        "temperature": 0,
        "text": " current month should go up by one. If current month gets to the end, that's when the row",
        "tokens": [
          50808,
          2190,
          1618,
          820,
          352,
          493,
          538,
          472,
          13,
          759,
          2190,
          1618,
          2170,
          281,
          264,
          917,
          11,
          300,
          311,
          562,
          264,
          5386,
          51352
        ]
      },
      {
        "avg_logprob": -0.1936601970506751,
        "compression_ratio": 1.55625,
        "end": 1584.0800000000002,
        "id": 238,
        "no_speech_prob": 0.013848475180566311,
        "seek": 155920,
        "start": 1578.96,
        "temperature": 0,
        "text": " increases. Count up all the months. Oh, and then the month has to go back to zero.",
        "tokens": [
          51352,
          8637,
          13,
          5247,
          493,
          439,
          264,
          2493,
          13,
          876,
          11,
          293,
          550,
          264,
          1618,
          575,
          281,
          352,
          646,
          281,
          4018,
          13,
          51608
        ]
      },
      {
        "avg_logprob": -0.27788476382984834,
        "compression_ratio": 1.6706586826347305,
        "end": 1589.52,
        "id": 239,
        "no_speech_prob": 0.012821055948734283,
        "seek": 158408,
        "start": 1585.04,
        "temperature": 0,
        "text": " Well, it's like a little weird radar thing. Clearly I have my begin shape and end shape",
        "tokens": [
          50412,
          1042,
          11,
          309,
          311,
          411,
          257,
          707,
          3657,
          16544,
          551,
          13,
          24120,
          286,
          362,
          452,
          1841,
          3909,
          293,
          917,
          3909,
          50636
        ]
      },
      {
        "avg_logprob": -0.27788476382984834,
        "compression_ratio": 1.6706586826347305,
        "end": 1596.32,
        "id": 240,
        "no_speech_prob": 0.012821055948734283,
        "seek": 158408,
        "start": 1589.52,
        "temperature": 0,
        "text": " in the wrong place. Let me slow down the frame rate. Oh, no, no, no, no, no, no, no, no, no, no,",
        "tokens": [
          50636,
          294,
          264,
          2085,
          1081,
          13,
          961,
          385,
          2964,
          760,
          264,
          3920,
          3314,
          13,
          876,
          11,
          572,
          11,
          572,
          11,
          572,
          11,
          572,
          11,
          572,
          11,
          572,
          11,
          572,
          11,
          572,
          11,
          572,
          11,
          572,
          11,
          50976
        ]
      },
      {
        "avg_logprob": -0.27788476382984834,
        "compression_ratio": 1.6706586826347305,
        "end": 1604.8,
        "id": 241,
        "no_speech_prob": 0.012821055948734283,
        "seek": 158408,
        "start": 1596.32,
        "temperature": 0,
        "text": " no. Okay. The current month is only the current month for the current year. So basically, if j",
        "tokens": [
          50976,
          572,
          13,
          1033,
          13,
          440,
          2190,
          1618,
          307,
          787,
          264,
          2190,
          1618,
          337,
          264,
          2190,
          1064,
          13,
          407,
          1936,
          11,
          498,
          361,
          51400
        ]
      },
      {
        "avg_logprob": -0.22350133698562097,
        "compression_ratio": 1.7263157894736842,
        "end": 1613.04,
        "id": 242,
        "no_speech_prob": 0.02635488659143448,
        "seek": 160480,
        "start": 1605.6,
        "temperature": 0,
        "text": " is less than current row minus one, then let total months, well, I could just say total",
        "tokens": [
          50404,
          307,
          1570,
          813,
          2190,
          5386,
          3175,
          472,
          11,
          550,
          718,
          3217,
          2493,
          11,
          731,
          11,
          286,
          727,
          445,
          584,
          3217,
          50776
        ]
      },
      {
        "avg_logprob": -0.22350133698562097,
        "compression_ratio": 1.7263157894736842,
        "end": 1620.56,
        "id": 243,
        "no_speech_prob": 0.02635488659143448,
        "seek": 160480,
        "start": 1613.04,
        "temperature": 0,
        "text": " months is always the length of the array. But if j is the last one, current row minus one,",
        "tokens": [
          50776,
          2493,
          307,
          1009,
          264,
          4641,
          295,
          264,
          10225,
          13,
          583,
          498,
          361,
          307,
          264,
          1036,
          472,
          11,
          2190,
          5386,
          3175,
          472,
          11,
          51152
        ]
      },
      {
        "avg_logprob": -0.22350133698562097,
        "compression_ratio": 1.7263157894736842,
        "end": 1626.08,
        "id": 244,
        "no_speech_prob": 0.02635488659143448,
        "seek": 160480,
        "start": 1620.56,
        "temperature": 0,
        "text": " total months equals the current month. And then I'm iterating to the total months.",
        "tokens": [
          51152,
          3217,
          2493,
          6915,
          264,
          2190,
          1618,
          13,
          400,
          550,
          286,
          478,
          17138,
          990,
          281,
          264,
          3217,
          2493,
          13,
          51428
        ]
      },
      {
        "avg_logprob": -0.22350133698562097,
        "compression_ratio": 1.7263157894736842,
        "end": 1630.1599999999999,
        "id": 245,
        "no_speech_prob": 0.02635488659143448,
        "seek": 160480,
        "start": 1627.2,
        "temperature": 0,
        "text": " That's probably a better way to do this. Let's try that again now.",
        "tokens": [
          51484,
          663,
          311,
          1391,
          257,
          1101,
          636,
          281,
          360,
          341,
          13,
          961,
          311,
          853,
          300,
          797,
          586,
          13,
          51632
        ]
      },
      {
        "avg_logprob": -0.2217132972948479,
        "compression_ratio": 1.4634146341463414,
        "end": 1639.44,
        "id": 246,
        "no_speech_prob": 0.0019570067524909973,
        "seek": 163016,
        "start": 1630.16,
        "temperature": 0,
        "text": " There we go. That's what I wanted to see. Okay. I think things are good now.",
        "tokens": [
          50364,
          821,
          321,
          352,
          13,
          663,
          311,
          437,
          286,
          1415,
          281,
          536,
          13,
          1033,
          13,
          286,
          519,
          721,
          366,
          665,
          586,
          13,
          50828
        ]
      },
      {
        "avg_logprob": -0.2217132972948479,
        "compression_ratio": 1.4634146341463414,
        "end": 1644.5600000000002,
        "id": 247,
        "no_speech_prob": 0.0019570067524909973,
        "seek": 163016,
        "start": 1640.24,
        "temperature": 0,
        "text": " I would like to move the zero further out to leave more space in the middle",
        "tokens": [
          50868,
          286,
          576,
          411,
          281,
          1286,
          264,
          4018,
          3052,
          484,
          281,
          1856,
          544,
          1901,
          294,
          264,
          2808,
          51084
        ]
      },
      {
        "avg_logprob": -0.2217132972948479,
        "compression_ratio": 1.4634146341463414,
        "end": 1648.16,
        "id": 248,
        "no_speech_prob": 0.0019570067524909973,
        "seek": 163016,
        "start": 1644.5600000000002,
        "temperature": 0,
        "text": " because the negative numbers are getting very, very close.",
        "tokens": [
          51084,
          570,
          264,
          3671,
          3547,
          366,
          1242,
          588,
          11,
          588,
          1998,
          13,
          51264
        ]
      },
      {
        "avg_logprob": -0.2217132972948479,
        "compression_ratio": 1.4634146341463414,
        "end": 1652.88,
        "id": 249,
        "no_speech_prob": 0.0019570067524909973,
        "seek": 163016,
        "start": 1651.44,
        "temperature": 0,
        "text": " I can up the frame rate now.",
        "tokens": [
          51428,
          286,
          393,
          493,
          264,
          3920,
          3314,
          586,
          13,
          51500
        ]
      },
      {
        "avg_logprob": -0.34128076257840007,
        "compression_ratio": 1.5689655172413792,
        "end": 1658.64,
        "id": 250,
        "no_speech_prob": 0.01615249179303646,
        "seek": 165288,
        "start": 1653.2800000000002,
        "temperature": 0,
        "text": " I'm going to move zero even further out. I'm also going to make the text alignment",
        "tokens": [
          50384,
          286,
          478,
          516,
          281,
          1286,
          4018,
          754,
          3052,
          484,
          13,
          286,
          478,
          611,
          516,
          281,
          652,
          264,
          2487,
          18515,
          50652
        ]
      },
      {
        "avg_logprob": -0.34128076257840007,
        "compression_ratio": 1.5689655172413792,
        "end": 1663.0400000000002,
        "id": 251,
        "no_speech_prob": 0.01615249179303646,
        "seek": 165288,
        "start": 1658.64,
        "temperature": 0,
        "text": " uniform for everything and just put text align center at the beginning of draw.",
        "tokens": [
          50652,
          9452,
          337,
          1203,
          293,
          445,
          829,
          2487,
          7975,
          3056,
          412,
          264,
          2863,
          295,
          2642,
          13,
          50872
        ]
      },
      {
        "avg_logprob": -0.34128076257840007,
        "compression_ratio": 1.5689655172413792,
        "end": 1668.64,
        "id": 252,
        "no_speech_prob": 0.01615249179303646,
        "seek": 165288,
        "start": 1664.0800000000002,
        "temperature": 0,
        "text": " All right. I want to put what year we're currently on in the center.",
        "tokens": [
          50924,
          1057,
          558,
          13,
          286,
          528,
          281,
          829,
          437,
          1064,
          321,
          434,
          4362,
          322,
          294,
          264,
          3056,
          13,
          51152
        ]
      },
      {
        "avg_logprob": -0.34128076257840007,
        "compression_ratio": 1.5689655172413792,
        "end": 1674.3200000000002,
        "id": 253,
        "no_speech_prob": 0.01615249179303646,
        "seek": 165288,
        "start": 1672.5600000000002,
        "temperature": 0,
        "text": " Let's make that year a little bit bigger.",
        "tokens": [
          51348,
          961,
          311,
          652,
          300,
          1064,
          257,
          707,
          857,
          3801,
          13,
          51436
        ]
      },
      {
        "avg_logprob": -0.4893100939298931,
        "compression_ratio": 1.5990990990990992,
        "end": 1680.3999999999999,
        "id": 254,
        "no_speech_prob": 0.025564631447196007,
        "seek": 167432,
        "start": 1675.28,
        "temperature": 0,
        "text": " Oh, no. There's another big mistake here, which is that the values are starting from the bottom",
        "tokens": [
          50412,
          876,
          11,
          572,
          13,
          821,
          311,
          1071,
          955,
          6146,
          510,
          11,
          597,
          307,
          300,
          264,
          4190,
          366,
          2891,
          490,
          264,
          2767,
          50668
        ]
      },
      {
        "avg_logprob": -0.4893100939298931,
        "compression_ratio": 1.5990990990990992,
        "end": 1689.36,
        "id": 255,
        "no_speech_prob": 0.025564631447196007,
        "seek": 167432,
        "start": 1680.3999999999999,
        "temperature": 0,
        "text": " because my angle is offset by pi over two. So it should start at the top. Only it really starts at",
        "tokens": [
          50668,
          570,
          452,
          5802,
          307,
          18687,
          538,
          3895,
          670,
          732,
          13,
          407,
          309,
          820,
          722,
          412,
          264,
          1192,
          13,
          5686,
          309,
          534,
          3719,
          412,
          51116
        ]
      },
      {
        "avg_logprob": -0.4893100939298931,
        "compression_ratio": 1.5990990990990992,
        "end": 1696.72,
        "id": 256,
        "no_speech_prob": 0.025564631447196007,
        "seek": 167432,
        "start": 1689.36,
        "temperature": 0,
        "text": " January. The first data point is January. So it's minus pi divided by two plus pi divided by three.",
        "tokens": [
          51116,
          7061,
          13,
          440,
          700,
          1412,
          935,
          307,
          7061,
          13,
          407,
          309,
          311,
          3175,
          3895,
          6666,
          538,
          732,
          1804,
          3895,
          6666,
          538,
          1045,
          13,
          51484
        ]
      },
      {
        "avg_logprob": -0.4893100939298931,
        "compression_ratio": 1.5990990990990992,
        "end": 1701.6,
        "id": 257,
        "no_speech_prob": 0.025564631447196007,
        "seek": 167432,
        "start": 1697.52,
        "temperature": 0,
        "text": " Oh, dear. I'm going to have to do a little bit of math here.",
        "tokens": [
          51524,
          876,
          11,
          6875,
          13,
          286,
          478,
          516,
          281,
          362,
          281,
          360,
          257,
          707,
          857,
          295,
          5221,
          510,
          13,
          51728
        ]
      },
      {
        "avg_logprob": -0.2065955570765904,
        "compression_ratio": 1.5517241379310345,
        "end": 1709.6,
        "id": 258,
        "no_speech_prob": 0.0316181555390358,
        "seek": 170160,
        "start": 1701.76,
        "temperature": 0,
        "text": " Pi divided by three. Oh, dear. Minus pi divided by three. Yeah, that's right.",
        "tokens": [
          50372,
          17741,
          6666,
          538,
          1045,
          13,
          876,
          11,
          6875,
          13,
          2829,
          301,
          3895,
          6666,
          538,
          1045,
          13,
          865,
          11,
          300,
          311,
          558,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.2065955570765904,
        "compression_ratio": 1.5517241379310345,
        "end": 1715.12,
        "id": 259,
        "no_speech_prob": 0.0316181555390358,
        "seek": 170160,
        "start": 1709.6,
        "temperature": 0,
        "text": " Okay. So I did this in a terrible way. And I'll leave that as an exercise to the viewer to",
        "tokens": [
          50764,
          1033,
          13,
          407,
          286,
          630,
          341,
          294,
          257,
          6237,
          636,
          13,
          400,
          286,
          603,
          1856,
          300,
          382,
          364,
          5380,
          281,
          264,
          16767,
          281,
          51040
        ]
      },
      {
        "avg_logprob": -0.2065955570765904,
        "compression_ratio": 1.5517241379310345,
        "end": 1721.04,
        "id": 260,
        "no_speech_prob": 0.0316181555390358,
        "seek": 170160,
        "start": 1715.12,
        "temperature": 0,
        "text": " refactor this, if you will, to be a little bit more consistent about how I'm drawing and reading",
        "tokens": [
          51040,
          1895,
          15104,
          341,
          11,
          498,
          291,
          486,
          11,
          281,
          312,
          257,
          707,
          857,
          544,
          8398,
          466,
          577,
          286,
          478,
          6316,
          293,
          3760,
          51336
        ]
      },
      {
        "avg_logprob": -0.2065955570765904,
        "compression_ratio": 1.5517241379310345,
        "end": 1727.28,
        "id": 261,
        "no_speech_prob": 0.0316181555390358,
        "seek": 170160,
        "start": 1721.04,
        "temperature": 0,
        "text": " the data. But I do have everything I believe aligned correctly right now. And I can add color.",
        "tokens": [
          51336,
          264,
          1412,
          13,
          583,
          286,
          360,
          362,
          1203,
          286,
          1697,
          17962,
          8944,
          558,
          586,
          13,
          400,
          286,
          393,
          909,
          2017,
          13,
          51648
        ]
      },
      {
        "avg_logprob": -0.1981034819612798,
        "compression_ratio": 1.623931623931624,
        "end": 1732.72,
        "id": 262,
        "no_speech_prob": 0.012624820694327354,
        "seek": 172728,
        "start": 1727.84,
        "temperature": 0,
        "text": " So I want to do something similar. In the same way I'm mapping the distance from the center",
        "tokens": [
          50392,
          407,
          286,
          528,
          281,
          360,
          746,
          2531,
          13,
          682,
          264,
          912,
          636,
          286,
          478,
          18350,
          264,
          4560,
          490,
          264,
          3056,
          50636
        ]
      },
      {
        "avg_logprob": -0.1981034819612798,
        "compression_ratio": 1.623931623931624,
        "end": 1738.96,
        "id": 263,
        "no_speech_prob": 0.012624820694327354,
        "seek": 172728,
        "start": 1732.72,
        "temperature": 0,
        "text": " to that anomaly value, I want to map color. Maybe zero degrees is white and anything less than that",
        "tokens": [
          50636,
          281,
          300,
          42737,
          2158,
          11,
          286,
          528,
          281,
          4471,
          2017,
          13,
          2704,
          4018,
          5310,
          307,
          2418,
          293,
          1340,
          1570,
          813,
          300,
          50948
        ]
      },
      {
        "avg_logprob": -0.1981034819612798,
        "compression_ratio": 1.623931623931624,
        "end": 1746.08,
        "id": 264,
        "no_speech_prob": 0.012624820694327354,
        "seek": 172728,
        "start": 1738.96,
        "temperature": 0,
        "text": " is a blue tone and greater than that is a red tone. Will lerp color work for me? Oh, but the",
        "tokens": [
          50948,
          307,
          257,
          3344,
          8027,
          293,
          5044,
          813,
          300,
          307,
          257,
          2182,
          8027,
          13,
          3099,
          32068,
          79,
          2017,
          589,
          337,
          385,
          30,
          876,
          11,
          457,
          264,
          51304
        ]
      },
      {
        "avg_logprob": -0.1981034819612798,
        "compression_ratio": 1.623931623931624,
        "end": 1752.32,
        "id": 265,
        "no_speech_prob": 0.012624820694327354,
        "seek": 172728,
        "start": 1746.08,
        "temperature": 0,
        "text": " line segments. Hmm. So this is tricky. I think I have to draw these as individual line segments",
        "tokens": [
          51304,
          1622,
          19904,
          13,
          8239,
          13,
          407,
          341,
          307,
          12414,
          13,
          286,
          519,
          286,
          362,
          281,
          2642,
          613,
          382,
          2609,
          1622,
          19904,
          51616
        ]
      },
      {
        "avg_logprob": -0.17386162037752112,
        "compression_ratio": 1.68,
        "end": 1757.6799999999998,
        "id": 266,
        "no_speech_prob": 0.13660115003585815,
        "seek": 175232,
        "start": 1752.32,
        "temperature": 0,
        "text": " now to change their color. I think I have to manually connect these. I'm going to slow down",
        "tokens": [
          50364,
          586,
          281,
          1319,
          641,
          2017,
          13,
          286,
          519,
          286,
          362,
          281,
          16945,
          1745,
          613,
          13,
          286,
          478,
          516,
          281,
          2964,
          760,
          50632
        ]
      },
      {
        "avg_logprob": -0.17386162037752112,
        "compression_ratio": 1.68,
        "end": 1764.3999999999999,
        "id": 267,
        "no_speech_prob": 0.13660115003585815,
        "seek": 175232,
        "start": 1757.6799999999998,
        "temperature": 0,
        "text": " the frame rate here. So I just noticed that with a frame rate of one, I have to wait for like a",
        "tokens": [
          50632,
          264,
          3920,
          3314,
          510,
          13,
          407,
          286,
          445,
          5694,
          300,
          365,
          257,
          3920,
          3314,
          295,
          472,
          11,
          286,
          362,
          281,
          1699,
          337,
          411,
          257,
          50968
        ]
      },
      {
        "avg_logprob": -0.17386162037752112,
        "compression_ratio": 1.68,
        "end": 1771.12,
        "id": 268,
        "no_speech_prob": 0.13660115003585815,
        "seek": 175232,
        "start": 1764.3999999999999,
        "temperature": 0,
        "text": " whole empty year because my current row is zero, which isn't actually the current row. It's the",
        "tokens": [
          50968,
          1379,
          6707,
          1064,
          570,
          452,
          2190,
          5386,
          307,
          4018,
          11,
          597,
          1943,
          380,
          767,
          264,
          2190,
          5386,
          13,
          467,
          311,
          264,
          51304
        ]
      },
      {
        "avg_logprob": -0.17386162037752112,
        "compression_ratio": 1.68,
        "end": 1776.8,
        "id": 269,
        "no_speech_prob": 0.13660115003585815,
        "seek": 175232,
        "start": 1771.12,
        "temperature": 0,
        "text": " current row cutoff, which should really be one to start. And I guess I could do the same thing",
        "tokens": [
          51304,
          2190,
          5386,
          1723,
          4506,
          11,
          597,
          820,
          534,
          312,
          472,
          281,
          722,
          13,
          400,
          286,
          2041,
          286,
          727,
          360,
          264,
          912,
          551,
          51588
        ]
      },
      {
        "avg_logprob": -0.19337672918615206,
        "compression_ratio": 1.5847953216374269,
        "end": 1782.72,
        "id": 270,
        "no_speech_prob": 0.02635490521788597,
        "seek": 177680,
        "start": 1776.8,
        "temperature": 0,
        "text": " with month. So for me to draw color, I need to draw each one of those lines individually.",
        "tokens": [
          50364,
          365,
          1618,
          13,
          407,
          337,
          385,
          281,
          2642,
          2017,
          11,
          286,
          643,
          281,
          2642,
          1184,
          472,
          295,
          729,
          3876,
          16652,
          13,
          50660
        ]
      },
      {
        "avg_logprob": -0.19337672918615206,
        "compression_ratio": 1.5847953216374269,
        "end": 1792.08,
        "id": 271,
        "no_speech_prob": 0.02635490521788597,
        "seek": 177680,
        "start": 1782.72,
        "temperature": 0,
        "text": " So I can no longer use begin shape and end shape. Instead, I need to have the previous anomaly.",
        "tokens": [
          50660,
          407,
          286,
          393,
          572,
          2854,
          764,
          1841,
          3909,
          293,
          917,
          3909,
          13,
          7156,
          11,
          286,
          643,
          281,
          362,
          264,
          3894,
          42737,
          13,
          51128
        ]
      },
      {
        "avg_logprob": -0.19337672918615206,
        "compression_ratio": 1.5847953216374269,
        "end": 1802.8,
        "id": 272,
        "no_speech_prob": 0.02635490521788597,
        "seek": 177680,
        "start": 1792.08,
        "temperature": 0,
        "text": " So let me make a variable, call it previous anomaly. R is the current anomaly. And PR",
        "tokens": [
          51128,
          407,
          718,
          385,
          652,
          257,
          7006,
          11,
          818,
          309,
          3894,
          42737,
          13,
          497,
          307,
          264,
          2190,
          42737,
          13,
          400,
          11568,
          51664
        ]
      },
      {
        "avg_logprob": -0.2476487230898729,
        "compression_ratio": 1.3875,
        "end": 1811.28,
        "id": 273,
        "no_speech_prob": 0.001116010476835072,
        "seek": 180280,
        "start": 1803.76,
        "temperature": 0,
        "text": " is mapping the previous anomaly. Then I need X1, Y1, and X2, Y2.",
        "tokens": [
          50412,
          307,
          18350,
          264,
          3894,
          42737,
          13,
          1396,
          286,
          643,
          1783,
          16,
          11,
          398,
          16,
          11,
          293,
          1783,
          17,
          11,
          398,
          17,
          13,
          50788
        ]
      },
      {
        "avg_logprob": -0.2476487230898729,
        "compression_ratio": 1.3875,
        "end": 1823.68,
        "id": 274,
        "no_speech_prob": 0.001116010476835072,
        "seek": 180280,
        "start": 1816.3999999999999,
        "temperature": 0,
        "text": " Draw a line between both of them. This is interesting. What do I have here? Oh,",
        "tokens": [
          51044,
          20386,
          257,
          1622,
          1296,
          1293,
          295,
          552,
          13,
          639,
          307,
          1880,
          13,
          708,
          360,
          286,
          362,
          510,
          30,
          876,
          11,
          51408
        ]
      },
      {
        "avg_logprob": -0.2476487230898729,
        "compression_ratio": 1.3875,
        "end": 1828.08,
        "id": 275,
        "no_speech_prob": 0.001116010476835072,
        "seek": 180280,
        "start": 1823.68,
        "temperature": 0,
        "text": " because previous anomaly is always zero. So as soon as I get the new anomaly,",
        "tokens": [
          51408,
          570,
          3894,
          42737,
          307,
          1009,
          4018,
          13,
          407,
          382,
          2321,
          382,
          286,
          483,
          264,
          777,
          42737,
          11,
          51628
        ]
      },
      {
        "avg_logprob": -0.19979569007610454,
        "compression_ratio": 1.6525096525096525,
        "end": 1834.72,
        "id": 276,
        "no_speech_prob": 0.06754366308450699,
        "seek": 182808,
        "start": 1828.72,
        "temperature": 0,
        "text": " no, right before I get the new anomaly, no, no, right after. Okay. So after I do this,",
        "tokens": [
          50396,
          572,
          11,
          558,
          949,
          286,
          483,
          264,
          777,
          42737,
          11,
          572,
          11,
          572,
          11,
          558,
          934,
          13,
          1033,
          13,
          407,
          934,
          286,
          360,
          341,
          11,
          50696
        ]
      },
      {
        "avg_logprob": -0.19979569007610454,
        "compression_ratio": 1.6525096525096525,
        "end": 1841.6,
        "id": 277,
        "no_speech_prob": 0.06754366308450699,
        "seek": 182808,
        "start": 1837.52,
        "temperature": 0,
        "text": " so I just need to save the previous one. Oh, but they need the previous angle.",
        "tokens": [
          50836,
          370,
          286,
          445,
          643,
          281,
          3155,
          264,
          3894,
          472,
          13,
          876,
          11,
          457,
          436,
          643,
          264,
          3894,
          5802,
          13,
          51040
        ]
      },
      {
        "avg_logprob": -0.19979569007610454,
        "compression_ratio": 1.6525096525096525,
        "end": 1846.48,
        "id": 278,
        "no_speech_prob": 0.06754366308450699,
        "seek": 182808,
        "start": 1842.3999999999999,
        "temperature": 0,
        "text": " But I could calculate that. Is it silly? Because I could just look up what was before,",
        "tokens": [
          51080,
          583,
          286,
          727,
          8873,
          300,
          13,
          1119,
          309,
          11774,
          30,
          1436,
          286,
          727,
          445,
          574,
          493,
          437,
          390,
          949,
          11,
          51284
        ]
      },
      {
        "avg_logprob": -0.19979569007610454,
        "compression_ratio": 1.6525096525096525,
        "end": 1851.28,
        "id": 279,
        "no_speech_prob": 0.06754366308450699,
        "seek": 182808,
        "start": 1846.48,
        "temperature": 0,
        "text": " but maybe it's helpful to store it because then I don't have to deal with like the endpoints.",
        "tokens": [
          51284,
          457,
          1310,
          309,
          311,
          4961,
          281,
          3531,
          309,
          570,
          550,
          286,
          500,
          380,
          362,
          281,
          2028,
          365,
          411,
          264,
          917,
          20552,
          13,
          51524
        ]
      },
      {
        "avg_logprob": -0.19979569007610454,
        "compression_ratio": 1.6525096525096525,
        "end": 1856.24,
        "id": 280,
        "no_speech_prob": 0.06754366308450699,
        "seek": 182808,
        "start": 1852.8799999999999,
        "temperature": 0,
        "text": " You're really going to make this better after you watch this, aren't you? Please.",
        "tokens": [
          51604,
          509,
          434,
          534,
          516,
          281,
          652,
          341,
          1101,
          934,
          291,
          1159,
          341,
          11,
          3212,
          380,
          291,
          30,
          2555,
          13,
          51772
        ]
      },
      {
        "avg_logprob": -0.21796066761016847,
        "compression_ratio": 1.489010989010989,
        "end": 1866.24,
        "id": 281,
        "no_speech_prob": 0.0014325204538181424,
        "seek": 185808,
        "start": 1858.1599999999999,
        "temperature": 0,
        "text": " Okay. Let's see here. Oh, I don't have the angle? Sure. Let's put this inside the if statement.",
        "tokens": [
          50368,
          1033,
          13,
          961,
          311,
          536,
          510,
          13,
          876,
          11,
          286,
          500,
          380,
          362,
          264,
          5802,
          30,
          4894,
          13,
          961,
          311,
          829,
          341,
          1854,
          264,
          498,
          5629,
          13,
          50772
        ]
      },
      {
        "avg_logprob": -0.21796066761016847,
        "compression_ratio": 1.489010989010989,
        "end": 1872.3999999999999,
        "id": 282,
        "no_speech_prob": 0.0014325204538181424,
        "seek": 185808,
        "start": 1866.24,
        "temperature": 0,
        "text": " There's no reason to save the anomaly if it's bad data. Uh-oh. This is very strange.",
        "tokens": [
          50772,
          821,
          311,
          572,
          1778,
          281,
          3155,
          264,
          42737,
          498,
          309,
          311,
          1578,
          1412,
          13,
          4019,
          12,
          1445,
          13,
          639,
          307,
          588,
          5861,
          13,
          51080
        ]
      },
      {
        "avg_logprob": -0.21796066761016847,
        "compression_ratio": 1.489010989010989,
        "end": 1880.08,
        "id": 283,
        "no_speech_prob": 0.0014325204538181424,
        "seek": 185808,
        "start": 1874.08,
        "temperature": 0,
        "text": " Why is there an extra line? I guess it's very silly to just store the previous one. I know",
        "tokens": [
          51164,
          1545,
          307,
          456,
          364,
          2857,
          1622,
          30,
          286,
          2041,
          309,
          311,
          588,
          11774,
          281,
          445,
          3531,
          264,
          3894,
          472,
          13,
          286,
          458,
          51464
        ]
      },
      {
        "avg_logprob": -0.25101490763874795,
        "compression_ratio": 1.4205128205128206,
        "end": 1888.8799999999999,
        "id": 284,
        "no_speech_prob": 0.23933514952659607,
        "seek": 188008,
        "start": 1880.08,
        "temperature": 0,
        "text": " that they're all offset by 30 degrees or pi divided by six. Oh, no, the previous one is minus.",
        "tokens": [
          50364,
          300,
          436,
          434,
          439,
          18687,
          538,
          2217,
          5310,
          420,
          3895,
          6666,
          538,
          2309,
          13,
          876,
          11,
          572,
          11,
          264,
          3894,
          472,
          307,
          3175,
          13,
          50804
        ]
      },
      {
        "avg_logprob": -0.25101490763874795,
        "compression_ratio": 1.4205128205128206,
        "end": 1898.24,
        "id": 285,
        "no_speech_prob": 0.23933514952659607,
        "seek": 188008,
        "start": 1890.8799999999999,
        "temperature": 0,
        "text": " I can't do this for the first value. As long as it's not the very first. Okay. This is working",
        "tokens": [
          50904,
          286,
          393,
          380,
          360,
          341,
          337,
          264,
          700,
          2158,
          13,
          1018,
          938,
          382,
          309,
          311,
          406,
          264,
          588,
          700,
          13,
          1033,
          13,
          639,
          307,
          1364,
          51272
        ]
      },
      {
        "avg_logprob": -0.25101490763874795,
        "compression_ratio": 1.4205128205128206,
        "end": 1906.96,
        "id": 286,
        "no_speech_prob": 0.23933514952659607,
        "seek": 188008,
        "start": 1898.24,
        "temperature": 0,
        "text": " correctly. But I'm going to have a Boolean variable that says first value is false. And",
        "tokens": [
          51272,
          8944,
          13,
          583,
          286,
          478,
          516,
          281,
          362,
          257,
          23351,
          28499,
          7006,
          300,
          1619,
          700,
          2158,
          307,
          7908,
          13,
          400,
          51708
        ]
      },
      {
        "avg_logprob": -0.1724098785014092,
        "compression_ratio": 1.7006369426751593,
        "end": 1917.8400000000001,
        "id": 287,
        "no_speech_prob": 0.0009399379487149417,
        "seek": 190696,
        "start": 1907.92,
        "temperature": 0,
        "text": " as long as it's not the first value, draw the line and then say first value is true.",
        "tokens": [
          50412,
          382,
          938,
          382,
          309,
          311,
          406,
          264,
          700,
          2158,
          11,
          2642,
          264,
          1622,
          293,
          550,
          584,
          700,
          2158,
          307,
          2074,
          13,
          50908
        ]
      },
      {
        "avg_logprob": -0.1724098785014092,
        "compression_ratio": 1.7006369426751593,
        "end": 1927.28,
        "id": 288,
        "no_speech_prob": 0.0009399379487149417,
        "seek": 190696,
        "start": 1919.8400000000001,
        "temperature": 0,
        "text": " Oh, it's false. No, first value is true. This is the first value. So don't draw the line.",
        "tokens": [
          51008,
          876,
          11,
          309,
          311,
          7908,
          13,
          883,
          11,
          700,
          2158,
          307,
          2074,
          13,
          639,
          307,
          264,
          700,
          2158,
          13,
          407,
          500,
          380,
          2642,
          264,
          1622,
          13,
          51380
        ]
      },
      {
        "avg_logprob": -0.1724098785014092,
        "compression_ratio": 1.7006369426751593,
        "end": 1932.24,
        "id": 289,
        "no_speech_prob": 0.0009399379487149417,
        "seek": 190696,
        "start": 1927.28,
        "temperature": 0,
        "text": " There we go. I'm really making a mess of this. I think this is correct now. I'm drawing them",
        "tokens": [
          51380,
          821,
          321,
          352,
          13,
          286,
          478,
          534,
          1455,
          257,
          2082,
          295,
          341,
          13,
          286,
          519,
          341,
          307,
          3006,
          586,
          13,
          286,
          478,
          6316,
          552,
          51628
        ]
      },
      {
        "avg_logprob": -0.22094538304712866,
        "compression_ratio": 1.543956043956044,
        "end": 1939.2,
        "id": 290,
        "no_speech_prob": 0.014281473122537136,
        "seek": 193224,
        "start": 1932.24,
        "temperature": 0,
        "text": " as separate line segments. Let's get rid of this previous angle concept. I don't need that.",
        "tokens": [
          50364,
          382,
          4994,
          1622,
          19904,
          13,
          961,
          311,
          483,
          3973,
          295,
          341,
          3894,
          5802,
          3410,
          13,
          286,
          500,
          380,
          643,
          300,
          13,
          50712
        ]
      },
      {
        "avg_logprob": -0.22094538304712866,
        "compression_ratio": 1.543956043956044,
        "end": 1943.6,
        "id": 291,
        "no_speech_prob": 0.014281473122537136,
        "seek": 193224,
        "start": 1939.76,
        "temperature": 0,
        "text": " Let me up the frame rate so we can kind of I still want to be able to watch it somewhat slowly.",
        "tokens": [
          50740,
          961,
          385,
          493,
          264,
          3920,
          3314,
          370,
          321,
          393,
          733,
          295,
          286,
          920,
          528,
          281,
          312,
          1075,
          281,
          1159,
          309,
          8344,
          5692,
          13,
          50932
        ]
      },
      {
        "avg_logprob": -0.22094538304712866,
        "compression_ratio": 1.543956043956044,
        "end": 1950.16,
        "id": 292,
        "no_speech_prob": 0.014281473122537136,
        "seek": 193224,
        "start": 1945.84,
        "temperature": 0,
        "text": " Think it's working. Let's max out the frame rate.",
        "tokens": [
          51044,
          6557,
          309,
          311,
          1364,
          13,
          961,
          311,
          11469,
          484,
          264,
          3920,
          3314,
          13,
          51260
        ]
      },
      {
        "avg_logprob": -0.22094538304712866,
        "compression_ratio": 1.543956043956044,
        "end": 1955.1200000000001,
        "id": 293,
        "no_speech_prob": 0.014281473122537136,
        "seek": 193224,
        "start": 1952.32,
        "temperature": 0,
        "text": " I just want to see what happens at the end.",
        "tokens": [
          51368,
          286,
          445,
          528,
          281,
          536,
          437,
          2314,
          412,
          264,
          917,
          13,
          51508
        ]
      },
      {
        "avg_logprob": -0.19204818575005783,
        "compression_ratio": 1.4663212435233162,
        "end": 1972.16,
        "id": 294,
        "no_speech_prob": 0.005139564163982868,
        "seek": 196224,
        "start": 1963.2,
        "temperature": 0,
        "text": " All right. Didn't get an error. I'm not entirely sure. It was hard for me to see if it ended",
        "tokens": [
          50412,
          1057,
          558,
          13,
          11151,
          380,
          483,
          364,
          6713,
          13,
          286,
          478,
          406,
          7696,
          988,
          13,
          467,
          390,
          1152,
          337,
          385,
          281,
          536,
          498,
          309,
          4590,
          50860
        ]
      },
      {
        "avg_logprob": -0.19204818575005783,
        "compression_ratio": 1.4663212435233162,
        "end": 1977.84,
        "id": 295,
        "no_speech_prob": 0.005139564163982868,
        "seek": 196224,
        "start": 1972.16,
        "temperature": 0,
        "text": " properly because I don't have any color differences to help me understand visually what's going on.",
        "tokens": [
          50860,
          6108,
          570,
          286,
          500,
          380,
          362,
          604,
          2017,
          7300,
          281,
          854,
          385,
          1223,
          19622,
          437,
          311,
          516,
          322,
          13,
          51144
        ]
      },
      {
        "avg_logprob": -0.19204818575005783,
        "compression_ratio": 1.4663212435233162,
        "end": 1983.76,
        "id": 296,
        "no_speech_prob": 0.005139564163982868,
        "seek": 196224,
        "start": 1977.84,
        "temperature": 0,
        "text": " But I think it's all all right. I think I can finally add color, right? If I just insert a",
        "tokens": [
          51144,
          583,
          286,
          519,
          309,
          311,
          439,
          439,
          558,
          13,
          286,
          519,
          286,
          393,
          2721,
          909,
          2017,
          11,
          558,
          30,
          759,
          286,
          445,
          8969,
          257,
          51440
        ]
      },
      {
        "avg_logprob": -0.16401744882265726,
        "compression_ratio": 1.6157205240174672,
        "end": 1991.76,
        "id": 297,
        "no_speech_prob": 0.1688486784696579,
        "seek": 198376,
        "start": 1983.76,
        "temperature": 0,
        "text": " stroke here, like, for example, with red. Now all of the lines are red. Obviously, if I add some",
        "tokens": [
          50364,
          12403,
          510,
          11,
          411,
          11,
          337,
          1365,
          11,
          365,
          2182,
          13,
          823,
          439,
          295,
          264,
          3876,
          366,
          2182,
          13,
          7580,
          11,
          498,
          286,
          909,
          512,
          50764
        ]
      },
      {
        "avg_logprob": -0.16401744882265726,
        "compression_ratio": 1.6157205240174672,
        "end": 1997.12,
        "id": 298,
        "no_speech_prob": 0.1688486784696579,
        "seek": 198376,
        "start": 1991.76,
        "temperature": 0,
        "text": " blue, they're all going to be pink and I can put any color in here I want and I'm going to see that",
        "tokens": [
          50764,
          3344,
          11,
          436,
          434,
          439,
          516,
          281,
          312,
          7022,
          293,
          286,
          393,
          829,
          604,
          2017,
          294,
          510,
          286,
          528,
          293,
          286,
          478,
          516,
          281,
          536,
          300,
          51032
        ]
      },
      {
        "avg_logprob": -0.16401744882265726,
        "compression_ratio": 1.6157205240174672,
        "end": 2004,
        "id": 299,
        "no_speech_prob": 0.1688486784696579,
        "seek": 198376,
        "start": 1997.12,
        "temperature": 0,
        "text": " color. But if we look back at the original reference visualization, the colder anomalies",
        "tokens": [
          51032,
          2017,
          13,
          583,
          498,
          321,
          574,
          646,
          412,
          264,
          3380,
          6408,
          25801,
          11,
          264,
          31020,
          24769,
          48872,
          51376
        ]
      },
      {
        "avg_logprob": -0.16401744882265726,
        "compression_ratio": 1.6157205240174672,
        "end": 2010.48,
        "id": 300,
        "no_speech_prob": 0.1688486784696579,
        "seek": 198376,
        "start": 2004,
        "temperature": 0,
        "text": " less than zero had blue tones. The warmer anomalies greater than zero had red tones.",
        "tokens": [
          51376,
          1570,
          813,
          4018,
          632,
          3344,
          19995,
          13,
          440,
          21599,
          24769,
          48872,
          5044,
          813,
          4018,
          632,
          2182,
          19995,
          13,
          51700
        ]
      },
      {
        "avg_logprob": -0.16395692030588785,
        "compression_ratio": 1.7627906976744185,
        "end": 2015.6,
        "id": 301,
        "no_speech_prob": 0.00031503711943514645,
        "seek": 201048,
        "start": 2010.48,
        "temperature": 0,
        "text": " Let's use the whiteboard for a second to map this out. So we have an anomaly. Let's just say",
        "tokens": [
          50364,
          961,
          311,
          764,
          264,
          2418,
          3787,
          337,
          257,
          1150,
          281,
          4471,
          341,
          484,
          13,
          407,
          321,
          362,
          364,
          42737,
          13,
          961,
          311,
          445,
          584,
          50620
        ]
      },
      {
        "avg_logprob": -0.16395692030588785,
        "compression_ratio": 1.7627906976744185,
        "end": 2020.88,
        "id": 302,
        "no_speech_prob": 0.00031503711943514645,
        "seek": 201048,
        "start": 2015.6,
        "temperature": 0,
        "text": " for the sake of argument that the anomaly is somewhere between negative one degrees and",
        "tokens": [
          50620,
          337,
          264,
          9717,
          295,
          6770,
          300,
          264,
          42737,
          307,
          4079,
          1296,
          3671,
          472,
          5310,
          293,
          50884
        ]
      },
      {
        "avg_logprob": -0.16395692030588785,
        "compression_ratio": 1.7627906976744185,
        "end": 2027.04,
        "id": 303,
        "no_speech_prob": 0.00031503711943514645,
        "seek": 201048,
        "start": 2020.88,
        "temperature": 0,
        "text": " positive one degree with zero degrees being in the center. And I want to have a color that's red",
        "tokens": [
          50884,
          3353,
          472,
          4314,
          365,
          4018,
          5310,
          885,
          294,
          264,
          3056,
          13,
          400,
          286,
          528,
          281,
          362,
          257,
          2017,
          300,
          311,
          2182,
          51192
        ]
      },
      {
        "avg_logprob": -0.16395692030588785,
        "compression_ratio": 1.7627906976744185,
        "end": 2035.92,
        "id": 304,
        "no_speech_prob": 0.00031503711943514645,
        "seek": 201048,
        "start": 2027.04,
        "temperature": 0,
        "text": " over here. And I want to have a color that is blue over here. So if I ever have a scenario like this,",
        "tokens": [
          51192,
          670,
          510,
          13,
          400,
          286,
          528,
          281,
          362,
          257,
          2017,
          300,
          307,
          3344,
          670,
          510,
          13,
          407,
          498,
          286,
          1562,
          362,
          257,
          9005,
          411,
          341,
          11,
          51636
        ]
      },
      {
        "avg_logprob": -0.20537718454996745,
        "compression_ratio": 1.5956284153005464,
        "end": 2044.8000000000002,
        "id": 305,
        "no_speech_prob": 0.006797420792281628,
        "seek": 203592,
        "start": 2036.64,
        "temperature": 0,
        "text": " the thing that I always think about is linear interpolation or LERP. The idea of LERP is I have",
        "tokens": [
          50400,
          264,
          551,
          300,
          286,
          1009,
          519,
          466,
          307,
          8213,
          44902,
          399,
          420,
          441,
          1598,
          47,
          13,
          440,
          1558,
          295,
          441,
          1598,
          47,
          307,
          286,
          362,
          50808
        ]
      },
      {
        "avg_logprob": -0.20537718454996745,
        "compression_ratio": 1.5956284153005464,
        "end": 2052.88,
        "id": 306,
        "no_speech_prob": 0.006797420792281628,
        "seek": 203592,
        "start": 2044.8000000000002,
        "temperature": 0,
        "text": " some minimum value and some maximum value or they don't, it doesn't actually have to be lower and",
        "tokens": [
          50808,
          512,
          7285,
          2158,
          293,
          512,
          6674,
          2158,
          420,
          436,
          500,
          380,
          11,
          309,
          1177,
          380,
          767,
          362,
          281,
          312,
          3126,
          293,
          51212
        ]
      },
      {
        "avg_logprob": -0.20537718454996745,
        "compression_ratio": 1.5956284153005464,
        "end": 2058.88,
        "id": 307,
        "no_speech_prob": 0.006797420792281628,
        "seek": 203592,
        "start": 2052.88,
        "temperature": 0,
        "text": " bigger, but I have some starting value and ending value. And I want to interpolate between them as",
        "tokens": [
          51212,
          3801,
          11,
          457,
          286,
          362,
          512,
          2891,
          2158,
          293,
          8121,
          2158,
          13,
          400,
          286,
          528,
          281,
          44902,
          473,
          1296,
          552,
          382,
          51512
        ]
      },
      {
        "avg_logprob": -0.21290958218458222,
        "compression_ratio": 1.5052083333333333,
        "end": 2068.56,
        "id": 308,
        "no_speech_prob": 0.001032223110087216,
        "seek": 205888,
        "start": 2058.88,
        "temperature": 0,
        "text": " if from 0% maybe to a hundred percent. So the LERP function in P5 typically takes three arguments,",
        "tokens": [
          50364,
          498,
          490,
          1958,
          4,
          1310,
          281,
          257,
          3262,
          3043,
          13,
          407,
          264,
          441,
          1598,
          47,
          2445,
          294,
          430,
          20,
          5850,
          2516,
          1045,
          12869,
          11,
          50848
        ]
      },
      {
        "avg_logprob": -0.21290958218458222,
        "compression_ratio": 1.5052083333333333,
        "end": 2078.88,
        "id": 309,
        "no_speech_prob": 0.001032223110087216,
        "seek": 205888,
        "start": 2069.36,
        "temperature": 0,
        "text": " A, B, and an amount. The amount being a value between zero and one, this corresponding to A,",
        "tokens": [
          50888,
          316,
          11,
          363,
          11,
          293,
          364,
          2372,
          13,
          440,
          2372,
          885,
          257,
          2158,
          1296,
          4018,
          293,
          472,
          11,
          341,
          11760,
          281,
          316,
          11,
          51364
        ]
      },
      {
        "avg_logprob": -0.21290958218458222,
        "compression_ratio": 1.5052083333333333,
        "end": 2088.2400000000002,
        "id": 310,
        "no_speech_prob": 0.001032223110087216,
        "seek": 205888,
        "start": 2078.88,
        "temperature": 0,
        "text": " and this corresponding to B. There is in fact in P5 LERP color. So LERP color will do exactly the",
        "tokens": [
          51364,
          293,
          341,
          11760,
          281,
          363,
          13,
          821,
          307,
          294,
          1186,
          294,
          430,
          20,
          441,
          1598,
          47,
          2017,
          13,
          407,
          441,
          1598,
          47,
          2017,
          486,
          360,
          2293,
          264,
          51832
        ]
      },
      {
        "avg_logprob": -0.2063921704704379,
        "compression_ratio": 1.5863874345549738,
        "end": 2094.9599999999996,
        "id": 311,
        "no_speech_prob": 0.0004728532221633941,
        "seek": 208824,
        "start": 2088.24,
        "temperature": 0,
        "text": " same thing as LERP. It will just LERP the R value, the G value, and the B value all by the same amount.",
        "tokens": [
          50364,
          912,
          551,
          382,
          441,
          1598,
          47,
          13,
          467,
          486,
          445,
          441,
          1598,
          47,
          264,
          497,
          2158,
          11,
          264,
          460,
          2158,
          11,
          293,
          264,
          363,
          2158,
          439,
          538,
          264,
          912,
          2372,
          13,
          50700
        ]
      },
      {
        "avg_logprob": -0.2063921704704379,
        "compression_ratio": 1.5863874345549738,
        "end": 2104.8799999999997,
        "id": 312,
        "no_speech_prob": 0.0004728532221633941,
        "seek": 208824,
        "start": 2094.9599999999996,
        "temperature": 0,
        "text": " So in essence, I could just use the anomaly value as the amount. That wouldn't work exactly though,",
        "tokens": [
          50700,
          407,
          294,
          12801,
          11,
          286,
          727,
          445,
          764,
          264,
          42737,
          2158,
          382,
          264,
          2372,
          13,
          663,
          2759,
          380,
          589,
          2293,
          1673,
          11,
          51196
        ]
      },
      {
        "avg_logprob": -0.2063921704704379,
        "compression_ratio": 1.5863874345549738,
        "end": 2110.56,
        "id": 313,
        "no_speech_prob": 0.0004728532221633941,
        "seek": 208824,
        "start": 2104.8799999999997,
        "temperature": 0,
        "text": " because the amount should be between zero and one and my anomalies are positive and negative. Also,",
        "tokens": [
          51196,
          570,
          264,
          2372,
          820,
          312,
          1296,
          4018,
          293,
          472,
          293,
          452,
          24769,
          48872,
          366,
          3353,
          293,
          3671,
          13,
          2743,
          11,
          51480
        ]
      },
      {
        "avg_logprob": -0.16930597799795646,
        "compression_ratio": 1.6590909090909092,
        "end": 2118.56,
        "id": 314,
        "no_speech_prob": 0.0029809644911438227,
        "seek": 211056,
        "start": 2111.2,
        "temperature": 0,
        "text": " if I look back at the original climate spiral, the one that Ed Hawkins made, at zero, the color is",
        "tokens": [
          50396,
          498,
          286,
          574,
          646,
          412,
          264,
          3380,
          5659,
          25165,
          11,
          264,
          472,
          300,
          3977,
          9325,
          10277,
          1027,
          11,
          412,
          4018,
          11,
          264,
          2017,
          307,
          50764
        ]
      },
      {
        "avg_logprob": -0.16930597799795646,
        "compression_ratio": 1.6590909090909092,
        "end": 2124.24,
        "id": 315,
        "no_speech_prob": 0.0029809644911438227,
        "seek": 211056,
        "start": 2118.56,
        "temperature": 0,
        "text": " actually white. So I think what I want to do is have two LERPs. I want to have a LERP for any",
        "tokens": [
          50764,
          767,
          2418,
          13,
          407,
          286,
          519,
          437,
          286,
          528,
          281,
          360,
          307,
          362,
          732,
          441,
          1598,
          23043,
          13,
          286,
          528,
          281,
          362,
          257,
          441,
          1598,
          47,
          337,
          604,
          51048
        ]
      },
      {
        "avg_logprob": -0.16930597799795646,
        "compression_ratio": 1.6590909090909092,
        "end": 2131.12,
        "id": 316,
        "no_speech_prob": 0.0029809644911438227,
        "seek": 211056,
        "start": 2124.24,
        "temperature": 0,
        "text": " negative values that goes from red to white and a LERP for any positive values that goes from white",
        "tokens": [
          51048,
          3671,
          4190,
          300,
          1709,
          490,
          2182,
          281,
          2418,
          293,
          257,
          441,
          1598,
          47,
          337,
          604,
          3353,
          4190,
          300,
          1709,
          490,
          2418,
          51392
        ]
      },
      {
        "avg_logprob": -0.16723807352893758,
        "compression_ratio": 1.5892116182572613,
        "end": 2142.4,
        "id": 317,
        "no_speech_prob": 0.21998371183872223,
        "seek": 213112,
        "start": 2131.7599999999998,
        "temperature": 0,
        "text": " to blue. Let's see how that goes. So in the code, I need three colors. Cold, which I'll just",
        "tokens": [
          50396,
          281,
          3344,
          13,
          961,
          311,
          536,
          577,
          300,
          1709,
          13,
          407,
          294,
          264,
          3089,
          11,
          286,
          643,
          1045,
          4577,
          13,
          16918,
          11,
          597,
          286,
          603,
          445,
          50928
        ]
      },
      {
        "avg_logprob": -0.16723807352893758,
        "compression_ratio": 1.5892116182572613,
        "end": 2146.64,
        "id": 318,
        "no_speech_prob": 0.21998371183872223,
        "seek": 213112,
        "start": 2142.4,
        "temperature": 0,
        "text": " arbitrarily set to pure blue. I mean, we could be more thoughtful about the color palette, but I'm",
        "tokens": [
          50928,
          19071,
          3289,
          992,
          281,
          6075,
          3344,
          13,
          286,
          914,
          11,
          321,
          727,
          312,
          544,
          21566,
          466,
          264,
          2017,
          15851,
          11,
          457,
          286,
          478,
          51140
        ]
      },
      {
        "avg_logprob": -0.16723807352893758,
        "compression_ratio": 1.5892116182572613,
        "end": 2154.3199999999997,
        "id": 319,
        "no_speech_prob": 0.21998371183872223,
        "seek": 213112,
        "start": 2146.64,
        "temperature": 0,
        "text": " not going to be. Warm, which should be red. And then I'm just going to call it zero. Maybe there's",
        "tokens": [
          51140,
          406,
          516,
          281,
          312,
          13,
          40353,
          11,
          597,
          820,
          312,
          2182,
          13,
          400,
          550,
          286,
          478,
          445,
          516,
          281,
          818,
          309,
          4018,
          13,
          2704,
          456,
          311,
          51524
        ]
      },
      {
        "avg_logprob": -0.16723807352893758,
        "compression_ratio": 1.5892116182572613,
        "end": 2158.24,
        "id": 320,
        "no_speech_prob": 0.21998371183872223,
        "seek": 213112,
        "start": 2154.3199999999997,
        "temperature": 0,
        "text": " a better variable name, but they'll have four letters and I love how they line up like that.",
        "tokens": [
          51524,
          257,
          1101,
          7006,
          1315,
          11,
          457,
          436,
          603,
          362,
          1451,
          7825,
          293,
          286,
          959,
          577,
          436,
          1622,
          493,
          411,
          300,
          13,
          51720
        ]
      },
      {
        "avg_logprob": -0.1818483154495041,
        "compression_ratio": 1.5,
        "end": 2167.12,
        "id": 321,
        "no_speech_prob": 0.00015843604342080653,
        "seek": 215824,
        "start": 2158.24,
        "temperature": 0,
        "text": " So zero will be just pure white. Then my LERP should happen between cold and zero or zero and",
        "tokens": [
          50364,
          407,
          4018,
          486,
          312,
          445,
          6075,
          2418,
          13,
          1396,
          452,
          441,
          1598,
          47,
          820,
          1051,
          1296,
          3554,
          293,
          4018,
          420,
          4018,
          293,
          50808
        ]
      },
      {
        "avg_logprob": -0.1818483154495041,
        "compression_ratio": 1.5,
        "end": 2173.2,
        "id": 322,
        "no_speech_prob": 0.00015843604342080653,
        "seek": 215824,
        "start": 2167.12,
        "temperature": 0,
        "text": " warm, depending on if the average anomaly is positive or negative. So if average is less than",
        "tokens": [
          50808,
          4561,
          11,
          5413,
          322,
          498,
          264,
          4274,
          42737,
          307,
          3353,
          420,
          3671,
          13,
          407,
          498,
          4274,
          307,
          1570,
          813,
          51112
        ]
      },
      {
        "avg_logprob": -0.1818483154495041,
        "compression_ratio": 1.5,
        "end": 2181.2799999999997,
        "id": 323,
        "no_speech_prob": 0.00015843604342080653,
        "seek": 215824,
        "start": 2173.2,
        "temperature": 0,
        "text": " zero, my color, oh, so I need a default color. I'll just call it line color. Well, it'll be white",
        "tokens": [
          51112,
          4018,
          11,
          452,
          2017,
          11,
          1954,
          11,
          370,
          286,
          643,
          257,
          7576,
          2017,
          13,
          286,
          603,
          445,
          818,
          309,
          1622,
          2017,
          13,
          1042,
          11,
          309,
          603,
          312,
          2418,
          51516
        ]
      },
      {
        "avg_logprob": -0.25485722430340657,
        "compression_ratio": 1.6686746987951808,
        "end": 2189.52,
        "id": 324,
        "no_speech_prob": 0.05184439197182655,
        "seek": 218128,
        "start": 2181.76,
        "temperature": 0,
        "text": " if something goes wrong. But if average is less than zero, then the line color will LERP from",
        "tokens": [
          50388,
          498,
          746,
          1709,
          2085,
          13,
          583,
          498,
          4274,
          307,
          1570,
          813,
          4018,
          11,
          550,
          264,
          1622,
          2017,
          486,
          441,
          1598,
          47,
          490,
          50776
        ]
      },
      {
        "avg_logprob": -0.25485722430340657,
        "compression_ratio": 1.6686746987951808,
        "end": 2200.1600000000003,
        "id": 325,
        "no_speech_prob": 0.05184439197182655,
        "seek": 218128,
        "start": 2190.1600000000003,
        "temperature": 0,
        "text": " cold to zero. The bigger the average is all the way to zero. Oh, wait, wait, wait, wait, wait.",
        "tokens": [
          50808,
          3554,
          281,
          4018,
          13,
          440,
          3801,
          264,
          4274,
          307,
          439,
          264,
          636,
          281,
          4018,
          13,
          876,
          11,
          1699,
          11,
          1699,
          11,
          1699,
          11,
          1699,
          11,
          1699,
          13,
          51308
        ]
      },
      {
        "avg_logprob": -0.25485722430340657,
        "compression_ratio": 1.6686746987951808,
        "end": 2206.8,
        "id": 326,
        "no_speech_prob": 0.05184439197182655,
        "seek": 218128,
        "start": 2200.1600000000003,
        "temperature": 0,
        "text": " But average is a negative value. Zero to 100 percent. Zero to 100 percent, just flip the",
        "tokens": [
          51308,
          583,
          4274,
          307,
          257,
          3671,
          2158,
          13,
          17182,
          281,
          2319,
          3043,
          13,
          17182,
          281,
          2319,
          3043,
          11,
          445,
          7929,
          264,
          51640
        ]
      },
      {
        "avg_logprob": -0.18084968664707282,
        "compression_ratio": 1.695906432748538,
        "end": 2217.44,
        "id": 327,
        "no_speech_prob": 0.03021427057683468,
        "seek": 220680,
        "start": 2206.8,
        "temperature": 0,
        "text": " negative to a positive. So zero all the way to cold based on the absolute value of that average",
        "tokens": [
          50364,
          3671,
          281,
          257,
          3353,
          13,
          407,
          4018,
          439,
          264,
          636,
          281,
          3554,
          2361,
          322,
          264,
          8236,
          2158,
          295,
          300,
          4274,
          50896
        ]
      },
      {
        "avg_logprob": -0.18084968664707282,
        "compression_ratio": 1.695906432748538,
        "end": 2226.8,
        "id": 328,
        "no_speech_prob": 0.03021427057683468,
        "seek": 220680,
        "start": 2217.44,
        "temperature": 0,
        "text": " value. Stroke line color. Average is not defined. Oh, I have to make the average. I want the average",
        "tokens": [
          50896,
          2158,
          13,
          42196,
          330,
          1622,
          2017,
          13,
          316,
          3623,
          307,
          406,
          7642,
          13,
          876,
          11,
          286,
          362,
          281,
          652,
          264,
          4274,
          13,
          286,
          528,
          264,
          4274,
          51364
        ]
      },
      {
        "avg_logprob": -0.18084968664707282,
        "compression_ratio": 1.695906432748538,
        "end": 2231.84,
        "id": 329,
        "no_speech_prob": 0.03021427057683468,
        "seek": 220680,
        "start": 2226.8,
        "temperature": 0,
        "text": " of the anomaly. If it's a line segment, I have two values. I want the color to be the average",
        "tokens": [
          51364,
          295,
          264,
          42737,
          13,
          759,
          309,
          311,
          257,
          1622,
          9469,
          11,
          286,
          362,
          732,
          4190,
          13,
          286,
          528,
          264,
          2017,
          281,
          312,
          264,
          4274,
          51616
        ]
      },
      {
        "avg_logprob": -0.16689286913190568,
        "compression_ratio": 1.5346938775510204,
        "end": 2241.6800000000003,
        "id": 330,
        "no_speech_prob": 0.10520348697900772,
        "seek": 223184,
        "start": 2231.84,
        "temperature": 0,
        "text": " of those two values. So I do need to calculate that. Oh, no. Oh, no. We've got a problem. A few",
        "tokens": [
          50364,
          295,
          729,
          732,
          4190,
          13,
          407,
          286,
          360,
          643,
          281,
          8873,
          300,
          13,
          876,
          11,
          572,
          13,
          876,
          11,
          572,
          13,
          492,
          600,
          658,
          257,
          1154,
          13,
          316,
          1326,
          50856
        ]
      },
      {
        "avg_logprob": -0.16689286913190568,
        "compression_ratio": 1.5346938775510204,
        "end": 2247.84,
        "id": 331,
        "no_speech_prob": 0.10520348697900772,
        "seek": 223184,
        "start": 2241.6800000000003,
        "temperature": 0,
        "text": " different issues. One is I'm not using LERP. I'm using LERP color. The regular LERP is going to",
        "tokens": [
          50856,
          819,
          2663,
          13,
          1485,
          307,
          286,
          478,
          406,
          1228,
          441,
          1598,
          47,
          13,
          286,
          478,
          1228,
          441,
          1598,
          47,
          2017,
          13,
          440,
          3890,
          441,
          1598,
          47,
          307,
          516,
          281,
          51164
        ]
      },
      {
        "avg_logprob": -0.16689286913190568,
        "compression_ratio": 1.5346938775510204,
        "end": 2253.84,
        "id": 332,
        "no_speech_prob": 0.10520348697900772,
        "seek": 223184,
        "start": 2247.84,
        "temperature": 0,
        "text": " fail, but this also isn't working. And I think I know what the problem is. Remember a while ago",
        "tokens": [
          51164,
          3061,
          11,
          457,
          341,
          611,
          1943,
          380,
          1364,
          13,
          400,
          286,
          519,
          286,
          458,
          437,
          264,
          1154,
          307,
          13,
          5459,
          257,
          1339,
          2057,
          51464
        ]
      },
      {
        "avg_logprob": -0.16689286913190568,
        "compression_ratio": 1.5346938775510204,
        "end": 2257.84,
        "id": 333,
        "no_speech_prob": 0.10520348697900772,
        "seek": 223184,
        "start": 2253.84,
        "temperature": 0,
        "text": " when I was saying how JavaScript is just so friendly to us, it's going to figure it out.",
        "tokens": [
          51464,
          562,
          286,
          390,
          1566,
          577,
          15778,
          307,
          445,
          370,
          9208,
          281,
          505,
          11,
          309,
          311,
          516,
          281,
          2573,
          309,
          484,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.21469927590990823,
        "compression_ratio": 1.7031802120141342,
        "end": 2264.32,
        "id": 334,
        "no_speech_prob": 0.009859594516456127,
        "seek": 225784,
        "start": 2257.84,
        "temperature": 0,
        "text": " Sometimes JavaScript is just such a friendly place to be. It's like, I don't know if it's a string,",
        "tokens": [
          50364,
          4803,
          15778,
          307,
          445,
          1270,
          257,
          9208,
          1081,
          281,
          312,
          13,
          467,
          311,
          411,
          11,
          286,
          500,
          380,
          458,
          498,
          309,
          311,
          257,
          6798,
          11,
          50688
        ]
      },
      {
        "avg_logprob": -0.21469927590990823,
        "compression_ratio": 1.7031802120141342,
        "end": 2269.2000000000003,
        "id": 335,
        "no_speech_prob": 0.009859594516456127,
        "seek": 225784,
        "start": 2264.32,
        "temperature": 0,
        "text": " but you want to use it as a number. I'll just figure out. I kind of get what you want and I'll",
        "tokens": [
          50688,
          457,
          291,
          528,
          281,
          764,
          309,
          382,
          257,
          1230,
          13,
          286,
          603,
          445,
          2573,
          484,
          13,
          286,
          733,
          295,
          483,
          437,
          291,
          528,
          293,
          286,
          603,
          50932
        ]
      },
      {
        "avg_logprob": -0.21469927590990823,
        "compression_ratio": 1.7031802120141342,
        "end": 2276.7200000000003,
        "id": 336,
        "no_speech_prob": 0.009859594516456127,
        "seek": 225784,
        "start": 2269.2000000000003,
        "temperature": 0,
        "text": " make it work. This averaging of the two values is actually concatenating the string. So I really do",
        "tokens": [
          50932,
          652,
          309,
          589,
          13,
          639,
          47308,
          295,
          264,
          732,
          4190,
          307,
          767,
          1588,
          7186,
          990,
          264,
          6798,
          13,
          407,
          286,
          534,
          360,
          51308
        ]
      },
      {
        "avg_logprob": -0.21469927590990823,
        "compression_ratio": 1.7031802120141342,
        "end": 2283.04,
        "id": 337,
        "no_speech_prob": 0.009859594516456127,
        "seek": 225784,
        "start": 2276.7200000000003,
        "temperature": 0,
        "text": " need to convert that to a number. And this, I think parse float might make more sense. Doesn't",
        "tokens": [
          51308,
          643,
          281,
          7620,
          300,
          281,
          257,
          1230,
          13,
          400,
          341,
          11,
          286,
          519,
          48377,
          15706,
          1062,
          652,
          544,
          2020,
          13,
          12955,
          380,
          51624
        ]
      },
      {
        "avg_logprob": -0.21469927590990823,
        "compression_ratio": 1.7031802120141342,
        "end": 2286.96,
        "id": 338,
        "no_speech_prob": 0.009859594516456127,
        "seek": 225784,
        "start": 2283.04,
        "temperature": 0,
        "text": " really matter. Those are same parse float is a function that will take a string and parse it",
        "tokens": [
          51624,
          534,
          1871,
          13,
          3950,
          366,
          912,
          48377,
          15706,
          307,
          257,
          2445,
          300,
          486,
          747,
          257,
          6798,
          293,
          48377,
          309,
          51820
        ]
      },
      {
        "avg_logprob": -0.19674795866012573,
        "compression_ratio": 1.5720524017467248,
        "end": 2292.88,
        "id": 339,
        "no_speech_prob": 0.0027149152010679245,
        "seek": 228696,
        "start": 2286.96,
        "temperature": 0,
        "text": " into a floating point. So you can see it's working now. So I should be able to then say,",
        "tokens": [
          50364,
          666,
          257,
          12607,
          935,
          13,
          407,
          291,
          393,
          536,
          309,
          311,
          1364,
          586,
          13,
          407,
          286,
          820,
          312,
          1075,
          281,
          550,
          584,
          11,
          50660
        ]
      },
      {
        "avg_logprob": -0.19674795866012573,
        "compression_ratio": 1.5720524017467248,
        "end": 2298.96,
        "id": 340,
        "no_speech_prob": 0.0027149152010679245,
        "seek": 228696,
        "start": 2292.88,
        "temperature": 0,
        "text": " if the average is now greater than zero, go between zero and the warm value.",
        "tokens": [
          50660,
          498,
          264,
          4274,
          307,
          586,
          5044,
          813,
          4018,
          11,
          352,
          1296,
          4018,
          293,
          264,
          4561,
          2158,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.19674795866012573,
        "compression_ratio": 1.5720524017467248,
        "end": 2306.16,
        "id": 341,
        "no_speech_prob": 0.0027149152010679245,
        "seek": 228696,
        "start": 2300.4,
        "temperature": 0,
        "text": " And let's have this go up by more than just one month at a time so I can see it happening faster.",
        "tokens": [
          51036,
          400,
          718,
          311,
          362,
          341,
          352,
          493,
          538,
          544,
          813,
          445,
          472,
          1618,
          412,
          257,
          565,
          370,
          286,
          393,
          536,
          309,
          2737,
          4663,
          13,
          51324
        ]
      },
      {
        "avg_logprob": -0.19674795866012573,
        "compression_ratio": 1.5720524017467248,
        "end": 2312.7200000000003,
        "id": 342,
        "no_speech_prob": 0.0027149152010679245,
        "seek": 228696,
        "start": 2306.16,
        "temperature": 0,
        "text": " How about four months at a time? Oh, because I'm checking if it's equal and current month starts",
        "tokens": [
          51324,
          1012,
          466,
          1451,
          2493,
          412,
          257,
          565,
          30,
          876,
          11,
          570,
          286,
          478,
          8568,
          498,
          309,
          311,
          2681,
          293,
          2190,
          1618,
          3719,
          51652
        ]
      },
      {
        "avg_logprob": -0.24161561330159506,
        "compression_ratio": 1.6280701754385964,
        "end": 2317.7599999999998,
        "id": 343,
        "no_speech_prob": 0.19191677868366241,
        "seek": 231272,
        "start": 2312.72,
        "temperature": 0,
        "text": " at zero. So the one, so current month, these started at zero for it to, for four to be",
        "tokens": [
          50364,
          412,
          4018,
          13,
          407,
          264,
          472,
          11,
          370,
          2190,
          1618,
          11,
          613,
          1409,
          412,
          4018,
          337,
          309,
          281,
          11,
          337,
          1451,
          281,
          312,
          50616
        ]
      },
      {
        "avg_logprob": -0.24161561330159506,
        "compression_ratio": 1.6280701754385964,
        "end": 2325.3599999999997,
        "id": 344,
        "no_speech_prob": 0.19191677868366241,
        "seek": 231272,
        "start": 2317.7599999999998,
        "temperature": 0,
        "text": " divisible into 12. Okay. This is looking pretty good. Now it's a lot more red than blue, but that's",
        "tokens": [
          50616,
          25974,
          964,
          666,
          2272,
          13,
          1033,
          13,
          639,
          307,
          1237,
          1238,
          665,
          13,
          823,
          309,
          311,
          257,
          688,
          544,
          2182,
          813,
          3344,
          11,
          457,
          300,
          311,
          50996
        ]
      },
      {
        "avg_logprob": -0.24161561330159506,
        "compression_ratio": 1.6280701754385964,
        "end": 2332.56,
        "id": 345,
        "no_speech_prob": 0.19191677868366241,
        "seek": 231272,
        "start": 2325.3599999999997,
        "temperature": 0,
        "text": " simply because of the, the mappings are equivalent and we're not getting as far to negative one as we",
        "tokens": [
          50996,
          2935,
          570,
          295,
          264,
          11,
          264,
          463,
          28968,
          366,
          10344,
          293,
          321,
          434,
          406,
          1242,
          382,
          1400,
          281,
          3671,
          472,
          382,
          321,
          51356
        ]
      },
      {
        "avg_logprob": -0.24161561330159506,
        "compression_ratio": 1.6280701754385964,
        "end": 2337.8399999999997,
        "id": 346,
        "no_speech_prob": 0.19191677868366241,
        "seek": 231272,
        "start": 2332.56,
        "temperature": 0,
        "text": " are. We didn't, we don't start, we don't have a lot of cooler temperatures than the baseline,",
        "tokens": [
          51356,
          366,
          13,
          492,
          994,
          380,
          11,
          321,
          500,
          380,
          722,
          11,
          321,
          500,
          380,
          362,
          257,
          688,
          295,
          15566,
          12633,
          813,
          264,
          20518,
          11,
          51620
        ]
      },
      {
        "avg_logprob": -0.24161561330159506,
        "compression_ratio": 1.6280701754385964,
        "end": 2342,
        "id": 347,
        "no_speech_prob": 0.19191677868366241,
        "seek": 231272,
        "start": 2337.8399999999997,
        "temperature": 0,
        "text": " but boy, is the earth getting warmer, which is actually showing. Now design-wise,",
        "tokens": [
          51620,
          457,
          3237,
          11,
          307,
          264,
          4120,
          1242,
          21599,
          11,
          597,
          307,
          767,
          4099,
          13,
          823,
          1715,
          12,
          3711,
          11,
          51828
        ]
      },
      {
        "avg_logprob": -0.16553450412437565,
        "compression_ratio": 1.6838487972508591,
        "end": 2347.52,
        "id": 348,
        "no_speech_prob": 0.0005357731715776026,
        "seek": 234200,
        "start": 2342,
        "temperature": 0,
        "text": " I'm sure there could be quite a few improvements here. You can see some of those layout improvements.",
        "tokens": [
          50364,
          286,
          478,
          988,
          456,
          727,
          312,
          1596,
          257,
          1326,
          13797,
          510,
          13,
          509,
          393,
          536,
          512,
          295,
          729,
          13333,
          13797,
          13,
          50640
        ]
      },
      {
        "avg_logprob": -0.16553450412437565,
        "compression_ratio": 1.6838487972508591,
        "end": 2353.92,
        "id": 349,
        "no_speech_prob": 0.0005357731715776026,
        "seek": 234200,
        "start": 2348.16,
        "temperature": 0,
        "text": " There's actually, oh, there's actually a ring for negative one. That kind of makes sense. Maybe I",
        "tokens": [
          50672,
          821,
          311,
          767,
          11,
          1954,
          11,
          456,
          311,
          767,
          257,
          4875,
          337,
          3671,
          472,
          13,
          663,
          733,
          295,
          1669,
          2020,
          13,
          2704,
          286,
          50960
        ]
      },
      {
        "avg_logprob": -0.16553450412437565,
        "compression_ratio": 1.6838487972508591,
        "end": 2359.12,
        "id": 350,
        "no_speech_prob": 0.0005357731715776026,
        "seek": 234200,
        "start": 2353.92,
        "temperature": 0,
        "text": " should adjust that. I'll leave as an exercise to you to think about how you might visually improve",
        "tokens": [
          50960,
          820,
          4369,
          300,
          13,
          286,
          603,
          1856,
          382,
          364,
          5380,
          281,
          291,
          281,
          519,
          466,
          577,
          291,
          1062,
          19622,
          3470,
          51220
        ]
      },
      {
        "avg_logprob": -0.16553450412437565,
        "compression_ratio": 1.6838487972508591,
        "end": 2364.72,
        "id": 351,
        "no_speech_prob": 0.0005357731715776026,
        "seek": 234200,
        "start": 2359.12,
        "temperature": 0,
        "text": " this. And also I'm looking at this original version right now. And as soon as it gets to the end,",
        "tokens": [
          51220,
          341,
          13,
          400,
          611,
          286,
          478,
          1237,
          412,
          341,
          3380,
          3037,
          558,
          586,
          13,
          400,
          382,
          2321,
          382,
          309,
          2170,
          281,
          264,
          917,
          11,
          51500
        ]
      },
      {
        "avg_logprob": -0.16553450412437565,
        "compression_ratio": 1.6838487972508591,
        "end": 2369.2,
        "id": 352,
        "no_speech_prob": 0.0005357731715776026,
        "seek": 234200,
        "start": 2364.72,
        "temperature": 0,
        "text": " we can speed it up and see what happens. You're going to be very excited to see what happens.",
        "tokens": [
          51500,
          321,
          393,
          3073,
          309,
          493,
          293,
          536,
          437,
          2314,
          13,
          509,
          434,
          516,
          281,
          312,
          588,
          2919,
          281,
          536,
          437,
          2314,
          13,
          51724
        ]
      },
      {
        "avg_logprob": -0.23900499798002697,
        "compression_ratio": 1.4720812182741116,
        "end": 2376.64,
        "id": 353,
        "no_speech_prob": 0.0044682943262159824,
        "seek": 236920,
        "start": 2369.9199999999996,
        "temperature": 0,
        "text": " Oh, wait, the year is also changing color as it's going. We're going to get to the end. Here it comes.",
        "tokens": [
          50400,
          876,
          11,
          1699,
          11,
          264,
          1064,
          307,
          611,
          4473,
          2017,
          382,
          309,
          311,
          516,
          13,
          492,
          434,
          516,
          281,
          483,
          281,
          264,
          917,
          13,
          1692,
          309,
          1487,
          13,
          50736
        ]
      },
      {
        "avg_logprob": -0.23900499798002697,
        "compression_ratio": 1.4720812182741116,
        "end": 2386.64,
        "id": 354,
        "no_speech_prob": 0.0044682943262159824,
        "seek": 236920,
        "start": 2380,
        "temperature": 0,
        "text": " And look at that. All along, the rings were separated by a Z position, and now we see them",
        "tokens": [
          50904,
          400,
          574,
          412,
          300,
          13,
          1057,
          2051,
          11,
          264,
          11136,
          645,
          12005,
          538,
          257,
          1176,
          2535,
          11,
          293,
          586,
          321,
          536,
          552,
          51236
        ]
      },
      {
        "avg_logprob": -0.23900499798002697,
        "compression_ratio": 1.4720812182741116,
        "end": 2394.16,
        "id": 355,
        "no_speech_prob": 0.0044682943262159824,
        "seek": 236920,
        "start": 2386.64,
        "temperature": 0,
        "text": " as this amazing stack. So I would have to do a lot to my code to get there. But I think this is,",
        "tokens": [
          51236,
          382,
          341,
          2243,
          8630,
          13,
          407,
          286,
          576,
          362,
          281,
          360,
          257,
          688,
          281,
          452,
          3089,
          281,
          483,
          456,
          13,
          583,
          286,
          519,
          341,
          307,
          11,
          51612
        ]
      },
      {
        "avg_logprob": -0.16023009163992746,
        "compression_ratio": 1.6524822695035462,
        "end": 2402.08,
        "id": 356,
        "no_speech_prob": 0.012053129263222218,
        "seek": 239416,
        "start": 2394.72,
        "temperature": 0,
        "text": " if I don't say so myself, a decent version of the climate spiral. There are probably",
        "tokens": [
          50392,
          498,
          286,
          500,
          380,
          584,
          370,
          2059,
          11,
          257,
          8681,
          3037,
          295,
          264,
          5659,
          25165,
          13,
          821,
          366,
          1391,
          50760
        ]
      },
      {
        "avg_logprob": -0.16023009163992746,
        "compression_ratio": 1.6524822695035462,
        "end": 2406.7999999999997,
        "id": 357,
        "no_speech_prob": 0.012053129263222218,
        "seek": 239416,
        "start": 2402.08,
        "temperature": 0,
        "text": " imperfections. There are many visual design improvements that you could make, but I wanted",
        "tokens": [
          50760,
          26714,
          626,
          13,
          821,
          366,
          867,
          5056,
          1715,
          13797,
          300,
          291,
          727,
          652,
          11,
          457,
          286,
          1415,
          50996
        ]
      },
      {
        "avg_logprob": -0.16023009163992746,
        "compression_ratio": 1.6524822695035462,
        "end": 2412.72,
        "id": 358,
        "no_speech_prob": 0.012053129263222218,
        "seek": 239416,
        "start": 2406.7999999999997,
        "temperature": 0,
        "text": " to give you a baseline to look at how you would get through this whole story of downloading a data",
        "tokens": [
          50996,
          281,
          976,
          291,
          257,
          20518,
          281,
          574,
          412,
          577,
          291,
          576,
          483,
          807,
          341,
          1379,
          1657,
          295,
          32529,
          257,
          1412,
          51292
        ]
      },
      {
        "avg_logprob": -0.16023009163992746,
        "compression_ratio": 1.6524822695035462,
        "end": 2418.8799999999997,
        "id": 359,
        "no_speech_prob": 0.012053129263222218,
        "seek": 239416,
        "start": 2412.72,
        "temperature": 0,
        "text": " set, parsing that data set, and connecting it to visuals. So now you, if you feel so inclined,",
        "tokens": [
          51292,
          992,
          11,
          21156,
          278,
          300,
          1412,
          992,
          11,
          293,
          11015,
          309,
          281,
          26035,
          13,
          407,
          586,
          291,
          11,
          498,
          291,
          841,
          370,
          28173,
          11,
          51600
        ]
      },
      {
        "avg_logprob": -0.16023009163992746,
        "compression_ratio": 1.6524822695035462,
        "end": 2423.8399999999997,
        "id": 360,
        "no_speech_prob": 0.012053129263222218,
        "seek": 239416,
        "start": 2418.8799999999997,
        "temperature": 0,
        "text": " please take this code, refactor it to make it more organized. Maybe you have a different thought",
        "tokens": [
          51600,
          1767,
          747,
          341,
          3089,
          11,
          1895,
          15104,
          309,
          281,
          652,
          309,
          544,
          9983,
          13,
          2704,
          291,
          362,
          257,
          819,
          1194,
          51848
        ]
      },
      {
        "avg_logprob": -0.16568135785626936,
        "compression_ratio": 1.6452702702702702,
        "end": 2429.44,
        "id": 361,
        "no_speech_prob": 0.0032222382724285126,
        "seek": 242384,
        "start": 2423.84,
        "temperature": 0,
        "text": " beyond just rings. Maybe you want to add the 3D component, change the whole paradigm of how it's",
        "tokens": [
          50364,
          4399,
          445,
          11136,
          13,
          2704,
          291,
          528,
          281,
          909,
          264,
          805,
          35,
          6542,
          11,
          1319,
          264,
          1379,
          24709,
          295,
          577,
          309,
          311,
          50644
        ]
      },
      {
        "avg_logprob": -0.16568135785626936,
        "compression_ratio": 1.6452702702702702,
        "end": 2435.84,
        "id": 362,
        "no_speech_prob": 0.0032222382724285126,
        "seek": 242384,
        "start": 2429.44,
        "temperature": 0,
        "text": " being visualized. Also, I referenced the global sea surface temperatures, which are rising at an",
        "tokens": [
          50644,
          885,
          5056,
          1602,
          13,
          2743,
          11,
          286,
          32734,
          264,
          4338,
          4158,
          3753,
          12633,
          11,
          597,
          366,
          11636,
          412,
          364,
          50964
        ]
      },
      {
        "avg_logprob": -0.16568135785626936,
        "compression_ratio": 1.6452702702702702,
        "end": 2440.96,
        "id": 363,
        "no_speech_prob": 0.0032222382724285126,
        "seek": 242384,
        "start": 2435.84,
        "temperature": 0,
        "text": " alarming rate right now. I will include a link to downloading that data if you want to look at",
        "tokens": [
          50964,
          44043,
          3314,
          558,
          586,
          13,
          286,
          486,
          4090,
          257,
          2113,
          281,
          32529,
          300,
          1412,
          498,
          291,
          528,
          281,
          574,
          412,
          51220
        ]
      },
      {
        "avg_logprob": -0.16568135785626936,
        "compression_ratio": 1.6452702702702702,
        "end": 2446,
        "id": 364,
        "no_speech_prob": 0.0032222382724285126,
        "seek": 242384,
        "start": 2440.96,
        "temperature": 0,
        "text": " visualizing that data. Leave a question or thought in the comments about how I could improve this.",
        "tokens": [
          51220,
          5056,
          3319,
          300,
          1412,
          13,
          9825,
          257,
          1168,
          420,
          1194,
          294,
          264,
          3053,
          466,
          577,
          286,
          727,
          3470,
          341,
          13,
          51472
        ]
      },
      {
        "avg_logprob": -0.16568135785626936,
        "compression_ratio": 1.6452702702702702,
        "end": 2451.6000000000004,
        "id": 365,
        "no_speech_prob": 0.0032222382724285126,
        "seek": 242384,
        "start": 2446,
        "temperature": 0,
        "text": " I hope you enjoyed this coding challenge and that you spend some time enjoying nature and the earth",
        "tokens": [
          51472,
          286,
          1454,
          291,
          4626,
          341,
          17720,
          3430,
          293,
          300,
          291,
          3496,
          512,
          565,
          9929,
          3687,
          293,
          264,
          4120,
          51752
        ]
      },
      {
        "avg_logprob": -0.3447173291986639,
        "compression_ratio": 1.0129870129870129,
        "end": 2466.64,
        "id": 366,
        "no_speech_prob": 0.009857119992375374,
        "seek": 245160,
        "start": 2451.6,
        "temperature": 0,
        "text": " today, which is what I'm going to do right now after I blow the train whistle.",
        "tokens": [
          50364,
          965,
          11,
          597,
          307,
          437,
          286,
          478,
          516,
          281,
          360,
          558,
          586,
          934,
          286,
          6327,
          264,
          3847,
          23470,
          13,
          51116
        ]
      }
    ],
    "transcription": " Hello, welcome to a special Coding Train Earth Day coding challenge. So today I'm going to attempt to make my own version, a p5.js version, of the climate spiral. This is a visualization designed by climate scientist Ed Hawkins from the University of Reading. So take a look at Ed Hawkins's website, many other data sets and visualizations of those data sets all around climate. So in the spiral, what you are seeing are monthly global temperature anomalies starting with the year 1880 all the way up to 2022. So what is a temperature anomaly? It's a fancy way of saying a change, a difference, a deviation from a long-term global average. So what's a long-term global average? Well, we need to pick something. So for this climate spiral, the period from 1951 to 1980 is used. So that 30 year, approximately 30 year period, the global surface temperature for those years is used as a baseline. Anything else you're seeing is relative to that baseline. So in the years prior, you probably see a lot of whites and blues, which are showing cooler temperatures, lower than that baseline. And as the years go on, the oranges and reds in the visualization show warmer temperatures, global warming. The temperatures themselves, the data set is from the NASA Goddard Institute for Space Studies Surface Temperature Analysis. They publish an estimate of global surface temperature change. And what I want to do here in this coding challenge, A, is show you how to download and parse a data set using p5.js. And by recreating that climate spiral, it's giving us an example visualization that communicates and tells a story about a particular data set. Now, there are many other data sets around climate. One that you might take a look at right now is the average temperature of the ocean's surface. Preliminary data from the National Oceanic and Atmospheric Administration, or NOAA, recently showed that the average temperature at the ocean's surface has been at 21.1 Celsius since the start of April, which is beating the previous high of 21 degrees Celsius set in 2016, a very alarming change. The data is clear. The earth is warming. Helping people to see that and communicate around that data is absolutely a challenge. I hope that this video might give you the tools to start thinking about that. And maybe you'll be inspired to create your own data visualization around climate. All right. So first stop is the NASA website. Here we've got an explanation all about the GISS surface temperature analysis. You can see the latest update here, March 15th, 2023. Scrolling down, I've got the various data sets that I can download. And I'm going to use the global mean monthly, seasonal, and annual means, 1880 to the present. Now, there are two formats here, TXT and CSV. My assumption is the TXT is a tab delimited, meaning the data points in the file are separated by tabs. And the CSV is a comma separated values, or the data points are separated by commas. I could use either in P5, but I generally have an easier time working with CSVs. So let's download that file. I can take a quick peek at it just with Mac preview. And there we go. Every year, every month, and the variation from the baseline average temperature. Let's open the file in Visual Studio Code. This way we can see it without the Mac preview formatting. First thing I want to do, I think, is remove that first row. It's important. It says what it is, land, ocean, global means. But I don't want to have to parse that in P5. I do want the second row there, though, because those are the column headings for the data. All right. So the next step would be to bring this file into P5. But I do want to say, again, whenever you're working with a data set, you want to take the time to read the documentation about how the data was collected, who collected it, and what type of analysis and various other types of things were done in preparation and publication of that data. I'll be sure to link to both the 2010 and 2019 publications that give more background and info around the data collection and analysis process. The other thing I want to do just to make my life a little easier is rename the file. I'll call it GISS data. And I'm going to say April 11, 2023 in the file name, just as a note to self of when I downloaded it. Now here I am in the P5 web editor. I can upload that data file to use with my sketch. Open up the file browsing menu, click upload file, and drag the CSV in. I can also click on it and see that raw data here in the P5 web editor as well. There's also an excellent FAQ page, which covers a lot of the questions that you might have around this data set, starting with why it's important to look at a variation from a baseline. Why are we looking at an anomaly versus the absolute temperatures themselves? All right, how am I going to get the CSV into my P5 code? So it just so happens there's a wonderful function in P5 called load table. And this function takes a file name to load into a table object. The load table function does all of the string parsing for you. So it figures out that the first row are column headers. It knows where the commas are, and it's going to allow us to parse through and run through that data much more easily. And to figure out all the different kinds of things we can do with the table that we've loaded, we need to look at the P5 table documentation. So the table has baked into it an array called columns, which has all the names of the columns, as well as an array of all the rows. So each individual row of data is stored as its own object. So in our data set, I think the columns are something like the year and then the name of the months. And then each row is a row of data for any given year. So I'm going to want to figure out how to write some kind of for loop where I can look at every single row one at a time, and then iterate over all of the months. Now in calling load table, I also want to give it not just the file name, but a string that says what file format, in this case, CSV, and another string with the keyword header in it, which will indicate that there is in fact, a single row that has column headers. So now I have everything loaded into a variable called data. And I'm using the preload function in p5 so that it's ready by the time I get to set up. Now I want to make sure the data seems all right. So a couple things I could do one is let me look at get column count and get row count just to see that I have everything there. So I have 146 rows, but only one column, I forgot what I said before that I need to do, which is to additionally give it the format and the fact that there is a header. Aha. So by telling it the format, it now knows that there are 19 columns that fixes that. And then let me also make sure it knows that there's a header row. Now it knows that there's only 144 rows, because that first one is just the headers. Now, generally speaking, when I'm working on a project like this, I might use a temporary smaller amount of data, like just a file that has the first five rows. And I also very much want to make sure that I'm looking at the first five rows of data, as well as the last five rows to make sure things look copacetic. And I can see here that when I get to 2023, I'm only going to want to take January and February. So I'm going to need to build something into the code that knows to ignore the stars or knows where I need to end when I'm doing the visualization or analysis. But I'm not really going to take my advice here right now, I'm just going to dive in and see what I can get to work in the code itself with the full data file. Let's try examining just the first row of data. The get row function gives me any given row from the data set, zero being that first row. Now I can look at the p5 table row object and see what kind of functions I can call there. Set, set num, set string, get, get num, get string. Okay, what do I want to do? Maybe I want to just get the year and the January temperature anomaly. Great. So we can see that from the row, I can pull out a piece of data using the get function. So the get function is probably going to always give me back the data as a string as text. And since I do want the temperature to be a number, I will switch this one to get num. And you can even see in the console now it's a different color because it's logging it as a number as a floating point number rather than as raw text. All right, I think I understand what I need to do. Because I'm going to need to go through every year and draw a spiral based on those values. All right, so using Ed Hawkins's website as a basis, let me see if I can even just set up the months and the various temperature indicators as a baseline, as a sort of background before I draw the spiral over top of it. I'm going to translate to put zero, zero in the middle. All right, I'm picking arbitrary numbers right now. We can finesse it later, but let's use a diameter of 100 for zero degrees. Or did we get the data in Celsius? All right, looking at the TXT version of the same data I downloaded, it specifically says Celsius at the top. So I'm working with Celsius. So now I have a circle to show for zero degrees and one to show for one degree. I think I'm going to need a bigger canvas. And I need one more circle to put the month labels around. All right, so I'm going to use a diameter of 100. Bigger canvas. And I need one more circle to put the month labels around. So putting the month labels will be a little tricky, but thank goodness for all of the videos I've made over the years that use the concept of polar coordinates. I'll give you a quick primer here, but I will link to many, many videos where I've covered this in great depth. So if this is my P5 canvas and I'm considering the center to be zero, zero based on that call to translate that I did, then normally whenever I talk about a point, I'm going to talk about its X, Y position. But if I want to describe a set of points that are following a radial path around that center, I'm going to want to talk about them in terms of their radius and angle relative to the horizontal axis. The distance from the center radius, that angle using the Greek letter theta is a common way to notate it. So if I want to place the month January over here, maybe that's an angle of 60 degrees with a certain distance from the center. But I actually need to know the X, Y to be able to draw it in P5. And the formula for doing that, which I derived in other videos, is X equals R times cosine of that angle, and Y equals R times sine of that angle. I realized I could also just use translate and rotate. Maybe that would make more sense. It's always a question of whether you want to calculate and do the math yourself or use transformations in P5. And by the way, I also have videos around transformations in P5. I'm going to think about this as I walk back over there. And by the time I get there, I'll have picked one method of doing this. All right, I'm going to use polar coordinates, because that's really what I'm going to need when I start doing the spiral of temperatures themselves. But as an exercise, you might try placing all the labels without polar coordinates and just use translate and rotate. I also want to get the labels from the CSV file itself. So let me make a array called months. Well, it'll just be a variable called months. And I'm going to say months equals data.columns. Let's just see. Console.log months. I'm going to take out these console logs. Okay, so that's giving me an array with those in it. It does have year in it. So why don't I make a copy of it with.slice and then months.splice. Let me take out that first element. Splice is a function where you remove an element from an array. So now I have an array with all the months in it. And let's start the first one at the top, which would be 0, negative 250. So all the months are being drawn right on top of each other. So I need to start moving them according to polar coordinates. So I need to map I, which is counting through the array, which goes from 0 to the number of months, to an angle. And if it's relative to the horizontal axis, the top is going to be negative pi divided by 2, which is radians for negative 90 degrees. I think this is going to be easier to work out if we just think of it from 0 to 360 degrees or 0 to 2 pi, and then I'll shift it if I need to. And also, I just realized that I don't need to use slice and then splice. So if you were shouting at the screen earlier, I'm now going to fix that. I could just actually say slice and give it 1, which will give me a copy of the array, starting with the second element or index 1. So now x is 250 times cosine of the angle, and y is 250 times sine of the angle. Oh, look at that! Oh, look at that! So I'm not paying attention to the details of my data set. There's actually 18 column headers, but there's not 18 months. So why don't I say from 1 to 13? That's going to give me all 12 months. And you can see it's working, but January is off to the right. So let's just say that angle is everything minus pi divided by 2. Whoops, not there, not the map, after minus pi divided by 2. And in the original version, December is at the top, so let's actually make that happen. How would I do that? All right, so there's probably some clever ways that I could do this, but how about I just type out the months in the order that I want them? And actually, in that sense, I don't need to do this shift, because I just want to have March be the first one. Oh, they don't line up at the top. Wait, March, June, July. Oh, I've left out September. All right, so mine doesn't look exactly, but oh, oh no, I forgot February. No wonder. There we go, everybody. We got to get all 12 months in, people. I'm just checking to see if you're paying attention, that's all. Something that also might be nice is I can rotate the text to line up with that circle. There we go. We now have a base pattern for the climate spiral. Okay, it's time for some data. Let's start by drawing one ring for one year. So remember, I can get the first row with getRowIndex zero. Then what I want to do is use my months array to get the anomaly value for every single month. Let's add no loop and console.log that just to see that it works. P5 is telling me there is a reserved word value, so I'll change that to anomaly. And I also could look at the year. And the original design put the year in the center, so let's draw it there. So now I just need a way to draw the spiral. And in fact, I can use the same exact polar coordinate math to place a data point around this radial path in the same way that I did the months. Now I need to remember that 90 degree offset because I'm starting from the top. And let's try to place the points along the zero degrees right now. Okay, so you can see what I've done is in the same way I placed all the months around the outer ring, I've now placed a dot around the inner ring that is where zero degrees, that base pattern for the climate spiral is. And I can now use that to get the anomaly value for every single degrees that baseline temperature is indicated. So something I should really do here, when I was setting this layout initially, I just hard-coded a lot of values. But now it's very important that I know that zero degrees means 50 pixels from the center, and one degree means 100 pixels from the center, 150 pixels from the center. So let's set up some global variables. I'll call it the zero radius and the one radius. Maybe the distance between the center and zero needs to be equal to the distance between zero and one. So how about 75 and 150? So zero degrees is at zero radius, plus some offset for the text, maybe 10 pixels. This one degrees is at one radius. Then I need to size those circles correctly. And now the x and y positions of these dots are going to be mapped to the actual data. So to figure out what values need to go in the map function, I just need to look at what are the pixel values associated with specific degree values. Zero degrees and one degree are associated with pixel 75 and 150. It's important to note that the map function is really special. You don't have to know the specific minimum and maximum of your range. You just need to establish some corresponding values between two ranges, which I have right here. So even if I have negative values, it's going to figure out where to place those correctly below pixel 75 and values that are greater than one degree beyond pixel 150. So those are all the values for 1880. If I pick a different year, like row 50, which is 1930, those are the values. 1980, and so 2020 would be row 140. Great. So I believe that this mapping is now accurate. But I'm not just looking to place dots, I'm looking to connect everything with a spiral pattern. So I'm going to add begin shape and end shape. I'm gonna say no fill, stroke 255. And instead of a circle, I'm going to set a vertex. And right now I'm going to put close so that it connects the last point to the new point. So what should I do next? Let's see if we can add another loop to loop through every single row, every year, all at once. Get row count is going to give me the total number of rows. So now I have an outer loop going through every row. Let me bring this in. So now instead of hard coding row 140 for the year 2020, I can put in j. Undefined. Let's simplify things for a moment by not drawing the year because I might need to do that in a different way. This is maybe the most unhelpful error message I've ever seen. My suspicion is there might be some elements of the data set that are actually null or empty. We saw those asterisks, and that could be messing things up. Let's see if we can debug this. Let's put in a console log for the anomaly. All right, let's try doing just two years. That worked. Three, four, 100. All right, so I must be right. It must be getting to some point in the data where there is no anomaly reading. And I can see that that happens right there at the end of the data set where the asterisks appear. A quick scan, I see some asterisks up here, but that's additional data that I'm not using. So I think we're okay. I wonder if the getNum will give me undefined. So let me just see if anomaly is not equal to undefined. What if I don't use getNum, but instead just use get? Oh, wow, it's able to interpret it as a number even with just get. That's interesting. I was going to say then I could check to make sure it's not a star, star, star. And then I thought what I would need to do is say anomaly equals number anomaly. But that doesn't seem to be necessary. So I'll just leave that commented out. Sometimes JavaScript is just such a friendly place to be. It's like, I don't know if it's a string, but you want to use it as a number. I'll just figure out. I kind of get what you want and I'll make it work. So look, I think we just drew the entire climate spiral there. A couple things. I think it would make more sense to expand the range so we don't have a lot of values beyond one degree. So maybe I should increase that radius. Now, weirdly, it didn't change. Did I hard code the numbers in the map function? I did. I did, didn't I? Okay. I like this a little bit better. It just gives me a little bit more space to work with. I'm just checking again to see if you're paying attention. I'm pretty sure I misspelled anomaly. Yeah, I did. It's with an A. Oh, and I definitely don't want close anymore. Do I want to connect the end of the previous year to the next one? I guess that makes sense. As long as I don't have close at the end. Why are there so many lines going across the center though? That's a little bit weird. Should I work on animating at first or adding color? Maybe I should animate this first because that's going to help us see that this is working and it's doing what I want it to do. So right now, the code has two for loops, one loop to go through every single row and one loop to go through every single month. Let's start by doing the years one at a time. So I think a better name for this variable would be current row. Then we get rid of this outer loop. In fact, I'm just going to delete it. And then the row is the current row. So that's that first row, 1880. I can get rid of no loop, and I can start to increase the row. Ah, okay. So I'm seeing each year one at a time. Eventually, I get to the end and it's an error. And I just realized that I'm not seeing the previous one. So maybe what I should actually do, well, there's so many different ways I could approach this. I could just draw the base background and then let the different years build up. But because it's not a lot to draw, just give me full flexibility. I do want to put that loop back in. So the row I want to get is J, but I only want to iterate from zero all the way up to that current row. So we can see them layering very quickly because I'm doing remember the whole year all at once. Let's see if we can do one month at a time. So now I need a current month. And this loop should be just all the way up to the current month. So first, let me fix it so that when it gets to the end, it doesn't just crash. Current row equals current row plus one. If current row equals data.getRowCount, then no loop. That'll stop it. Great. That worked. What happened to the months? Oh, I put current month there. That's the wrong place. I put current month in drawing the months. I want to see all the months. No wonder that didn't work. I want to do current months here. So every frame, current month should go up by one. If current month gets to the end, that's when the row increases. Count up all the months. Oh, and then the month has to go back to zero. Well, it's like a little weird radar thing. Clearly I have my begin shape and end shape in the wrong place. Let me slow down the frame rate. Oh, no, no, no, no, no, no, no, no, no, no, no. Okay. The current month is only the current month for the current year. So basically, if j is less than current row minus one, then let total months, well, I could just say total months is always the length of the array. But if j is the last one, current row minus one, total months equals the current month. And then I'm iterating to the total months. That's probably a better way to do this. Let's try that again now. There we go. That's what I wanted to see. Okay. I think things are good now. I would like to move the zero further out to leave more space in the middle because the negative numbers are getting very, very close. I can up the frame rate now. I'm going to move zero even further out. I'm also going to make the text alignment uniform for everything and just put text align center at the beginning of draw. All right. I want to put what year we're currently on in the center. Let's make that year a little bit bigger. Oh, no. There's another big mistake here, which is that the values are starting from the bottom because my angle is offset by pi over two. So it should start at the top. Only it really starts at January. The first data point is January. So it's minus pi divided by two plus pi divided by three. Oh, dear. I'm going to have to do a little bit of math here. Pi divided by three. Oh, dear. Minus pi divided by three. Yeah, that's right. Okay. So I did this in a terrible way. And I'll leave that as an exercise to the viewer to refactor this, if you will, to be a little bit more consistent about how I'm drawing and reading the data. But I do have everything I believe aligned correctly right now. And I can add color. So I want to do something similar. In the same way I'm mapping the distance from the center to that anomaly value, I want to map color. Maybe zero degrees is white and anything less than that is a blue tone and greater than that is a red tone. Will lerp color work for me? Oh, but the line segments. Hmm. So this is tricky. I think I have to draw these as individual line segments now to change their color. I think I have to manually connect these. I'm going to slow down the frame rate here. So I just noticed that with a frame rate of one, I have to wait for like a whole empty year because my current row is zero, which isn't actually the current row. It's the current row cutoff, which should really be one to start. And I guess I could do the same thing with month. So for me to draw color, I need to draw each one of those lines individually. So I can no longer use begin shape and end shape. Instead, I need to have the previous anomaly. So let me make a variable, call it previous anomaly. R is the current anomaly. And PR is mapping the previous anomaly. Then I need X1, Y1, and X2, Y2. Draw a line between both of them. This is interesting. What do I have here? Oh, because previous anomaly is always zero. So as soon as I get the new anomaly, no, right before I get the new anomaly, no, no, right after. Okay. So after I do this, so I just need to save the previous one. Oh, but they need the previous angle. But I could calculate that. Is it silly? Because I could just look up what was before, but maybe it's helpful to store it because then I don't have to deal with like the endpoints. You're really going to make this better after you watch this, aren't you? Please. Okay. Let's see here. Oh, I don't have the angle? Sure. Let's put this inside the if statement. There's no reason to save the anomaly if it's bad data. Uh-oh. This is very strange. Why is there an extra line? I guess it's very silly to just store the previous one. I know that they're all offset by 30 degrees or pi divided by six. Oh, no, the previous one is minus. I can't do this for the first value. As long as it's not the very first. Okay. This is working correctly. But I'm going to have a Boolean variable that says first value is false. And as long as it's not the first value, draw the line and then say first value is true. Oh, it's false. No, first value is true. This is the first value. So don't draw the line. There we go. I'm really making a mess of this. I think this is correct now. I'm drawing them as separate line segments. Let's get rid of this previous angle concept. I don't need that. Let me up the frame rate so we can kind of I still want to be able to watch it somewhat slowly. Think it's working. Let's max out the frame rate. I just want to see what happens at the end. All right. Didn't get an error. I'm not entirely sure. It was hard for me to see if it ended properly because I don't have any color differences to help me understand visually what's going on. But I think it's all all right. I think I can finally add color, right? If I just insert a stroke here, like, for example, with red. Now all of the lines are red. Obviously, if I add some blue, they're all going to be pink and I can put any color in here I want and I'm going to see that color. But if we look back at the original reference visualization, the colder anomalies less than zero had blue tones. The warmer anomalies greater than zero had red tones. Let's use the whiteboard for a second to map this out. So we have an anomaly. Let's just say for the sake of argument that the anomaly is somewhere between negative one degrees and positive one degree with zero degrees being in the center. And I want to have a color that's red over here. And I want to have a color that is blue over here. So if I ever have a scenario like this, the thing that I always think about is linear interpolation or LERP. The idea of LERP is I have some minimum value and some maximum value or they don't, it doesn't actually have to be lower and bigger, but I have some starting value and ending value. And I want to interpolate between them as if from 0% maybe to a hundred percent. So the LERP function in P5 typically takes three arguments, A, B, and an amount. The amount being a value between zero and one, this corresponding to A, and this corresponding to B. There is in fact in P5 LERP color. So LERP color will do exactly the same thing as LERP. It will just LERP the R value, the G value, and the B value all by the same amount. So in essence, I could just use the anomaly value as the amount. That wouldn't work exactly though, because the amount should be between zero and one and my anomalies are positive and negative. Also, if I look back at the original climate spiral, the one that Ed Hawkins made, at zero, the color is actually white. So I think what I want to do is have two LERPs. I want to have a LERP for any negative values that goes from red to white and a LERP for any positive values that goes from white to blue. Let's see how that goes. So in the code, I need three colors. Cold, which I'll just arbitrarily set to pure blue. I mean, we could be more thoughtful about the color palette, but I'm not going to be. Warm, which should be red. And then I'm just going to call it zero. Maybe there's a better variable name, but they'll have four letters and I love how they line up like that. So zero will be just pure white. Then my LERP should happen between cold and zero or zero and warm, depending on if the average anomaly is positive or negative. So if average is less than zero, my color, oh, so I need a default color. I'll just call it line color. Well, it'll be white if something goes wrong. But if average is less than zero, then the line color will LERP from cold to zero. The bigger the average is all the way to zero. Oh, wait, wait, wait, wait, wait. But average is a negative value. Zero to 100 percent. Zero to 100 percent, just flip the negative to a positive. So zero all the way to cold based on the absolute value of that average value. Stroke line color. Average is not defined. Oh, I have to make the average. I want the average of the anomaly. If it's a line segment, I have two values. I want the color to be the average of those two values. So I do need to calculate that. Oh, no. Oh, no. We've got a problem. A few different issues. One is I'm not using LERP. I'm using LERP color. The regular LERP is going to fail, but this also isn't working. And I think I know what the problem is. Remember a while ago when I was saying how JavaScript is just so friendly to us, it's going to figure it out. Sometimes JavaScript is just such a friendly place to be. It's like, I don't know if it's a string, but you want to use it as a number. I'll just figure out. I kind of get what you want and I'll make it work. This averaging of the two values is actually concatenating the string. So I really do need to convert that to a number. And this, I think parse float might make more sense. Doesn't really matter. Those are same parse float is a function that will take a string and parse it into a floating point. So you can see it's working now. So I should be able to then say, if the average is now greater than zero, go between zero and the warm value. And let's have this go up by more than just one month at a time so I can see it happening faster. How about four months at a time? Oh, because I'm checking if it's equal and current month starts at zero. So the one, so current month, these started at zero for it to, for four to be divisible into 12. Okay. This is looking pretty good. Now it's a lot more red than blue, but that's simply because of the, the mappings are equivalent and we're not getting as far to negative one as we are. We didn't, we don't start, we don't have a lot of cooler temperatures than the baseline, but boy, is the earth getting warmer, which is actually showing. Now design-wise, I'm sure there could be quite a few improvements here. You can see some of those layout improvements. There's actually, oh, there's actually a ring for negative one. That kind of makes sense. Maybe I should adjust that. I'll leave as an exercise to you to think about how you might visually improve this. And also I'm looking at this original version right now. And as soon as it gets to the end, we can speed it up and see what happens. You're going to be very excited to see what happens. Oh, wait, the year is also changing color as it's going. We're going to get to the end. Here it comes. And look at that. All along, the rings were separated by a Z position, and now we see them as this amazing stack. So I would have to do a lot to my code to get there. But I think this is, if I don't say so myself, a decent version of the climate spiral. There are probably imperfections. There are many visual design improvements that you could make, but I wanted to give you a baseline to look at how you would get through this whole story of downloading a data set, parsing that data set, and connecting it to visuals. So now you, if you feel so inclined, please take this code, refactor it to make it more organized. Maybe you have a different thought beyond just rings. Maybe you want to add the 3D component, change the whole paradigm of how it's being visualized. Also, I referenced the global sea surface temperatures, which are rising at an alarming rate right now. I will include a link to downloading that data if you want to look at visualizing that data. Leave a question or thought in the comments about how I could improve this. I hope you enjoyed this coding challenge and that you spend some time enjoying nature and the earth today, which is what I'm going to do right now after I blow the train whistle.",
    "translation": null
  },
  "error": null,
  "status": "succeeded",
  "created_at": "2023-09-26T21:03:53.530594Z",
  "started_at": "2023-09-26T21:20:36.608742Z",
  "completed_at": "2023-09-26T21:30:24.279642Z",
  "webhook": "https://83ceaa0b612c.ngrok.app/?video_id=rVBTxnRyOuE",
  "webhook_events_filter": [
    "completed"
  ],
  "metrics": {
    "predict_time": 587.6709
  },
  "urls": {
    "cancel": "https://api.replicate.com/v1/predictions/j6kl5yrboja22ga25rwf253bum/cancel",
    "get": "https://api.replicate.com/v1/predictions/j6kl5yrboja22ga25rwf253bum"
  }
}