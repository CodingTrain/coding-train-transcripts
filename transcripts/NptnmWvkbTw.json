{
  "id": "hfkom4bbr5buxwc62kch7q5nm4",
  "version": "91ee9c0c3df30478510ff8c8a3a545add1ad0259ad3a9f78fba57fbc05ee64f7",
  "input": {
    "audio": "https://upcdn.io/FW25b4F/raw/coding-train/NptnmWvkbTw.m4a"
  },
  "logs": "Transcribe with large-v2 model\nDetected language: English\n  0%|          | 0/42859 [00:00<?, ?frames/s]\n  6%|▌         | 2500/42859 [00:06<01:45, 383.16frames/s]\n 12%|█▏        | 5200/42859 [00:15<01:53, 330.70frames/s]\n 17%|█▋        | 7500/42859 [00:23<01:55, 305.01frames/s]\n 23%|██▎       | 10000/42859 [00:31<01:44, 314.32frames/s]\n 29%|██▉       | 12400/42859 [00:38<01:36, 316.09frames/s]\n 34%|███▍      | 14600/42859 [00:46<01:30, 310.67frames/s]\n 40%|████      | 17300/42859 [00:55<01:24, 302.91frames/s]\n 46%|████▌     | 19600/42859 [01:02<01:13, 316.41frames/s]\n 52%|█████▏    | 22200/42859 [01:08<01:01, 337.99frames/s]\n 58%|█████▊    | 24900/42859 [01:15<00:51, 350.36frames/s]\n 64%|██████▍   | 27400/42859 [01:22<00:42, 363.96frames/s]\n 69%|██████▉   | 29600/42859 [01:29<00:38, 341.48frames/s]\n 75%|███████▍  | 32100/42859 [01:35<00:29, 362.98frames/s]\n 81%|████████  | 34700/42859 [01:41<00:21, 375.34frames/s]\n 88%|████████▊ | 37600/42859 [01:50<00:14, 365.39frames/s]\n 93%|█████████▎| 40000/42859 [01:57<00:08, 352.90frames/s]\n100%|██████████| 42859/42859 [02:06<00:00, 340.76frames/s]\n100%|██████████| 42859/42859 [02:06<00:00, 338.58frames/s]\n",
  "output": {
    "detected_language": "english",
    "segments": [
      {
        "avg_logprob": -0.29798922695956387,
        "compression_ratio": 1.6527777777777777,
        "end": 10.4,
        "id": 0,
        "no_speech_prob": 0.22168394923210144,
        "seek": 0,
        "start": 0,
        "temperature": 0,
        "text": " Hello and welcome. Here we are. This is a video about an array. This video is only going to answer two questions.",
        "tokens": [
          50364,
          2425,
          293,
          2928,
          13,
          1692,
          321,
          366,
          13,
          639,
          307,
          257,
          960,
          466,
          364,
          10225,
          13,
          639,
          960,
          307,
          787,
          516,
          281,
          1867,
          732,
          1651,
          13,
          50884
        ]
      },
      {
        "avg_logprob": -0.29798922695956387,
        "compression_ratio": 1.6527777777777777,
        "end": 17,
        "id": 1,
        "no_speech_prob": 0.22168394923210144,
        "seek": 0,
        "start": 10.4,
        "temperature": 0,
        "text": " What is an array and why do we need an array? This is quite an exciting moment, I hope. It is for me, I hope it is for you.",
        "tokens": [
          50884,
          708,
          307,
          364,
          10225,
          293,
          983,
          360,
          321,
          643,
          364,
          10225,
          30,
          639,
          307,
          1596,
          364,
          4670,
          1623,
          11,
          286,
          1454,
          13,
          467,
          307,
          337,
          385,
          11,
          286,
          1454,
          309,
          307,
          337,
          291,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.29798922695956387,
        "compression_ratio": 1.6527777777777777,
        "end": 25,
        "id": 2,
        "no_speech_prob": 0.22168394923210144,
        "seek": 0,
        "start": 17,
        "temperature": 0,
        "text": " Because where are we in our journey through programming? We are now at the very end of the fundamentals of programming.",
        "tokens": [
          51214,
          1436,
          689,
          366,
          321,
          294,
          527,
          4671,
          807,
          9410,
          30,
          492,
          366,
          586,
          412,
          264,
          588,
          917,
          295,
          264,
          29505,
          295,
          9410,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.24361729020831965,
        "compression_ratio": 1.9426523297491038,
        "end": 33,
        "id": 3,
        "no_speech_prob": 0.28428515791893005,
        "seek": 2500,
        "start": 25,
        "temperature": 0,
        "text": " We have done variables, we have done conditionals, we have done loops, objects, functions, I should have said functions, objects, but whatever, functions, objects.",
        "tokens": [
          50364,
          492,
          362,
          1096,
          9102,
          11,
          321,
          362,
          1096,
          4188,
          1124,
          11,
          321,
          362,
          1096,
          16121,
          11,
          6565,
          11,
          6828,
          11,
          286,
          820,
          362,
          848,
          6828,
          11,
          6565,
          11,
          457,
          2035,
          11,
          6828,
          11,
          6565,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.24361729020831965,
        "compression_ratio": 1.9426523297491038,
        "end": 44,
        "id": 4,
        "no_speech_prob": 0.28428515791893005,
        "seek": 2500,
        "start": 33,
        "temperature": 0,
        "text": " And now we are at this last piece of the puzzle, the array. Once we get through this last piece of the puzzle, we can move on and start to explore all sorts of interesting and exciting applications of these ideas in different directions.",
        "tokens": [
          50764,
          400,
          586,
          321,
          366,
          412,
          341,
          1036,
          2522,
          295,
          264,
          12805,
          11,
          264,
          10225,
          13,
          3443,
          321,
          483,
          807,
          341,
          1036,
          2522,
          295,
          264,
          12805,
          11,
          321,
          393,
          1286,
          322,
          293,
          722,
          281,
          6839,
          439,
          7527,
          295,
          1880,
          293,
          4670,
          5821,
          295,
          613,
          3487,
          294,
          819,
          11095,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.24361729020831965,
        "compression_ratio": 1.9426523297491038,
        "end": 52,
        "id": 5,
        "no_speech_prob": 0.28428515791893005,
        "seek": 2500,
        "start": 44,
        "temperature": 0,
        "text": " And I hope to make more videos and point you towards more videos and content and exciting adventures that you may or may not choose to have.",
        "tokens": [
          51314,
          400,
          286,
          1454,
          281,
          652,
          544,
          2145,
          293,
          935,
          291,
          3030,
          544,
          2145,
          293,
          2701,
          293,
          4670,
          20905,
          300,
          291,
          815,
          420,
          815,
          406,
          2826,
          281,
          362,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.22793028647439523,
        "compression_ratio": 1.6091954022988506,
        "end": 63,
        "id": 6,
        "no_speech_prob": 0.5425645112991333,
        "seek": 5200,
        "start": 52,
        "temperature": 0,
        "text": " So, but, all I want to do here is talk about an array. Now, I'm going to say, if you remember where we last left off, truth of the matter is, I left this off like a year ago.",
        "tokens": [
          50364,
          407,
          11,
          457,
          11,
          439,
          286,
          528,
          281,
          360,
          510,
          307,
          751,
          466,
          364,
          10225,
          13,
          823,
          11,
          286,
          478,
          516,
          281,
          584,
          11,
          498,
          291,
          1604,
          689,
          321,
          1036,
          1411,
          766,
          11,
          3494,
          295,
          264,
          1871,
          307,
          11,
          286,
          1411,
          341,
          766,
          411,
          257,
          1064,
          2057,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.22793028647439523,
        "compression_ratio": 1.6091954022988506,
        "end": 68,
        "id": 7,
        "no_speech_prob": 0.5425645112991333,
        "seek": 5200,
        "start": 63,
        "temperature": 0,
        "text": " I'm kind of filling in a video that the audio had some problems in, so I'm trying to keep continuity as best as possible.",
        "tokens": [
          50914,
          286,
          478,
          733,
          295,
          10623,
          294,
          257,
          960,
          300,
          264,
          6278,
          632,
          512,
          2740,
          294,
          11,
          370,
          286,
          478,
          1382,
          281,
          1066,
          23807,
          382,
          1151,
          382,
          1944,
          13,
          51164
        ]
      },
      {
        "avg_logprob": -0.22793028647439523,
        "compression_ratio": 1.6091954022988506,
        "end": 75,
        "id": 8,
        "no_speech_prob": 0.5425645112991333,
        "seek": 5200,
        "start": 68,
        "temperature": 0,
        "text": " I do have more grey hair and I forgot to trim this beard, so anyway, I'm wearing a different shirt, but you know, whatever.",
        "tokens": [
          51164,
          286,
          360,
          362,
          544,
          16578,
          2578,
          293,
          286,
          5298,
          281,
          10445,
          341,
          17455,
          11,
          370,
          4033,
          11,
          286,
          478,
          4769,
          257,
          819,
          8336,
          11,
          457,
          291,
          458,
          11,
          2035,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.23573943010465367,
        "compression_ratio": 1.6936026936026936,
        "end": 82,
        "id": 9,
        "no_speech_prob": 0.9271315932273865,
        "seek": 7500,
        "start": 75,
        "temperature": 0,
        "text": " You'll figure it out. If it's a problem for you, you will email me and slip a note somewhere, handwritten in some box somewhere.",
        "tokens": [
          50364,
          509,
          603,
          2573,
          309,
          484,
          13,
          759,
          309,
          311,
          257,
          1154,
          337,
          291,
          11,
          291,
          486,
          3796,
          385,
          293,
          11140,
          257,
          3637,
          4079,
          11,
          1011,
          26859,
          294,
          512,
          2424,
          4079,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.23573943010465367,
        "compression_ratio": 1.6936026936026936,
        "end": 89,
        "id": 10,
        "no_speech_prob": 0.9271315932273865,
        "seek": 7500,
        "start": 82,
        "temperature": 0,
        "text": " Okay, so, here we are. This is where you last left off if you were watching videos. This is where I last left off. My memory serves me.",
        "tokens": [
          50714,
          1033,
          11,
          370,
          11,
          510,
          321,
          366,
          13,
          639,
          307,
          689,
          291,
          1036,
          1411,
          766,
          498,
          291,
          645,
          1976,
          2145,
          13,
          639,
          307,
          689,
          286,
          1036,
          1411,
          766,
          13,
          1222,
          4675,
          13451,
          385,
          13,
          51064
        ]
      },
      {
        "avg_logprob": -0.23573943010465367,
        "compression_ratio": 1.6936026936026936,
        "end": 94,
        "id": 11,
        "no_speech_prob": 0.9271315932273865,
        "seek": 7500,
        "start": 89,
        "temperature": 0,
        "text": " We have this beautiful, lovely, little, nice program. What did it have? It has two bubble objects.",
        "tokens": [
          51064,
          492,
          362,
          341,
          2238,
          11,
          7496,
          11,
          707,
          11,
          1481,
          1461,
          13,
          708,
          630,
          309,
          362,
          30,
          467,
          575,
          732,
          12212,
          6565,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.23573943010465367,
        "compression_ratio": 1.6936026936026936,
        "end": 100,
        "id": 12,
        "no_speech_prob": 0.9271315932273865,
        "seek": 7500,
        "start": 94,
        "temperature": 0,
        "text": " Those two bubble objects are initialized here in setup. Some functions are called to them and they're floating up to the top of the screen.",
        "tokens": [
          51314,
          3950,
          732,
          12212,
          6565,
          366,
          5883,
          1602,
          510,
          294,
          8657,
          13,
          2188,
          6828,
          366,
          1219,
          281,
          552,
          293,
          436,
          434,
          12607,
          493,
          281,
          264,
          1192,
          295,
          264,
          2568,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.223071261150081,
        "compression_ratio": 1.7649253731343284,
        "end": 103,
        "id": 13,
        "no_speech_prob": 0.62211674451828,
        "seek": 10000,
        "start": 100,
        "temperature": 0,
        "text": " They're lovely. I love them. They make me feel happy.",
        "tokens": [
          50364,
          814,
          434,
          7496,
          13,
          286,
          959,
          552,
          13,
          814,
          652,
          385,
          841,
          2055,
          13,
          50514
        ]
      },
      {
        "avg_logprob": -0.223071261150081,
        "compression_ratio": 1.7649253731343284,
        "end": 112,
        "id": 14,
        "no_speech_prob": 0.62211674451828,
        "seek": 10000,
        "start": 103,
        "temperature": 0,
        "text": " And you know what? This could be our world. We could say, you know what? We live in this wonderful little world of two bubbles and there never needs to be any more bubbles.",
        "tokens": [
          50514,
          400,
          291,
          458,
          437,
          30,
          639,
          727,
          312,
          527,
          1002,
          13,
          492,
          727,
          584,
          11,
          291,
          458,
          437,
          30,
          492,
          1621,
          294,
          341,
          3715,
          707,
          1002,
          295,
          732,
          16295,
          293,
          456,
          1128,
          2203,
          281,
          312,
          604,
          544,
          16295,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.223071261150081,
        "compression_ratio": 1.7649253731343284,
        "end": 119,
        "id": 15,
        "no_speech_prob": 0.62211674451828,
        "seek": 10000,
        "start": 112,
        "temperature": 0,
        "text": " But, sometime in your life, you might choose to dream a little bit bigger. You might move forward and say, I don't want two bubbles.",
        "tokens": [
          50964,
          583,
          11,
          15053,
          294,
          428,
          993,
          11,
          291,
          1062,
          2826,
          281,
          3055,
          257,
          707,
          857,
          3801,
          13,
          509,
          1062,
          1286,
          2128,
          293,
          584,
          11,
          286,
          500,
          380,
          528,
          732,
          16295,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.223071261150081,
        "compression_ratio": 1.7649253731343284,
        "end": 124,
        "id": 16,
        "no_speech_prob": 0.62211674451828,
        "seek": 10000,
        "start": 119,
        "temperature": 0,
        "text": " I want three. I want ten. I want a hundred. I want a thousand. I want to have no bubbles when the program starts.",
        "tokens": [
          51314,
          286,
          528,
          1045,
          13,
          286,
          528,
          2064,
          13,
          286,
          528,
          257,
          3262,
          13,
          286,
          528,
          257,
          4714,
          13,
          286,
          528,
          281,
          362,
          572,
          16295,
          562,
          264,
          1461,
          3719,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.260456297132704,
        "compression_ratio": 1.699530516431925,
        "end": 130,
        "id": 17,
        "no_speech_prob": 0.7716782689094543,
        "seek": 12400,
        "start": 124,
        "temperature": 0,
        "text": " And then after a while, a couple bubbles appear. Then a few more. We need to suddenly have the option of having many, many more bubbles.",
        "tokens": [
          50364,
          400,
          550,
          934,
          257,
          1339,
          11,
          257,
          1916,
          16295,
          4204,
          13,
          1396,
          257,
          1326,
          544,
          13,
          492,
          643,
          281,
          5800,
          362,
          264,
          3614,
          295,
          1419,
          867,
          11,
          867,
          544,
          16295,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.260456297132704,
        "compression_ratio": 1.699530516431925,
        "end": 138,
        "id": 18,
        "no_speech_prob": 0.7716782689094543,
        "seek": 12400,
        "start": 130,
        "temperature": 0,
        "text": " So, let's just say for a moment, here's our first approach. Our first approach to this problem is to say, well, I had two bubbles.",
        "tokens": [
          50664,
          407,
          11,
          718,
          311,
          445,
          584,
          337,
          257,
          1623,
          11,
          510,
          311,
          527,
          700,
          3109,
          13,
          2621,
          700,
          3109,
          281,
          341,
          1154,
          307,
          281,
          584,
          11,
          731,
          11,
          286,
          632,
          732,
          16295,
          13,
          51064
        ]
      },
      {
        "avg_logprob": -0.260456297132704,
        "compression_ratio": 1.699530516431925,
        "end": 146,
        "id": 19,
        "no_speech_prob": 0.7716782689094543,
        "seek": 12400,
        "start": 138,
        "temperature": 0,
        "text": " And the way that I had two bubbles was I said, bubble b1. And then I said, bubble b2. Perfect.",
        "tokens": [
          51064,
          400,
          264,
          636,
          300,
          286,
          632,
          732,
          16295,
          390,
          286,
          848,
          11,
          12212,
          272,
          16,
          13,
          400,
          550,
          286,
          848,
          11,
          12212,
          272,
          17,
          13,
          10246,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.19900639416420296,
        "compression_ratio": 1.758957654723127,
        "end": 155,
        "id": 20,
        "no_speech_prob": 0.8594270348548889,
        "seek": 14600,
        "start": 146,
        "temperature": 0,
        "text": " Now, I would like three bubbles. So, I will say, bubble b3. And now, what would I like? Four bubbles. Don't worry. I won't keep doing this forever.",
        "tokens": [
          50364,
          823,
          11,
          286,
          576,
          411,
          1045,
          16295,
          13,
          407,
          11,
          286,
          486,
          584,
          11,
          12212,
          272,
          18,
          13,
          400,
          586,
          11,
          437,
          576,
          286,
          411,
          30,
          7451,
          16295,
          13,
          1468,
          380,
          3292,
          13,
          286,
          1582,
          380,
          1066,
          884,
          341,
          5680,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.19900639416420296,
        "compression_ratio": 1.758957654723127,
        "end": 162,
        "id": 21,
        "no_speech_prob": 0.8594270348548889,
        "seek": 14600,
        "start": 155,
        "temperature": 0,
        "text": " Bubble b4. And we can see that this is a reasonable solution. And it is sustainable to about, I don't know, maybe five bubbles.",
        "tokens": [
          50814,
          43072,
          272,
          19,
          13,
          400,
          321,
          393,
          536,
          300,
          341,
          307,
          257,
          10585,
          3827,
          13,
          400,
          309,
          307,
          11235,
          281,
          466,
          11,
          286,
          500,
          380,
          458,
          11,
          1310,
          1732,
          16295,
          13,
          51164
        ]
      },
      {
        "avg_logprob": -0.19900639416420296,
        "compression_ratio": 1.758957654723127,
        "end": 167,
        "id": 22,
        "no_speech_prob": 0.8594270348548889,
        "seek": 14600,
        "start": 162,
        "temperature": 0,
        "text": " Maybe by the time we get to five bubbles, we'll be like, forget it. That sixth bubble is just never going to happen. I'm done.",
        "tokens": [
          51164,
          2704,
          538,
          264,
          565,
          321,
          483,
          281,
          1732,
          16295,
          11,
          321,
          603,
          312,
          411,
          11,
          2870,
          309,
          13,
          663,
          15102,
          12212,
          307,
          445,
          1128,
          516,
          281,
          1051,
          13,
          286,
          478,
          1096,
          13,
          51414
        ]
      },
      {
        "avg_logprob": -0.19900639416420296,
        "compression_ratio": 1.758957654723127,
        "end": 173,
        "id": 23,
        "no_speech_prob": 0.8594270348548889,
        "seek": 14600,
        "start": 167,
        "temperature": 0,
        "text": " So, we need a better solution. It's quite obvious to you in your mind probably what that solution is, even though we haven't done it yet.",
        "tokens": [
          51414,
          407,
          11,
          321,
          643,
          257,
          1101,
          3827,
          13,
          467,
          311,
          1596,
          6322,
          281,
          291,
          294,
          428,
          1575,
          1391,
          437,
          300,
          3827,
          307,
          11,
          754,
          1673,
          321,
          2378,
          380,
          1096,
          309,
          1939,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.18517831802368165,
        "compression_ratio": 1.9473684210526316,
        "end": 180,
        "id": 24,
        "no_speech_prob": 0.4034762382507324,
        "seek": 17300,
        "start": 173,
        "temperature": 0,
        "text": " But the solution is an array. What is an array? What do we want? We want to have a list of bubbles.",
        "tokens": [
          50364,
          583,
          264,
          3827,
          307,
          364,
          10225,
          13,
          708,
          307,
          364,
          10225,
          30,
          708,
          360,
          321,
          528,
          30,
          492,
          528,
          281,
          362,
          257,
          1329,
          295,
          16295,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.18517831802368165,
        "compression_ratio": 1.9473684210526316,
        "end": 189,
        "id": 25,
        "no_speech_prob": 0.4034762382507324,
        "seek": 17300,
        "start": 180,
        "temperature": 0,
        "text": " I want to just say in one statement, I want to have a list of 100 bubbles. Or 1,000 bubbles. Or 1,000,000 bubbles. Right?",
        "tokens": [
          50714,
          286,
          528,
          281,
          445,
          584,
          294,
          472,
          5629,
          11,
          286,
          528,
          281,
          362,
          257,
          1329,
          295,
          2319,
          16295,
          13,
          1610,
          502,
          11,
          1360,
          16295,
          13,
          1610,
          502,
          11,
          1360,
          11,
          1360,
          16295,
          13,
          1779,
          30,
          51164
        ]
      },
      {
        "avg_logprob": -0.18517831802368165,
        "compression_ratio": 1.9473684210526316,
        "end": 196,
        "id": 26,
        "no_speech_prob": 0.4034762382507324,
        "seek": 17300,
        "start": 189,
        "temperature": 0,
        "text": " So, I want to be able to have as many bubbles as I want. And I want to be able to say that in one line of code.",
        "tokens": [
          51164,
          407,
          11,
          286,
          528,
          281,
          312,
          1075,
          281,
          362,
          382,
          867,
          16295,
          382,
          286,
          528,
          13,
          400,
          286,
          528,
          281,
          312,
          1075,
          281,
          584,
          300,
          294,
          472,
          1622,
          295,
          3089,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.19679738961014093,
        "compression_ratio": 1.787037037037037,
        "end": 209,
        "id": 27,
        "no_speech_prob": 0.3556896150112152,
        "seek": 19600,
        "start": 197,
        "temperature": 0,
        "text": " That's a list of something. A list of data is an array. An array is a data structure, just like this is a data structure for a single bubble object b1.",
        "tokens": [
          50414,
          663,
          311,
          257,
          1329,
          295,
          746,
          13,
          316,
          1329,
          295,
          1412,
          307,
          364,
          10225,
          13,
          1107,
          10225,
          307,
          257,
          1412,
          3877,
          11,
          445,
          411,
          341,
          307,
          257,
          1412,
          3877,
          337,
          257,
          2167,
          12212,
          2657,
          272,
          16,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.19679738961014093,
        "compression_ratio": 1.787037037037037,
        "end": 216,
        "id": 28,
        "no_speech_prob": 0.3556896150112152,
        "seek": 19600,
        "start": 209,
        "temperature": 0,
        "text": " An array is a data structure that allows us to say, I want to have a list of x number of n number of bubbles.",
        "tokens": [
          51014,
          1107,
          10225,
          307,
          257,
          1412,
          3877,
          300,
          4045,
          505,
          281,
          584,
          11,
          286,
          528,
          281,
          362,
          257,
          1329,
          295,
          2031,
          1230,
          295,
          297,
          1230,
          295,
          16295,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.19679738961014093,
        "compression_ratio": 1.787037037037037,
        "end": 222,
        "id": 29,
        "no_speech_prob": 0.3556896150112152,
        "seek": 19600,
        "start": 216,
        "temperature": 0,
        "text": " So, we're almost kind of done with this introduction to the idea of an array. We see why we need one. That's pretty obvious.",
        "tokens": [
          51364,
          407,
          11,
          321,
          434,
          1920,
          733,
          295,
          1096,
          365,
          341,
          9339,
          281,
          264,
          1558,
          295,
          364,
          10225,
          13,
          492,
          536,
          983,
          321,
          643,
          472,
          13,
          663,
          311,
          1238,
          6322,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.247311361904802,
        "compression_ratio": 1.6962962962962962,
        "end": 229,
        "id": 30,
        "no_speech_prob": 0.3846588730812073,
        "seek": 22200,
        "start": 222,
        "temperature": 0,
        "text": " A little bit of what it means conceptually. But let's take that one little step further and kind of get a peek at the syntax.",
        "tokens": [
          50364,
          316,
          707,
          857,
          295,
          437,
          309,
          1355,
          3410,
          671,
          13,
          583,
          718,
          311,
          747,
          300,
          472,
          707,
          1823,
          3052,
          293,
          733,
          295,
          483,
          257,
          19604,
          412,
          264,
          28431,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.247311361904802,
        "compression_ratio": 1.6962962962962962,
        "end": 234,
        "id": 31,
        "no_speech_prob": 0.3846588730812073,
        "seek": 22200,
        "start": 229,
        "temperature": 0,
        "text": " And then in the next video, it's going to carry forth and continue this journey forward and forward and forward.",
        "tokens": [
          50714,
          400,
          550,
          294,
          264,
          958,
          960,
          11,
          309,
          311,
          516,
          281,
          3985,
          5220,
          293,
          2354,
          341,
          4671,
          2128,
          293,
          2128,
          293,
          2128,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.247311361904802,
        "compression_ratio": 1.6962962962962962,
        "end": 242,
        "id": 32,
        "no_speech_prob": 0.3846588730812073,
        "seek": 22200,
        "start": 234,
        "temperature": 0,
        "text": " Okay, so if you remember, there was a time, some time in your life or my life or in a past video that existed somewhere,",
        "tokens": [
          50964,
          1033,
          11,
          370,
          498,
          291,
          1604,
          11,
          456,
          390,
          257,
          565,
          11,
          512,
          565,
          294,
          428,
          993,
          420,
          452,
          993,
          420,
          294,
          257,
          1791,
          960,
          300,
          13135,
          4079,
          11,
          51364
        ]
      },
      {
        "avg_logprob": -0.247311361904802,
        "compression_ratio": 1.6962962962962962,
        "end": 249,
        "id": 33,
        "no_speech_prob": 0.3846588730812073,
        "seek": 22200,
        "start": 242,
        "temperature": 0,
        "text": " where we wanted to have a number. And we would say int, I could say int val equals 5, for example.",
        "tokens": [
          51364,
          689,
          321,
          1415,
          281,
          362,
          257,
          1230,
          13,
          400,
          321,
          576,
          584,
          560,
          11,
          286,
          727,
          584,
          560,
          1323,
          6915,
          1025,
          11,
          337,
          1365,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.20260208942851082,
        "compression_ratio": 1.7911646586345382,
        "end": 253,
        "id": 34,
        "no_speech_prob": 0.055817559361457825,
        "seek": 24900,
        "start": 249,
        "temperature": 0,
        "text": " I want to have a number. I'm going to call it val. It's an integer. And I'm going to give it the value 5.",
        "tokens": [
          50364,
          286,
          528,
          281,
          362,
          257,
          1230,
          13,
          286,
          478,
          516,
          281,
          818,
          309,
          1323,
          13,
          467,
          311,
          364,
          24922,
          13,
          400,
          286,
          478,
          516,
          281,
          976,
          309,
          264,
          2158,
          1025,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.20260208942851082,
        "compression_ratio": 1.7911646586345382,
        "end": 259,
        "id": 35,
        "no_speech_prob": 0.055817559361457825,
        "seek": 24900,
        "start": 253,
        "temperature": 0,
        "text": " What actually happens on the computer? Well, we have this thing called RAM, the computer's memory, the brain of the computer,",
        "tokens": [
          50564,
          708,
          767,
          2314,
          322,
          264,
          3820,
          30,
          1042,
          11,
          321,
          362,
          341,
          551,
          1219,
          14561,
          11,
          264,
          3820,
          311,
          4675,
          11,
          264,
          3567,
          295,
          264,
          3820,
          11,
          50864
        ]
      },
      {
        "avg_logprob": -0.20260208942851082,
        "compression_ratio": 1.7911646586345382,
        "end": 267,
        "id": 36,
        "no_speech_prob": 0.055817559361457825,
        "seek": 24900,
        "start": 259,
        "temperature": 0,
        "text": " where all this data is stored. We open up a spot in the computer's memory. We name it val. It's named val.",
        "tokens": [
          50864,
          689,
          439,
          341,
          1412,
          307,
          12187,
          13,
          492,
          1269,
          493,
          257,
          4008,
          294,
          264,
          3820,
          311,
          4675,
          13,
          492,
          1315,
          309,
          1323,
          13,
          467,
          311,
          4926,
          1323,
          13,
          51264
        ]
      },
      {
        "avg_logprob": -0.20260208942851082,
        "compression_ratio": 1.7911646586345382,
        "end": 274,
        "id": 37,
        "no_speech_prob": 0.055817559361457825,
        "seek": 24900,
        "start": 267,
        "temperature": 0,
        "text": " And then what do we do? We store the number 5 there. This works. And now let's take the following scenario.",
        "tokens": [
          51264,
          400,
          550,
          437,
          360,
          321,
          360,
          30,
          492,
          3531,
          264,
          1230,
          1025,
          456,
          13,
          639,
          1985,
          13,
          400,
          586,
          718,
          311,
          747,
          264,
          3480,
          9005,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.14426661803659085,
        "compression_ratio": 1.8272251308900525,
        "end": 280,
        "id": 38,
        "no_speech_prob": 0.013636354357004166,
        "seek": 27400,
        "start": 274,
        "temperature": 0,
        "text": " What if we have the computer's memory and what we want to do is we want to say, I don't want to open up a spot for a single number.",
        "tokens": [
          50364,
          708,
          498,
          321,
          362,
          264,
          3820,
          311,
          4675,
          293,
          437,
          321,
          528,
          281,
          360,
          307,
          321,
          528,
          281,
          584,
          11,
          286,
          500,
          380,
          528,
          281,
          1269,
          493,
          257,
          4008,
          337,
          257,
          2167,
          1230,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.14426661803659085,
        "compression_ratio": 1.8272251308900525,
        "end": 289,
        "id": 39,
        "no_speech_prob": 0.013636354357004166,
        "seek": 27400,
        "start": 280,
        "temperature": 0,
        "text": " What I want to do is open up enough spots for 1, 2, 3, 4, 5, 6, 7. 1, 2, 3, 4, 5, 6, 7 numbers.",
        "tokens": [
          50664,
          708,
          286,
          528,
          281,
          360,
          307,
          1269,
          493,
          1547,
          10681,
          337,
          502,
          11,
          568,
          11,
          805,
          11,
          1017,
          11,
          1025,
          11,
          1386,
          11,
          1614,
          13,
          502,
          11,
          568,
          11,
          805,
          11,
          1017,
          11,
          1025,
          11,
          1386,
          11,
          1614,
          3547,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.14426661803659085,
        "compression_ratio": 1.8272251308900525,
        "end": 296,
        "id": 40,
        "no_speech_prob": 0.013636354357004166,
        "seek": 27400,
        "start": 289,
        "temperature": 0,
        "text": " And I want to name that values. I'm going to name it values. And what I want values to be is a list of all these numbers.",
        "tokens": [
          51114,
          400,
          286,
          528,
          281,
          1315,
          300,
          4190,
          13,
          286,
          478,
          516,
          281,
          1315,
          309,
          4190,
          13,
          400,
          437,
          286,
          528,
          4190,
          281,
          312,
          307,
          257,
          1329,
          295,
          439,
          613,
          3547,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.20360113560468301,
        "compression_ratio": 1.6030927835051547,
        "end": 306,
        "id": 41,
        "no_speech_prob": 0.2658366560935974,
        "seek": 29600,
        "start": 296,
        "temperature": 0,
        "text": " 2, negative 5, 107, 4, 91, 3, 33. So values is a list of all those numbers. How does this work?",
        "tokens": [
          50364,
          568,
          11,
          3671,
          1025,
          11,
          1266,
          22,
          11,
          1017,
          11,
          31064,
          11,
          805,
          11,
          11816,
          13,
          407,
          4190,
          307,
          257,
          1329,
          295,
          439,
          729,
          3547,
          13,
          1012,
          775,
          341,
          589,
          30,
          50864
        ]
      },
      {
        "avg_logprob": -0.20360113560468301,
        "compression_ratio": 1.6030927835051547,
        "end": 315,
        "id": 42,
        "no_speech_prob": 0.2658366560935974,
        "seek": 29600,
        "start": 306,
        "temperature": 0,
        "text": " Hopefully this gives us a nice, conceptually this makes sense to us. This word is pointing to a single number.",
        "tokens": [
          50864,
          10429,
          341,
          2709,
          505,
          257,
          1481,
          11,
          3410,
          671,
          341,
          1669,
          2020,
          281,
          505,
          13,
          639,
          1349,
          307,
          12166,
          281,
          257,
          2167,
          1230,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.20360113560468301,
        "compression_ratio": 1.6030927835051547,
        "end": 321,
        "id": 43,
        "no_speech_prob": 0.2658366560935974,
        "seek": 29600,
        "start": 315,
        "temperature": 0,
        "text": " This word is pointing to a continuous list of numbers. We declared val as an integer, set it equal to 5.",
        "tokens": [
          51314,
          639,
          1349,
          307,
          12166,
          281,
          257,
          10957,
          1329,
          295,
          3547,
          13,
          492,
          15489,
          1323,
          382,
          364,
          24922,
          11,
          992,
          309,
          2681,
          281,
          1025,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.19012717445297997,
        "compression_ratio": 2.0555555555555554,
        "end": 329,
        "id": 44,
        "no_speech_prob": 0.41860467195510864,
        "seek": 32100,
        "start": 321,
        "temperature": 0,
        "text": " What we need to do is declare values as a list of integers. Open square bracket, close square bracket.",
        "tokens": [
          50364,
          708,
          321,
          643,
          281,
          360,
          307,
          19710,
          4190,
          382,
          257,
          1329,
          295,
          41674,
          13,
          7238,
          3732,
          16904,
          11,
          1998,
          3732,
          16904,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.19012717445297997,
        "compression_ratio": 2.0555555555555554,
        "end": 334,
        "id": 45,
        "no_speech_prob": 0.41860467195510864,
        "seek": 32100,
        "start": 329,
        "temperature": 0,
        "text": " Let me write that again over here a little bit bigger. Open square bracket, close square bracket.",
        "tokens": [
          50764,
          961,
          385,
          2464,
          300,
          797,
          670,
          510,
          257,
          707,
          857,
          3801,
          13,
          7238,
          3732,
          16904,
          11,
          1998,
          3732,
          16904,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.19012717445297997,
        "compression_ratio": 2.0555555555555554,
        "end": 343,
        "id": 46,
        "no_speech_prob": 0.41860467195510864,
        "seek": 32100,
        "start": 334,
        "temperature": 0,
        "text": " This is how we note an array in a declaration. An int, a single integer val, an array, a list of integers, an array.",
        "tokens": [
          51014,
          639,
          307,
          577,
          321,
          3637,
          364,
          10225,
          294,
          257,
          27606,
          13,
          1107,
          560,
          11,
          257,
          2167,
          24922,
          1323,
          11,
          364,
          10225,
          11,
          257,
          1329,
          295,
          41674,
          11,
          364,
          10225,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.19012717445297997,
        "compression_ratio": 2.0555555555555554,
        "end": 347,
        "id": 47,
        "no_speech_prob": 0.41860467195510864,
        "seek": 32100,
        "start": 343,
        "temperature": 0,
        "text": " Open square bracket, close square bracket. That syntax is going to come up more and more.",
        "tokens": [
          51464,
          7238,
          3732,
          16904,
          11,
          1998,
          3732,
          16904,
          13,
          663,
          28431,
          307,
          516,
          281,
          808,
          493,
          544,
          293,
          544,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.20820312201976776,
        "compression_ratio": 1.6372881355932203,
        "end": 353,
        "id": 48,
        "no_speech_prob": 0.5772820115089417,
        "seek": 34700,
        "start": 347,
        "temperature": 0,
        "text": " We're going to start using square brackets. If you never got to use those keys on your keyboard, here you go.",
        "tokens": [
          50364,
          492,
          434,
          516,
          281,
          722,
          1228,
          3732,
          26179,
          13,
          759,
          291,
          1128,
          658,
          281,
          764,
          729,
          9317,
          322,
          428,
          10186,
          11,
          510,
          291,
          352,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.20820312201976776,
        "compression_ratio": 1.6372881355932203,
        "end": 365,
        "id": 49,
        "no_speech_prob": 0.5772820115089417,
        "seek": 34700,
        "start": 353,
        "temperature": 0,
        "text": " Here's your chance. So once we have this list, we can actually initialize it by saying curly bracket, 2, negative 5, 107, 4, 91, 3, 33.",
        "tokens": [
          50664,
          1692,
          311,
          428,
          2931,
          13,
          407,
          1564,
          321,
          362,
          341,
          1329,
          11,
          321,
          393,
          767,
          5883,
          1125,
          309,
          538,
          1566,
          32066,
          16904,
          11,
          568,
          11,
          3671,
          1025,
          11,
          1266,
          22,
          11,
          1017,
          11,
          31064,
          11,
          805,
          11,
          11816,
          13,
          51264
        ]
      },
      {
        "avg_logprob": -0.20820312201976776,
        "compression_ratio": 1.6372881355932203,
        "end": 371,
        "id": 50,
        "no_speech_prob": 0.5772820115089417,
        "seek": 34700,
        "start": 365,
        "temperature": 0,
        "text": " So this syntax I'm less concerned about. We're going to get into the details of the syntax of opening up the list,",
        "tokens": [
          51264,
          407,
          341,
          28431,
          286,
          478,
          1570,
          5922,
          466,
          13,
          492,
          434,
          516,
          281,
          483,
          666,
          264,
          4365,
          295,
          264,
          28431,
          295,
          5193,
          493,
          264,
          1329,
          11,
          51564
        ]
      },
      {
        "avg_logprob": -0.20820312201976776,
        "compression_ratio": 1.6372881355932203,
        "end": 376,
        "id": 51,
        "no_speech_prob": 0.5772820115089417,
        "seek": 34700,
        "start": 371,
        "temperature": 0,
        "text": " filling the list, using the values in the list. What does it mean to say I want to take all these numbers and double them?",
        "tokens": [
          51564,
          10623,
          264,
          1329,
          11,
          1228,
          264,
          4190,
          294,
          264,
          1329,
          13,
          708,
          775,
          309,
          914,
          281,
          584,
          286,
          528,
          281,
          747,
          439,
          613,
          3547,
          293,
          3834,
          552,
          30,
          51814
        ]
      },
      {
        "avg_logprob": -0.2017841339111328,
        "compression_ratio": 1.8064516129032258,
        "end": 382,
        "id": 52,
        "no_speech_prob": 0.20431135594844818,
        "seek": 37600,
        "start": 376,
        "temperature": 0,
        "text": " I want to take all these numbers and divide them by 2. I want to sort these numbers so that the lowest ones are at the beginning of the list.",
        "tokens": [
          50364,
          286,
          528,
          281,
          747,
          439,
          613,
          3547,
          293,
          9845,
          552,
          538,
          568,
          13,
          286,
          528,
          281,
          1333,
          613,
          3547,
          370,
          300,
          264,
          12437,
          2306,
          366,
          412,
          264,
          2863,
          295,
          264,
          1329,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.2017841339111328,
        "compression_ratio": 1.8064516129032258,
        "end": 388,
        "id": 53,
        "no_speech_prob": 0.20431135594844818,
        "seek": 37600,
        "start": 382,
        "temperature": 0,
        "text": " These are all the kinds of things you can do with an array. For you, the thing that you want to start thinking about,",
        "tokens": [
          50664,
          1981,
          366,
          439,
          264,
          3685,
          295,
          721,
          291,
          393,
          360,
          365,
          364,
          10225,
          13,
          1171,
          291,
          11,
          264,
          551,
          300,
          291,
          528,
          281,
          722,
          1953,
          466,
          11,
          50964
        ]
      },
      {
        "avg_logprob": -0.2017841339111328,
        "compression_ratio": 1.8064516129032258,
        "end": 394,
        "id": 54,
        "no_speech_prob": 0.20431135594844818,
        "seek": 37600,
        "start": 388,
        "temperature": 0,
        "text": " there's no real exercise here, there'll be an exercise after the next video I guess, but find your bubble.",
        "tokens": [
          50964,
          456,
          311,
          572,
          957,
          5380,
          510,
          11,
          456,
          603,
          312,
          364,
          5380,
          934,
          264,
          958,
          960,
          286,
          2041,
          11,
          457,
          915,
          428,
          12212,
          13,
          51264
        ]
      },
      {
        "avg_logprob": -0.2017841339111328,
        "compression_ratio": 1.8064516129032258,
        "end": 400,
        "id": 55,
        "no_speech_prob": 0.20431135594844818,
        "seek": 37600,
        "start": 394,
        "temperature": 0,
        "text": " What was that program that you wrote that had thing 1, thing 2, thing 3, thing 4?",
        "tokens": [
          51264,
          708,
          390,
          300,
          1461,
          300,
          291,
          4114,
          300,
          632,
          551,
          502,
          11,
          551,
          568,
          11,
          551,
          805,
          11,
          551,
          1017,
          30,
          51564
        ]
      },
      {
        "avg_logprob": -0.21699153052435982,
        "compression_ratio": 1.8081761006289307,
        "end": 406,
        "id": 56,
        "no_speech_prob": 0.2094317227602005,
        "seek": 40000,
        "start": 400,
        "temperature": 0,
        "text": " Find that piece of code, look at it, think about what an array would give you, what possibilities would that open up,",
        "tokens": [
          50364,
          11809,
          300,
          2522,
          295,
          3089,
          11,
          574,
          412,
          309,
          11,
          519,
          466,
          437,
          364,
          10225,
          576,
          976,
          291,
          11,
          437,
          12178,
          576,
          300,
          1269,
          493,
          11,
          50664
        ]
      },
      {
        "avg_logprob": -0.21699153052435982,
        "compression_ratio": 1.8081761006289307,
        "end": 412,
        "id": 57,
        "no_speech_prob": 0.2094317227602005,
        "seek": 40000,
        "start": 406,
        "temperature": 0,
        "text": " and have that ready to go because that's the piece of code you're going to start to adjust as we go through the next videos",
        "tokens": [
          50664,
          293,
          362,
          300,
          1919,
          281,
          352,
          570,
          300,
          311,
          264,
          2522,
          295,
          3089,
          291,
          434,
          516,
          281,
          722,
          281,
          4369,
          382,
          321,
          352,
          807,
          264,
          958,
          2145,
          50964
        ]
      },
      {
        "avg_logprob": -0.21699153052435982,
        "compression_ratio": 1.8081761006289307,
        "end": 415,
        "id": 58,
        "no_speech_prob": 0.2094317227602005,
        "seek": 40000,
        "start": 412,
        "temperature": 0,
        "text": " and go over the syntax more and more and more.",
        "tokens": [
          50964,
          293,
          352,
          670,
          264,
          28431,
          544,
          293,
          544,
          293,
          544,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.21699153052435982,
        "compression_ratio": 1.8081761006289307,
        "end": 421,
        "id": 59,
        "no_speech_prob": 0.2094317227602005,
        "seek": 40000,
        "start": 415,
        "temperature": 0,
        "text": " Okay, that was about 7 minutes that you watched, or if you're still here, or maybe you just started in the middle, I don't know, whatever.",
        "tokens": [
          51114,
          1033,
          11,
          300,
          390,
          466,
          1614,
          2077,
          300,
          291,
          6337,
          11,
          420,
          498,
          291,
          434,
          920,
          510,
          11,
          420,
          1310,
          291,
          445,
          1409,
          294,
          264,
          2808,
          11,
          286,
          500,
          380,
          458,
          11,
          2035,
          13,
          51414
        ]
      },
      {
        "avg_logprob": -0.21699153052435982,
        "compression_ratio": 1.8081761006289307,
        "end": 426,
        "id": 60,
        "no_speech_prob": 0.2094317227602005,
        "seek": 40000,
        "start": 421,
        "temperature": 0,
        "text": " And this is done now. Hopefully the audio worked because I did this video earlier and the audio was terrible, and I hope this is better.",
        "tokens": [
          51414,
          400,
          341,
          307,
          1096,
          586,
          13,
          10429,
          264,
          6278,
          2732,
          570,
          286,
          630,
          341,
          960,
          3071,
          293,
          264,
          6278,
          390,
          6237,
          11,
          293,
          286,
          1454,
          341,
          307,
          1101,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.21699153052435982,
        "compression_ratio": 1.8081761006289307,
        "end": 428,
        "id": 61,
        "no_speech_prob": 0.2094317227602005,
        "seek": 40000,
        "start": 426,
        "temperature": 0,
        "text": " Okay, bye.",
        "tokens": [
          51664,
          1033,
          11,
          6543,
          13,
          51764
        ]
      }
    ],
    "transcription": " Hello and welcome. Here we are. This is a video about an array. This video is only going to answer two questions. What is an array and why do we need an array? This is quite an exciting moment, I hope. It is for me, I hope it is for you. Because where are we in our journey through programming? We are now at the very end of the fundamentals of programming. We have done variables, we have done conditionals, we have done loops, objects, functions, I should have said functions, objects, but whatever, functions, objects. And now we are at this last piece of the puzzle, the array. Once we get through this last piece of the puzzle, we can move on and start to explore all sorts of interesting and exciting applications of these ideas in different directions. And I hope to make more videos and point you towards more videos and content and exciting adventures that you may or may not choose to have. So, but, all I want to do here is talk about an array. Now, I'm going to say, if you remember where we last left off, truth of the matter is, I left this off like a year ago. I'm kind of filling in a video that the audio had some problems in, so I'm trying to keep continuity as best as possible. I do have more grey hair and I forgot to trim this beard, so anyway, I'm wearing a different shirt, but you know, whatever. You'll figure it out. If it's a problem for you, you will email me and slip a note somewhere, handwritten in some box somewhere. Okay, so, here we are. This is where you last left off if you were watching videos. This is where I last left off. My memory serves me. We have this beautiful, lovely, little, nice program. What did it have? It has two bubble objects. Those two bubble objects are initialized here in setup. Some functions are called to them and they're floating up to the top of the screen. They're lovely. I love them. They make me feel happy. And you know what? This could be our world. We could say, you know what? We live in this wonderful little world of two bubbles and there never needs to be any more bubbles. But, sometime in your life, you might choose to dream a little bit bigger. You might move forward and say, I don't want two bubbles. I want three. I want ten. I want a hundred. I want a thousand. I want to have no bubbles when the program starts. And then after a while, a couple bubbles appear. Then a few more. We need to suddenly have the option of having many, many more bubbles. So, let's just say for a moment, here's our first approach. Our first approach to this problem is to say, well, I had two bubbles. And the way that I had two bubbles was I said, bubble b1. And then I said, bubble b2. Perfect. Now, I would like three bubbles. So, I will say, bubble b3. And now, what would I like? Four bubbles. Don't worry. I won't keep doing this forever. Bubble b4. And we can see that this is a reasonable solution. And it is sustainable to about, I don't know, maybe five bubbles. Maybe by the time we get to five bubbles, we'll be like, forget it. That sixth bubble is just never going to happen. I'm done. So, we need a better solution. It's quite obvious to you in your mind probably what that solution is, even though we haven't done it yet. But the solution is an array. What is an array? What do we want? We want to have a list of bubbles. I want to just say in one statement, I want to have a list of 100 bubbles. Or 1,000 bubbles. Or 1,000,000 bubbles. Right? So, I want to be able to have as many bubbles as I want. And I want to be able to say that in one line of code. That's a list of something. A list of data is an array. An array is a data structure, just like this is a data structure for a single bubble object b1. An array is a data structure that allows us to say, I want to have a list of x number of n number of bubbles. So, we're almost kind of done with this introduction to the idea of an array. We see why we need one. That's pretty obvious. A little bit of what it means conceptually. But let's take that one little step further and kind of get a peek at the syntax. And then in the next video, it's going to carry forth and continue this journey forward and forward and forward. Okay, so if you remember, there was a time, some time in your life or my life or in a past video that existed somewhere, where we wanted to have a number. And we would say int, I could say int val equals 5, for example. I want to have a number. I'm going to call it val. It's an integer. And I'm going to give it the value 5. What actually happens on the computer? Well, we have this thing called RAM, the computer's memory, the brain of the computer, where all this data is stored. We open up a spot in the computer's memory. We name it val. It's named val. And then what do we do? We store the number 5 there. This works. And now let's take the following scenario. What if we have the computer's memory and what we want to do is we want to say, I don't want to open up a spot for a single number. What I want to do is open up enough spots for 1, 2, 3, 4, 5, 6, 7. 1, 2, 3, 4, 5, 6, 7 numbers. And I want to name that values. I'm going to name it values. And what I want values to be is a list of all these numbers. 2, negative 5, 107, 4, 91, 3, 33. So values is a list of all those numbers. How does this work? Hopefully this gives us a nice, conceptually this makes sense to us. This word is pointing to a single number. This word is pointing to a continuous list of numbers. We declared val as an integer, set it equal to 5. What we need to do is declare values as a list of integers. Open square bracket, close square bracket. Let me write that again over here a little bit bigger. Open square bracket, close square bracket. This is how we note an array in a declaration. An int, a single integer val, an array, a list of integers, an array. Open square bracket, close square bracket. That syntax is going to come up more and more. We're going to start using square brackets. If you never got to use those keys on your keyboard, here you go. Here's your chance. So once we have this list, we can actually initialize it by saying curly bracket, 2, negative 5, 107, 4, 91, 3, 33. So this syntax I'm less concerned about. We're going to get into the details of the syntax of opening up the list, filling the list, using the values in the list. What does it mean to say I want to take all these numbers and double them? I want to take all these numbers and divide them by 2. I want to sort these numbers so that the lowest ones are at the beginning of the list. These are all the kinds of things you can do with an array. For you, the thing that you want to start thinking about, there's no real exercise here, there'll be an exercise after the next video I guess, but find your bubble. What was that program that you wrote that had thing 1, thing 2, thing 3, thing 4? Find that piece of code, look at it, think about what an array would give you, what possibilities would that open up, and have that ready to go because that's the piece of code you're going to start to adjust as we go through the next videos and go over the syntax more and more and more. Okay, that was about 7 minutes that you watched, or if you're still here, or maybe you just started in the middle, I don't know, whatever. And this is done now. Hopefully the audio worked because I did this video earlier and the audio was terrible, and I hope this is better. Okay, bye.",
    "translation": null
  },
  "error": null,
  "status": "succeeded",
  "created_at": "2023-09-26T20:41:42.498531Z",
  "started_at": "2023-09-26T20:44:25.460358Z",
  "completed_at": "2023-09-26T20:46:36.179899Z",
  "webhook": "https://83ceaa0b612c.ngrok.app/?video_id=NptnmWvkbTw",
  "webhook_events_filter": [
    "completed"
  ],
  "metrics": {
    "predict_time": 130.719541
  },
  "urls": {
    "cancel": "https://api.replicate.com/v1/predictions/hfkom4bbr5buxwc62kch7q5nm4/cancel",
    "get": "https://api.replicate.com/v1/predictions/hfkom4bbr5buxwc62kch7q5nm4"
  }
}