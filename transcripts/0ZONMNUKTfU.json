{
  "id": "ag3qsxjbhikre7marybtl437xq",
  "version": "91ee9c0c3df30478510ff8c8a3a545add1ad0259ad3a9f78fba57fbc05ee64f7",
  "input": {
    "audio": "https://upcdn.io/FW25b4F/raw/coding-train/0ZONMNUKTfU.m4a"
  },
  "logs": "Transcribe with large-v2 model\nDetected language: English\n  0%|          | 0/158745 [00:00<?, ?frames/s]\n  2%|▏         | 2968/158745 [00:01<01:36, 1612.06frames/s]\n  3%|▎         | 5524/158745 [00:07<03:47, 672.43frames/s] \n  5%|▌         | 8508/158745 [00:12<03:54, 640.56frames/s]\n  7%|▋         | 11424/158745 [00:17<04:07, 595.08frames/s]\n  9%|▉         | 14300/158745 [00:24<04:30, 534.22frames/s]\n 11%|█         | 16848/158745 [00:29<04:39, 506.88frames/s]\n 12%|█▏        | 19432/158745 [00:35<04:46, 485.58frames/s]\n 14%|█▍        | 22036/158745 [00:41<04:46, 477.93frames/s]\n 16%|█▌        | 24894/158745 [00:46<04:24, 505.26frames/s]\n 18%|█▊        | 27798/158745 [00:50<04:03, 537.40frames/s]\n 19%|█▉        | 30474/158745 [00:55<03:54, 546.72frames/s]\n 21%|██        | 33386/158745 [01:01<03:54, 535.01frames/s]\n 23%|██▎       | 36290/158745 [01:07<04:03, 503.45frames/s]\n 24%|██▍       | 38754/158745 [01:13<04:04, 491.55frames/s]\n 26%|██▌       | 41354/158745 [01:20<04:20, 450.77frames/s]\n 28%|██▊       | 43950/158745 [01:25<04:13, 452.02frames/s]\n 30%|██▉       | 46890/158745 [01:31<04:04, 457.35frames/s]\n 31%|███       | 49602/158745 [01:38<04:00, 454.74frames/s]\n 33%|███▎      | 52602/158745 [01:39<02:59, 592.28frames/s]\n 34%|███▍      | 53902/158745 [01:42<03:07, 558.48frames/s]\n 36%|███▌      | 56802/158745 [01:46<02:42, 627.97frames/s]\n 37%|███▋      | 59502/158745 [01:51<02:48, 590.00frames/s]\n 39%|███▉      | 62102/158745 [01:57<03:03, 526.57frames/s]\n 41%|████      | 64802/158745 [02:02<02:53, 541.35frames/s]\n 42%|████▏     | 67202/158745 [02:06<02:43, 559.37frames/s]\n 44%|████▍     | 69702/158745 [02:10<02:32, 583.03frames/s]\n 45%|████▌     | 72102/158745 [02:13<02:25, 595.62frames/s]\n 47%|████▋     | 74902/158745 [02:17<02:14, 625.68frames/s]\n 49%|████▊     | 77302/158745 [02:22<02:12, 613.67frames/s]\n 51%|█████     | 80202/158745 [02:27<02:17, 570.38frames/s]\n 52%|█████▏    | 81802/158745 [02:30<02:16, 563.63frames/s]\n 53%|█████▎    | 84002/158745 [02:34<02:07, 585.83frames/s]\n 55%|█████▍    | 86702/158745 [02:39<02:05, 572.16frames/s]\n 56%|█████▋    | 89302/158745 [02:44<02:05, 555.13frames/s]\n 58%|█████▊    | 91902/158745 [02:48<01:56, 573.93frames/s]\n 60%|█████▉    | 94802/158745 [02:55<02:07, 502.37frames/s]\n 61%|██████▏   | 97302/158745 [03:00<02:03, 497.98frames/s]\n 63%|██████▎   | 99802/158745 [03:05<01:57, 500.85frames/s]\n 65%|██████▍   | 102402/158745 [03:09<01:45, 534.38frames/s]\n 66%|██████▌   | 105002/158745 [03:14<01:40, 537.31frames/s]\n 68%|██████▊   | 107902/158745 [03:19<01:34, 537.48frames/s]\n 70%|██████▉   | 110502/158745 [03:23<01:24, 570.43frames/s]\n 71%|███████▏  | 113402/158745 [03:29<01:20, 562.55frames/s]\n 73%|███████▎  | 116202/158745 [03:34<01:17, 546.59frames/s]\n 75%|███████▍  | 118902/158745 [03:40<01:15, 529.80frames/s]\n 77%|███████▋  | 121802/158745 [03:46<01:12, 511.39frames/s]\n 79%|███████▊  | 124702/158745 [03:52<01:08, 496.07frames/s]\n 80%|████████  | 127402/158745 [03:57<01:01, 506.97frames/s]\n 82%|████████▏ | 130002/158745 [04:02<00:58, 494.72frames/s]\n 84%|████████▎ | 132802/158745 [04:09<00:53, 482.56frames/s]\n 85%|████████▌ | 135402/158745 [04:13<00:46, 505.84frames/s]\n 87%|████████▋ | 138102/158745 [04:19<00:41, 498.46frames/s]\n 89%|████████▉ | 140902/158745 [04:23<00:32, 543.64frames/s]\n 90%|█████████ | 143502/158745 [04:28<00:28, 535.68frames/s]\n 92%|█████████▏| 146102/158745 [04:33<00:23, 536.58frames/s]\n 94%|█████████▎| 148702/158745 [04:37<00:17, 559.67frames/s]\n 95%|█████████▌| 151302/158745 [04:41<00:12, 594.26frames/s]\n 97%|█████████▋| 154202/158745 [04:45<00:07, 601.32frames/s]\n 99%|█████████▉| 157002/158745 [04:53<00:03, 504.48frames/s]\n100%|██████████| 158745/158745 [04:55<00:00, 565.99frames/s]\n100%|██████████| 158745/158745 [04:55<00:00, 537.96frames/s]\n",
  "output": {
    "detected_language": "english",
    "segments": [
      {
        "avg_logprob": -0.4918550042545094,
        "compression_ratio": 1.180952380952381,
        "end": 14.64,
        "id": 0,
        "no_speech_prob": 0.0008291203994303942,
        "seek": 0,
        "start": 0,
        "temperature": 0,
        "text": " Good girl.",
        "tokens": [
          50364,
          2205,
          2013,
          13,
          51096
        ]
      },
      {
        "avg_logprob": -0.4918550042545094,
        "compression_ratio": 1.180952380952381,
        "end": 18.8,
        "id": 1,
        "no_speech_prob": 0.0008291203994303942,
        "seek": 0,
        "start": 14.64,
        "temperature": 0,
        "text": " Welcome to another episode of Coding in the Cabana.",
        "tokens": [
          51096,
          4027,
          281,
          1071,
          3500,
          295,
          383,
          8616,
          294,
          264,
          14704,
          2095,
          13,
          51304
        ]
      },
      {
        "avg_logprob": -0.4918550042545094,
        "compression_ratio": 1.180952380952381,
        "end": 29.68,
        "id": 2,
        "no_speech_prob": 0.0008291203994303942,
        "seek": 0,
        "start": 18.8,
        "temperature": 0,
        "text": " Today I am going to tackle something called marching squares.",
        "tokens": [
          51304,
          2692,
          286,
          669,
          516,
          281,
          14896,
          746,
          1219,
          30523,
          19368,
          13,
          51848
        ]
      },
      {
        "avg_logprob": -0.24642841755842962,
        "compression_ratio": 1.5985663082437276,
        "end": 34.16,
        "id": 3,
        "no_speech_prob": 0.0007096040062606335,
        "seek": 2968,
        "start": 29.68,
        "temperature": 0,
        "text": " The topic of marching squares or marching cubes was originally suggested for the Coding",
        "tokens": [
          50364,
          440,
          4829,
          295,
          30523,
          19368,
          420,
          30523,
          25415,
          390,
          7993,
          10945,
          337,
          264,
          383,
          8616,
          50588
        ]
      },
      {
        "avg_logprob": -0.24642841755842962,
        "compression_ratio": 1.5985663082437276,
        "end": 38.44,
        "id": 4,
        "no_speech_prob": 0.0007096040062606335,
        "seek": 2968,
        "start": 34.16,
        "temperature": 0,
        "text": " Train on February 18, 2019 by Quinn Sunrise.",
        "tokens": [
          50588,
          28029,
          322,
          8711,
          2443,
          11,
          6071,
          538,
          36723,
          6163,
          18619,
          13,
          50802
        ]
      },
      {
        "avg_logprob": -0.24642841755842962,
        "compression_ratio": 1.5985663082437276,
        "end": 40.92,
        "id": 5,
        "no_speech_prob": 0.0007096040062606335,
        "seek": 2968,
        "start": 38.44,
        "temperature": 0,
        "text": " So I do want to try marching cubes.",
        "tokens": [
          50802,
          407,
          286,
          360,
          528,
          281,
          853,
          30523,
          25415,
          13,
          50926
        ]
      },
      {
        "avg_logprob": -0.24642841755842962,
        "compression_ratio": 1.5985663082437276,
        "end": 44.12,
        "id": 6,
        "no_speech_prob": 0.0007096040062606335,
        "seek": 2968,
        "start": 40.92,
        "temperature": 0,
        "text": " I suppose that'll either be in a follow-up video, whether it's a Cabana one or a live",
        "tokens": [
          50926,
          286,
          7297,
          300,
          603,
          2139,
          312,
          294,
          257,
          1524,
          12,
          1010,
          960,
          11,
          1968,
          309,
          311,
          257,
          14704,
          2095,
          472,
          420,
          257,
          1621,
          51086
        ]
      },
      {
        "avg_logprob": -0.24642841755842962,
        "compression_ratio": 1.5985663082437276,
        "end": 45.12,
        "id": 7,
        "no_speech_prob": 0.0007096040062606335,
        "seek": 2968,
        "start": 44.12,
        "temperature": 0,
        "text": " stream.",
        "tokens": [
          51086,
          4309,
          13,
          51136
        ]
      },
      {
        "avg_logprob": -0.24642841755842962,
        "compression_ratio": 1.5985663082437276,
        "end": 46.56,
        "id": 8,
        "no_speech_prob": 0.0007096040062606335,
        "seek": 2968,
        "start": 45.12,
        "temperature": 0,
        "text": " I'm not so sure just yet.",
        "tokens": [
          51136,
          286,
          478,
          406,
          370,
          988,
          445,
          1939,
          13,
          51208
        ]
      },
      {
        "avg_logprob": -0.24642841755842962,
        "compression_ratio": 1.5985663082437276,
        "end": 51.019999999999996,
        "id": 9,
        "no_speech_prob": 0.0007096040062606335,
        "seek": 2968,
        "start": 46.56,
        "temperature": 0,
        "text": " But I'm going to stick with just marching squares for this first video.",
        "tokens": [
          51208,
          583,
          286,
          478,
          516,
          281,
          2897,
          365,
          445,
          30523,
          19368,
          337,
          341,
          700,
          960,
          13,
          51431
        ]
      },
      {
        "avg_logprob": -0.24642841755842962,
        "compression_ratio": 1.5985663082437276,
        "end": 55.24,
        "id": 10,
        "no_speech_prob": 0.0007096040062606335,
        "seek": 2968,
        "start": 51.019999999999996,
        "temperature": 0,
        "text": " If you're looking to do some research into this algorithm, the first place to look is",
        "tokens": [
          51431,
          759,
          291,
          434,
          1237,
          281,
          360,
          512,
          2132,
          666,
          341,
          9284,
          11,
          264,
          700,
          1081,
          281,
          574,
          307,
          51642
        ]
      },
      {
        "avg_logprob": -0.2560224810850273,
        "compression_ratio": 1.5211267605633803,
        "end": 62.440000000000005,
        "id": 11,
        "no_speech_prob": 0.008982633240520954,
        "seek": 5524,
        "start": 55.24,
        "temperature": 0,
        "text": " the 1987 paper, Marching Cubes, a High Resolution 3D Surface Construction Algorithm by William",
        "tokens": [
          50364,
          264,
          29008,
          3035,
          11,
          6129,
          278,
          21300,
          279,
          11,
          257,
          5229,
          5015,
          3386,
          805,
          35,
          36052,
          40017,
          35014,
          6819,
          76,
          538,
          6740,
          50724
        ]
      },
      {
        "avg_logprob": -0.2560224810850273,
        "compression_ratio": 1.5211267605633803,
        "end": 64.4,
        "id": 12,
        "no_speech_prob": 0.008982633240520954,
        "seek": 5524,
        "start": 62.440000000000005,
        "temperature": 0,
        "text": " Lorenzen and Harvey Klein.",
        "tokens": [
          50724,
          37162,
          2904,
          293,
          28796,
          33327,
          13,
          50822
        ]
      },
      {
        "avg_logprob": -0.2560224810850273,
        "compression_ratio": 1.5211267605633803,
        "end": 68.72,
        "id": 13,
        "no_speech_prob": 0.008982633240520954,
        "seek": 5524,
        "start": 64.4,
        "temperature": 0,
        "text": " Sebastian Lag has a wonderful Coding Adventure video about using the marching cubes algorithm",
        "tokens": [
          50822,
          31102,
          24886,
          575,
          257,
          3715,
          383,
          8616,
          26718,
          960,
          466,
          1228,
          264,
          30523,
          25415,
          9284,
          51038
        ]
      },
      {
        "avg_logprob": -0.2560224810850273,
        "compression_ratio": 1.5211267605633803,
        "end": 74.36,
        "id": 14,
        "no_speech_prob": 0.008982633240520954,
        "seek": 5524,
        "start": 68.72,
        "temperature": 0,
        "text": " to create an endless underwater world, as well as a video using marching squares for",
        "tokens": [
          51038,
          281,
          1884,
          364,
          16144,
          20967,
          1002,
          11,
          382,
          731,
          382,
          257,
          960,
          1228,
          30523,
          19368,
          337,
          51320
        ]
      },
      {
        "avg_logprob": -0.2560224810850273,
        "compression_ratio": 1.5211267605633803,
        "end": 79.36,
        "id": 15,
        "no_speech_prob": 0.008982633240520954,
        "seek": 5524,
        "start": 74.36,
        "temperature": 0,
        "text": " 2D to generate procedural cave patterns.",
        "tokens": [
          51320,
          568,
          35,
          281,
          8460,
          43951,
          11730,
          8294,
          13,
          51570
        ]
      },
      {
        "avg_logprob": -0.2560224810850273,
        "compression_ratio": 1.5211267605633803,
        "end": 85.08,
        "id": 16,
        "no_speech_prob": 0.008982633240520954,
        "seek": 5524,
        "start": 79.36,
        "temperature": 0,
        "text": " Coding Challenge number 28 on the Coding Train is about metaballs, which I've used a pixel",
        "tokens": [
          51570,
          383,
          8616,
          17517,
          1230,
          7562,
          322,
          264,
          383,
          8616,
          28029,
          307,
          466,
          1131,
          455,
          39655,
          11,
          597,
          286,
          600,
          1143,
          257,
          19261,
          51856
        ]
      },
      {
        "avg_logprob": -0.24807556962544938,
        "compression_ratio": 1.6875,
        "end": 86.96,
        "id": 17,
        "no_speech_prob": 0.036763276904821396,
        "seek": 8508,
        "start": 85.08,
        "temperature": 0,
        "text": " based approach to create those patterns.",
        "tokens": [
          50364,
          2361,
          3109,
          281,
          1884,
          729,
          8294,
          13,
          50458
        ]
      },
      {
        "avg_logprob": -0.24807556962544938,
        "compression_ratio": 1.6875,
        "end": 91.12,
        "id": 18,
        "no_speech_prob": 0.036763276904821396,
        "seek": 8508,
        "start": 86.96,
        "temperature": 0,
        "text": " But you can also use marching squares to create a similar effect.",
        "tokens": [
          50458,
          583,
          291,
          393,
          611,
          764,
          30523,
          19368,
          281,
          1884,
          257,
          2531,
          1802,
          13,
          50666
        ]
      },
      {
        "avg_logprob": -0.24807556962544938,
        "compression_ratio": 1.6875,
        "end": 97.14,
        "id": 19,
        "no_speech_prob": 0.036763276904821396,
        "seek": 8508,
        "start": 91.12,
        "temperature": 0,
        "text": " And Jamie Wong, Zero Wind Online, documents this process in a wonderful article about",
        "tokens": [
          50666,
          400,
          19309,
          41638,
          11,
          17182,
          6320,
          16930,
          11,
          8512,
          341,
          1399,
          294,
          257,
          3715,
          7222,
          466,
          50967
        ]
      },
      {
        "avg_logprob": -0.24807556962544938,
        "compression_ratio": 1.6875,
        "end": 101.4,
        "id": 20,
        "no_speech_prob": 0.036763276904821396,
        "seek": 8508,
        "start": 97.14,
        "temperature": 0,
        "text": " metaballs and marching squares from August 2014.",
        "tokens": [
          50967,
          1131,
          455,
          39655,
          293,
          30523,
          19368,
          490,
          6897,
          8227,
          13,
          51180
        ]
      },
      {
        "avg_logprob": -0.24807556962544938,
        "compression_ratio": 1.6875,
        "end": 107.6,
        "id": 21,
        "no_speech_prob": 0.036763276904821396,
        "seek": 8508,
        "start": 101.4,
        "temperature": 0,
        "text": " I'm going to demonstrate the marching squares algorithm just by using it on a noise space.",
        "tokens": [
          51180,
          286,
          478,
          516,
          281,
          11698,
          264,
          30523,
          19368,
          9284,
          445,
          538,
          1228,
          309,
          322,
          257,
          5658,
          1901,
          13,
          51490
        ]
      },
      {
        "avg_logprob": -0.24807556962544938,
        "compression_ratio": 1.6875,
        "end": 111,
        "id": 22,
        "no_speech_prob": 0.036763276904821396,
        "seek": 8508,
        "start": 107.6,
        "temperature": 0,
        "text": " I'm going to use the OpenSimplex noise algorithm, although you could certainly use a Worley",
        "tokens": [
          51490,
          286,
          478,
          516,
          281,
          764,
          264,
          7238,
          39392,
          18945,
          5658,
          9284,
          11,
          4878,
          291,
          727,
          3297,
          764,
          257,
          26363,
          3420,
          51660
        ]
      },
      {
        "avg_logprob": -0.24807556962544938,
        "compression_ratio": 1.6875,
        "end": 114.24,
        "id": 23,
        "no_speech_prob": 0.036763276904821396,
        "seek": 8508,
        "start": 111,
        "temperature": 0,
        "text": " noise or any of the other noise algorithms I've talked about.",
        "tokens": [
          51660,
          5658,
          420,
          604,
          295,
          264,
          661,
          5658,
          14642,
          286,
          600,
          2825,
          466,
          13,
          51822
        ]
      },
      {
        "avg_logprob": -0.26244489053138215,
        "compression_ratio": 1.6071428571428572,
        "end": 117.92,
        "id": 24,
        "no_speech_prob": 0.04467206820845604,
        "seek": 11424,
        "start": 114.39999999999999,
        "temperature": 0,
        "text": " And then once I finish that up, I'll try to return back to some of these ways that you",
        "tokens": [
          50372,
          400,
          550,
          1564,
          286,
          2413,
          300,
          493,
          11,
          286,
          603,
          853,
          281,
          2736,
          646,
          281,
          512,
          295,
          613,
          2098,
          300,
          291,
          50548
        ]
      },
      {
        "avg_logprob": -0.26244489053138215,
        "compression_ratio": 1.6071428571428572,
        "end": 122.36,
        "id": 25,
        "no_speech_prob": 0.04467206820845604,
        "seek": 11424,
        "start": 117.92,
        "temperature": 0,
        "text": " could expand it further into metaballs and terrain generation and 3D.",
        "tokens": [
          50548,
          727,
          5268,
          309,
          3052,
          666,
          1131,
          455,
          39655,
          293,
          17674,
          5125,
          293,
          805,
          35,
          13,
          50770
        ]
      },
      {
        "avg_logprob": -0.26244489053138215,
        "compression_ratio": 1.6071428571428572,
        "end": 126.6,
        "id": 26,
        "no_speech_prob": 0.04467206820845604,
        "seek": 11424,
        "start": 122.36,
        "temperature": 0,
        "text": " And then hopefully, you'll make lots of wonderful variations of this.",
        "tokens": [
          50770,
          400,
          550,
          4696,
          11,
          291,
          603,
          652,
          3195,
          295,
          3715,
          17840,
          295,
          341,
          13,
          50982
        ]
      },
      {
        "avg_logprob": -0.26244489053138215,
        "compression_ratio": 1.6071428571428572,
        "end": 129.96,
        "id": 27,
        "no_speech_prob": 0.04467206820845604,
        "seek": 11424,
        "start": 126.6,
        "temperature": 0,
        "text": " And I'll be able to look at those and show them on a live stream someday.",
        "tokens": [
          50982,
          400,
          286,
          603,
          312,
          1075,
          281,
          574,
          412,
          729,
          293,
          855,
          552,
          322,
          257,
          1621,
          4309,
          19412,
          13,
          51150
        ]
      },
      {
        "avg_logprob": -0.26244489053138215,
        "compression_ratio": 1.6071428571428572,
        "end": 132.56,
        "id": 28,
        "no_speech_prob": 0.04467206820845604,
        "seek": 11424,
        "start": 129.96,
        "temperature": 0,
        "text": " So here's how marching squares is described.",
        "tokens": [
          51150,
          407,
          510,
          311,
          577,
          30523,
          19368,
          307,
          7619,
          13,
          51280
        ]
      },
      {
        "avg_logprob": -0.26244489053138215,
        "compression_ratio": 1.6071428571428572,
        "end": 137.04,
        "id": 29,
        "no_speech_prob": 0.04467206820845604,
        "seek": 11424,
        "start": 132.56,
        "temperature": 0,
        "text": " A computer graphics algorithm that generates contours for a two dimensional scalar field",
        "tokens": [
          51280,
          316,
          3820,
          11837,
          9284,
          300,
          23815,
          660,
          5067,
          337,
          257,
          732,
          18795,
          39684,
          2519,
          51504
        ]
      },
      {
        "avg_logprob": -0.26244489053138215,
        "compression_ratio": 1.6071428571428572,
        "end": 139.92,
        "id": 30,
        "no_speech_prob": 0.04467206820845604,
        "seek": 11424,
        "start": 137.04,
        "temperature": 0,
        "text": " rectangular array of individual numerical values.",
        "tokens": [
          51504,
          31167,
          10225,
          295,
          2609,
          29054,
          4190,
          13,
          51648
        ]
      },
      {
        "avg_logprob": -0.26244489053138215,
        "compression_ratio": 1.6071428571428572,
        "end": 140.92,
        "id": 31,
        "no_speech_prob": 0.04467206820845604,
        "seek": 11424,
        "start": 139.92,
        "temperature": 0,
        "text": " What?",
        "tokens": [
          51648,
          708,
          30,
          51698
        ]
      },
      {
        "avg_logprob": -0.26244489053138215,
        "compression_ratio": 1.6071428571428572,
        "end": 143,
        "id": 32,
        "no_speech_prob": 0.04467206820845604,
        "seek": 11424,
        "start": 140.92,
        "temperature": 0,
        "text": " So let's try to break that down, what that means.",
        "tokens": [
          51698,
          407,
          718,
          311,
          853,
          281,
          1821,
          300,
          760,
          11,
          437,
          300,
          1355,
          13,
          51802
        ]
      },
      {
        "avg_logprob": -0.2551338389768439,
        "compression_ratio": 1.6527777777777777,
        "end": 146.92,
        "id": 33,
        "no_speech_prob": 0.006692556198686361,
        "seek": 14300,
        "start": 143,
        "temperature": 0,
        "text": " So the good news is this is a two dimensional algorithm and it's something that we can visualize",
        "tokens": [
          50364,
          407,
          264,
          665,
          2583,
          307,
          341,
          307,
          257,
          732,
          18795,
          9284,
          293,
          309,
          311,
          746,
          300,
          321,
          393,
          23273,
          50560
        ]
      },
      {
        "avg_logprob": -0.2551338389768439,
        "compression_ratio": 1.6527777777777777,
        "end": 148.52,
        "id": 34,
        "no_speech_prob": 0.006692556198686361,
        "seek": 14300,
        "start": 146.92,
        "temperature": 0,
        "text": " in a two dimensional space.",
        "tokens": [
          50560,
          294,
          257,
          732,
          18795,
          1901,
          13,
          50640
        ]
      },
      {
        "avg_logprob": -0.2551338389768439,
        "compression_ratio": 1.6527777777777777,
        "end": 152.32,
        "id": 35,
        "no_speech_prob": 0.006692556198686361,
        "seek": 14300,
        "start": 148.52,
        "temperature": 0,
        "text": " So a nice little P5 canvas or processing window.",
        "tokens": [
          50640,
          407,
          257,
          1481,
          707,
          430,
          20,
          16267,
          420,
          9007,
          4910,
          13,
          50830
        ]
      },
      {
        "avg_logprob": -0.2551338389768439,
        "compression_ratio": 1.6527777777777777,
        "end": 156.52,
        "id": 36,
        "no_speech_prob": 0.006692556198686361,
        "seek": 14300,
        "start": 152.32,
        "temperature": 0,
        "text": " I think I'm going to use processing, which I like to do in these Cabana videos, but always",
        "tokens": [
          50830,
          286,
          519,
          286,
          478,
          516,
          281,
          764,
          9007,
          11,
          597,
          286,
          411,
          281,
          360,
          294,
          613,
          14704,
          2095,
          2145,
          11,
          457,
          1009,
          51040
        ]
      },
      {
        "avg_logprob": -0.2551338389768439,
        "compression_ratio": 1.6527777777777777,
        "end": 160.84,
        "id": 37,
        "no_speech_prob": 0.006692556198686361,
        "seek": 14300,
        "start": 156.52,
        "temperature": 0,
        "text": " there will be a JavaScript P5.js version released as well that you can find in this video's",
        "tokens": [
          51040,
          456,
          486,
          312,
          257,
          15778,
          430,
          20,
          13,
          25530,
          3037,
          4736,
          382,
          731,
          300,
          291,
          393,
          915,
          294,
          341,
          960,
          311,
          51256
        ]
      },
      {
        "avg_logprob": -0.2551338389768439,
        "compression_ratio": 1.6527777777777777,
        "end": 161.84,
        "id": 38,
        "no_speech_prob": 0.006692556198686361,
        "seek": 14300,
        "start": 160.84,
        "temperature": 0,
        "text": " description.",
        "tokens": [
          51256,
          3855,
          13,
          51306
        ]
      },
      {
        "avg_logprob": -0.2551338389768439,
        "compression_ratio": 1.6527777777777777,
        "end": 163.28,
        "id": 39,
        "no_speech_prob": 0.006692556198686361,
        "seek": 14300,
        "start": 161.84,
        "temperature": 0,
        "text": " What does this mean?",
        "tokens": [
          51306,
          708,
          775,
          341,
          914,
          30,
          51378
        ]
      },
      {
        "avg_logprob": -0.2551338389768439,
        "compression_ratio": 1.6527777777777777,
        "end": 168.48,
        "id": 40,
        "no_speech_prob": 0.006692556198686361,
        "seek": 14300,
        "start": 163.28,
        "temperature": 0,
        "text": " The rectangular array of individual numerical values, a two dimensional scalar field.",
        "tokens": [
          51378,
          440,
          31167,
          10225,
          295,
          2609,
          29054,
          4190,
          11,
          257,
          732,
          18795,
          39684,
          2519,
          13,
          51638
        ]
      },
      {
        "avg_logprob": -0.23285482683752337,
        "compression_ratio": 1.7238805970149254,
        "end": 174.04,
        "id": 41,
        "no_speech_prob": 0.24502159655094147,
        "seek": 16848,
        "start": 168.48,
        "temperature": 0,
        "text": " Well, if I take my processing window and divide it into a two dimensional grid, we",
        "tokens": [
          50364,
          1042,
          11,
          498,
          286,
          747,
          452,
          9007,
          4910,
          293,
          9845,
          309,
          666,
          257,
          732,
          18795,
          10748,
          11,
          321,
          50642
        ]
      },
      {
        "avg_logprob": -0.23285482683752337,
        "compression_ratio": 1.7238805970149254,
        "end": 178.6,
        "id": 42,
        "no_speech_prob": 0.24502159655094147,
        "seek": 16848,
        "start": 174.04,
        "temperature": 0,
        "text": " could think of each cell of this grid as having a number.",
        "tokens": [
          50642,
          727,
          519,
          295,
          1184,
          2815,
          295,
          341,
          10748,
          382,
          1419,
          257,
          1230,
          13,
          50870
        ]
      },
      {
        "avg_logprob": -0.23285482683752337,
        "compression_ratio": 1.7238805970149254,
        "end": 182.51999999999998,
        "id": 43,
        "no_speech_prob": 0.24502159655094147,
        "seek": 16848,
        "start": 178.6,
        "temperature": 0,
        "text": " That's how we visualize two dimensional Perlin noise or Worley noise or all sorts of other",
        "tokens": [
          50870,
          663,
          311,
          577,
          321,
          23273,
          732,
          18795,
          3026,
          5045,
          5658,
          420,
          26363,
          3420,
          5658,
          420,
          439,
          7527,
          295,
          661,
          51066
        ]
      },
      {
        "avg_logprob": -0.23285482683752337,
        "compression_ratio": 1.7238805970149254,
        "end": 185.33999999999997,
        "id": 44,
        "no_speech_prob": 0.24502159655094147,
        "seek": 16848,
        "start": 182.51999999999998,
        "temperature": 0,
        "text": " algorithms that I've looked at on this, on the coding train.",
        "tokens": [
          51066,
          14642,
          300,
          286,
          600,
          2956,
          412,
          322,
          341,
          11,
          322,
          264,
          17720,
          3847,
          13,
          51207
        ]
      },
      {
        "avg_logprob": -0.23285482683752337,
        "compression_ratio": 1.7238805970149254,
        "end": 189.79999999999998,
        "id": 45,
        "no_speech_prob": 0.24502159655094147,
        "seek": 16848,
        "start": 185.33999999999997,
        "temperature": 0,
        "text": " But in order to make marching squares happen, I need to put a little twist on this.",
        "tokens": [
          51207,
          583,
          294,
          1668,
          281,
          652,
          30523,
          19368,
          1051,
          11,
          286,
          643,
          281,
          829,
          257,
          707,
          8203,
          322,
          341,
          13,
          51430
        ]
      },
      {
        "avg_logprob": -0.23285482683752337,
        "compression_ratio": 1.7238805970149254,
        "end": 194.32,
        "id": 46,
        "no_speech_prob": 0.24502159655094147,
        "seek": 16848,
        "start": 189.79999999999998,
        "temperature": 0,
        "text": " I don't actually want to think of the center of each one of these as having a number.",
        "tokens": [
          51430,
          286,
          500,
          380,
          767,
          528,
          281,
          519,
          295,
          264,
          3056,
          295,
          1184,
          472,
          295,
          613,
          382,
          1419,
          257,
          1230,
          13,
          51656
        ]
      },
      {
        "avg_logprob": -0.23809962990009678,
        "compression_ratio": 1.7729083665338645,
        "end": 201.4,
        "id": 47,
        "no_speech_prob": 0.0013249946059659123,
        "seek": 19432,
        "start": 194.32,
        "temperature": 0,
        "text": " I want to think of these spots here where each square, note the idea of square here,",
        "tokens": [
          50364,
          286,
          528,
          281,
          519,
          295,
          613,
          10681,
          510,
          689,
          1184,
          3732,
          11,
          3637,
          264,
          1558,
          295,
          3732,
          510,
          11,
          50718
        ]
      },
      {
        "avg_logprob": -0.23809962990009678,
        "compression_ratio": 1.7729083665338645,
        "end": 205.28,
        "id": 48,
        "no_speech_prob": 0.0013249946059659123,
        "seek": 19432,
        "start": 201.4,
        "temperature": 0,
        "text": " has four corners and each of those four corners represents a number.",
        "tokens": [
          50718,
          575,
          1451,
          12413,
          293,
          1184,
          295,
          729,
          1451,
          12413,
          8855,
          257,
          1230,
          13,
          50912
        ]
      },
      {
        "avg_logprob": -0.23809962990009678,
        "compression_ratio": 1.7729083665338645,
        "end": 207.35999999999999,
        "id": 49,
        "no_speech_prob": 0.0013249946059659123,
        "seek": 19432,
        "start": 205.28,
        "temperature": 0,
        "text": " Now, ultimately it's the same sort of thing.",
        "tokens": [
          50912,
          823,
          11,
          6284,
          309,
          311,
          264,
          912,
          1333,
          295,
          551,
          13,
          51016
        ]
      },
      {
        "avg_logprob": -0.23809962990009678,
        "compression_ratio": 1.7729083665338645,
        "end": 210.95999999999998,
        "id": 50,
        "no_speech_prob": 0.0013249946059659123,
        "seek": 19432,
        "start": 207.35999999999999,
        "temperature": 0,
        "text": " Like it's just a matter of where am I drawing my lines and where am I drawing my dots?",
        "tokens": [
          51016,
          1743,
          309,
          311,
          445,
          257,
          1871,
          295,
          689,
          669,
          286,
          6316,
          452,
          3876,
          293,
          689,
          669,
          286,
          6316,
          452,
          15026,
          30,
          51196
        ]
      },
      {
        "avg_logprob": -0.23809962990009678,
        "compression_ratio": 1.7729083665338645,
        "end": 216.51999999999998,
        "id": 51,
        "no_speech_prob": 0.0013249946059659123,
        "seek": 19432,
        "start": 210.95999999999998,
        "temperature": 0,
        "text": " But there is a 2D grid of numbers and each one of these spots has a value.",
        "tokens": [
          51196,
          583,
          456,
          307,
          257,
          568,
          35,
          10748,
          295,
          3547,
          293,
          1184,
          472,
          295,
          613,
          10681,
          575,
          257,
          2158,
          13,
          51474
        ]
      },
      {
        "avg_logprob": -0.23809962990009678,
        "compression_ratio": 1.7729083665338645,
        "end": 220.35999999999999,
        "id": 52,
        "no_speech_prob": 0.0013249946059659123,
        "seek": 19432,
        "start": 216.51999999999998,
        "temperature": 0,
        "text": " So let me first create a processing window that just draws little dots like this and",
        "tokens": [
          51474,
          407,
          718,
          385,
          700,
          1884,
          257,
          9007,
          4910,
          300,
          445,
          20045,
          707,
          15026,
          411,
          341,
          293,
          51666
        ]
      },
      {
        "avg_logprob": -0.28889918583695606,
        "compression_ratio": 1.5315315315315314,
        "end": 226.96,
        "id": 53,
        "no_speech_prob": 0.06852998584508896,
        "seek": 22036,
        "start": 220.36,
        "temperature": 0,
        "text": " maybe gives each one a random number between zero and one.",
        "tokens": [
          50364,
          1310,
          2709,
          1184,
          472,
          257,
          4974,
          1230,
          1296,
          4018,
          293,
          472,
          13,
          50694
        ]
      },
      {
        "avg_logprob": -0.28889918583695606,
        "compression_ratio": 1.5315315315315314,
        "end": 232.88000000000002,
        "id": 54,
        "no_speech_prob": 0.06852998584508896,
        "seek": 22036,
        "start": 226.96,
        "temperature": 0,
        "text": " I think I'll want some type of variable to keep track of what is the resolution, what's",
        "tokens": [
          50694,
          286,
          519,
          286,
          603,
          528,
          512,
          2010,
          295,
          7006,
          281,
          1066,
          2837,
          295,
          437,
          307,
          264,
          8669,
          11,
          437,
          311,
          50990
        ]
      },
      {
        "avg_logprob": -0.28889918583695606,
        "compression_ratio": 1.5315315315315314,
        "end": 235.56,
        "id": 55,
        "no_speech_prob": 0.06852998584508896,
        "seek": 22036,
        "start": 232.88000000000002,
        "temperature": 0,
        "text": " the distance between any given dot and the next dot.",
        "tokens": [
          50990,
          264,
          4560,
          1296,
          604,
          2212,
          5893,
          293,
          264,
          958,
          5893,
          13,
          51124
        ]
      },
      {
        "avg_logprob": -0.28889918583695606,
        "compression_ratio": 1.5315315315315314,
        "end": 241.44000000000003,
        "id": 56,
        "no_speech_prob": 0.06852998584508896,
        "seek": 22036,
        "start": 235.56,
        "temperature": 0,
        "text": " So if the pixel window is 600 by 400, maybe each dot is separated by 10 pixels.",
        "tokens": [
          51124,
          407,
          498,
          264,
          19261,
          4910,
          307,
          11849,
          538,
          8423,
          11,
          1310,
          1184,
          5893,
          307,
          12005,
          538,
          1266,
          18668,
          13,
          51418
        ]
      },
      {
        "avg_logprob": -0.28889918583695606,
        "compression_ratio": 1.5315315315315314,
        "end": 246.48000000000002,
        "id": 57,
        "no_speech_prob": 0.06852998584508896,
        "seek": 22036,
        "start": 241.44000000000003,
        "temperature": 0,
        "text": " I'll call that res, short for resolution, with a Z.",
        "tokens": [
          51418,
          286,
          603,
          818,
          300,
          725,
          11,
          2099,
          337,
          8669,
          11,
          365,
          257,
          1176,
          13,
          51670
        ]
      },
      {
        "avg_logprob": -0.28889918583695606,
        "compression_ratio": 1.5315315315315314,
        "end": 248.94000000000003,
        "id": 58,
        "no_speech_prob": 0.06852998584508896,
        "seek": 22036,
        "start": 246.48000000000002,
        "temperature": 0,
        "text": " Why not?",
        "tokens": [
          51670,
          1545,
          406,
          30,
          51793
        ]
      },
      {
        "avg_logprob": -0.22719190385606552,
        "compression_ratio": 1.526829268292683,
        "end": 256.46,
        "id": 59,
        "no_speech_prob": 0.0001088967765099369,
        "seek": 24894,
        "start": 248.94,
        "temperature": 0,
        "text": " So once I have a resolution, I want to know how many columns and how many rows.",
        "tokens": [
          50364,
          407,
          1564,
          286,
          362,
          257,
          8669,
          11,
          286,
          528,
          281,
          458,
          577,
          867,
          13766,
          293,
          577,
          867,
          13241,
          13,
          50740
        ]
      },
      {
        "avg_logprob": -0.22719190385606552,
        "compression_ratio": 1.526829268292683,
        "end": 260.04,
        "id": 60,
        "no_speech_prob": 0.0001088967765099369,
        "seek": 24894,
        "start": 256.46,
        "temperature": 0,
        "text": " And now I have my two-dimensional array, which is going to keep track of all these values",
        "tokens": [
          50740,
          400,
          586,
          286,
          362,
          452,
          732,
          12,
          18759,
          10225,
          11,
          597,
          307,
          516,
          281,
          1066,
          2837,
          295,
          439,
          613,
          4190,
          50919
        ]
      },
      {
        "avg_logprob": -0.22719190385606552,
        "compression_ratio": 1.526829268292683,
        "end": 264.78,
        "id": 61,
        "no_speech_prob": 0.0001088967765099369,
        "seek": 24894,
        "start": 260.04,
        "temperature": 0,
        "text": " in this scalar field.",
        "tokens": [
          50919,
          294,
          341,
          39684,
          2519,
          13,
          51156
        ]
      },
      {
        "avg_logprob": -0.22719190385606552,
        "compression_ratio": 1.526829268292683,
        "end": 273.58,
        "id": 62,
        "no_speech_prob": 0.0001088967765099369,
        "seek": 24894,
        "start": 264.78,
        "temperature": 0,
        "text": " So let's just write a loop, a nested loop that is, to look at every spot in the array.",
        "tokens": [
          51156,
          407,
          718,
          311,
          445,
          2464,
          257,
          6367,
          11,
          257,
          15646,
          292,
          6367,
          300,
          307,
          11,
          281,
          574,
          412,
          633,
          4008,
          294,
          264,
          10225,
          13,
          51596
        ]
      },
      {
        "avg_logprob": -0.22719190385606552,
        "compression_ratio": 1.526829268292683,
        "end": 277.98,
        "id": 63,
        "no_speech_prob": 0.0001088967765099369,
        "seek": 24894,
        "start": 273.58,
        "temperature": 0,
        "text": " Oh, and I can just say random one.",
        "tokens": [
          51596,
          876,
          11,
          293,
          286,
          393,
          445,
          584,
          4974,
          472,
          13,
          51816
        ]
      },
      {
        "avg_logprob": -0.2906856322556399,
        "compression_ratio": 1.5477386934673367,
        "end": 285.74,
        "id": 64,
        "no_speech_prob": 0.027168212458491325,
        "seek": 27798,
        "start": 278.02000000000004,
        "temperature": 0,
        "text": " Then I'm going to do that exact same nested loop in draw to visualize the field.",
        "tokens": [
          50366,
          1396,
          286,
          478,
          516,
          281,
          360,
          300,
          1900,
          912,
          15646,
          292,
          6367,
          294,
          2642,
          281,
          23273,
          264,
          2519,
          13,
          50752
        ]
      },
      {
        "avg_logprob": -0.2906856322556399,
        "compression_ratio": 1.5477386934673367,
        "end": 295.3,
        "id": 65,
        "no_speech_prob": 0.027168212458491325,
        "seek": 27798,
        "start": 285.74,
        "temperature": 0,
        "text": " I'm going to visualize it as a stroke color, field times 255, point at i times res, j times",
        "tokens": [
          50752,
          286,
          478,
          516,
          281,
          23273,
          309,
          382,
          257,
          12403,
          2017,
          11,
          2519,
          1413,
          3552,
          20,
          11,
          935,
          412,
          741,
          1413,
          725,
          11,
          361,
          1413,
          51230
        ]
      },
      {
        "avg_logprob": -0.2906856322556399,
        "compression_ratio": 1.5477386934673367,
        "end": 296.46000000000004,
        "id": 66,
        "no_speech_prob": 0.027168212458491325,
        "seek": 27798,
        "start": 295.3,
        "temperature": 0,
        "text": " res, right?",
        "tokens": [
          51230,
          725,
          11,
          558,
          30,
          51288
        ]
      },
      {
        "avg_logprob": -0.2906856322556399,
        "compression_ratio": 1.5477386934673367,
        "end": 300.38,
        "id": 67,
        "no_speech_prob": 0.027168212458491325,
        "seek": 27798,
        "start": 296.46000000000004,
        "temperature": 0,
        "text": " Because there's this many columns spaced out by resolution.",
        "tokens": [
          51288,
          1436,
          456,
          311,
          341,
          867,
          13766,
          43766,
          484,
          538,
          8669,
          13,
          51484
        ]
      },
      {
        "avg_logprob": -0.2906856322556399,
        "compression_ratio": 1.5477386934673367,
        "end": 302.66,
        "id": 68,
        "no_speech_prob": 0.027168212458491325,
        "seek": 27798,
        "start": 300.38,
        "temperature": 0,
        "text": " And let's see what that looks like.",
        "tokens": [
          51484,
          400,
          718,
          311,
          536,
          437,
          300,
          1542,
          411,
          13,
          51598
        ]
      },
      {
        "avg_logprob": -0.2906856322556399,
        "compression_ratio": 1.5477386934673367,
        "end": 304.74,
        "id": 69,
        "no_speech_prob": 0.027168212458491325,
        "seek": 27798,
        "start": 302.66,
        "temperature": 0,
        "text": " Okay, we can see that here.",
        "tokens": [
          51598,
          1033,
          11,
          321,
          393,
          536,
          300,
          510,
          13,
          51702
        ]
      },
      {
        "avg_logprob": -0.22793848472729064,
        "compression_ratio": 1.5884476534296028,
        "end": 309.42,
        "id": 70,
        "no_speech_prob": 0.00011959837866015732,
        "seek": 30474,
        "start": 304.74,
        "temperature": 0,
        "text": " Now let me make those a little bit bigger.",
        "tokens": [
          50364,
          823,
          718,
          385,
          652,
          729,
          257,
          707,
          857,
          3801,
          13,
          50598
        ]
      },
      {
        "avg_logprob": -0.22793848472729064,
        "compression_ratio": 1.5884476534296028,
        "end": 313.98,
        "id": 71,
        "no_speech_prob": 0.00011959837866015732,
        "seek": 30474,
        "start": 309.42,
        "temperature": 0,
        "text": " And we can see, here's my two-dimensional scalar field, or rectangular array of numerical",
        "tokens": [
          50598,
          400,
          321,
          393,
          536,
          11,
          510,
          311,
          452,
          732,
          12,
          18759,
          39684,
          2519,
          11,
          420,
          31167,
          10225,
          295,
          29054,
          50826
        ]
      },
      {
        "avg_logprob": -0.22793848472729064,
        "compression_ratio": 1.5884476534296028,
        "end": 314.98,
        "id": 72,
        "no_speech_prob": 0.00011959837866015732,
        "seek": 30474,
        "start": 313.98,
        "temperature": 0,
        "text": " values.",
        "tokens": [
          50826,
          4190,
          13,
          50876
        ]
      },
      {
        "avg_logprob": -0.22793848472729064,
        "compression_ratio": 1.5884476534296028,
        "end": 321.14,
        "id": 73,
        "no_speech_prob": 0.00011959837866015732,
        "seek": 30474,
        "start": 314.98,
        "temperature": 0,
        "text": " So the idea of marching squares is, what would be some algorithm to find contours and patterns",
        "tokens": [
          50876,
          407,
          264,
          1558,
          295,
          30523,
          19368,
          307,
          11,
          437,
          576,
          312,
          512,
          9284,
          281,
          915,
          660,
          5067,
          293,
          8294,
          51184
        ]
      },
      {
        "avg_logprob": -0.22793848472729064,
        "compression_ratio": 1.5884476534296028,
        "end": 323.34000000000003,
        "id": 74,
        "no_speech_prob": 0.00011959837866015732,
        "seek": 30474,
        "start": 321.14,
        "temperature": 0,
        "text": " in this array of numbers?",
        "tokens": [
          51184,
          294,
          341,
          10225,
          295,
          3547,
          30,
          51294
        ]
      },
      {
        "avg_logprob": -0.22793848472729064,
        "compression_ratio": 1.5884476534296028,
        "end": 327.34000000000003,
        "id": 75,
        "no_speech_prob": 0.00011959837866015732,
        "seek": 30474,
        "start": 323.34000000000003,
        "temperature": 0,
        "text": " And I think just to make this easier to see, I'm going to just increase the resolution",
        "tokens": [
          51294,
          400,
          286,
          519,
          445,
          281,
          652,
          341,
          3571,
          281,
          536,
          11,
          286,
          478,
          516,
          281,
          445,
          3488,
          264,
          8669,
          51494
        ]
      },
      {
        "avg_logprob": -0.22793848472729064,
        "compression_ratio": 1.5884476534296028,
        "end": 328.34000000000003,
        "id": 76,
        "no_speech_prob": 0.00011959837866015732,
        "seek": 30474,
        "start": 327.34000000000003,
        "temperature": 0,
        "text": " to 20.",
        "tokens": [
          51494,
          281,
          945,
          13,
          51544
        ]
      },
      {
        "avg_logprob": -0.22793848472729064,
        "compression_ratio": 1.5884476534296028,
        "end": 333.86,
        "id": 77,
        "no_speech_prob": 0.00011959837866015732,
        "seek": 30474,
        "start": 328.34000000000003,
        "temperature": 0,
        "text": " Let's actually have the stroke weight be the resolution times like 0.2 or something.",
        "tokens": [
          51544,
          961,
          311,
          767,
          362,
          264,
          12403,
          3364,
          312,
          264,
          8669,
          1413,
          411,
          1958,
          13,
          17,
          420,
          746,
          13,
          51820
        ]
      },
      {
        "avg_logprob": -0.2076481032545549,
        "compression_ratio": 1.67524115755627,
        "end": 337.46000000000004,
        "id": 78,
        "no_speech_prob": 0.0000748461825423874,
        "seek": 33386,
        "start": 334.58000000000004,
        "temperature": 0,
        "text": " And actually make that more like 0.4.",
        "tokens": [
          50400,
          400,
          767,
          652,
          300,
          544,
          411,
          1958,
          13,
          19,
          13,
          50544
        ]
      },
      {
        "avg_logprob": -0.2076481032545549,
        "compression_ratio": 1.67524115755627,
        "end": 338.46000000000004,
        "id": 79,
        "no_speech_prob": 0.0000748461825423874,
        "seek": 33386,
        "start": 337.46000000000004,
        "temperature": 0,
        "text": " And there we go.",
        "tokens": [
          50544,
          400,
          456,
          321,
          352,
          13,
          50594
        ]
      },
      {
        "avg_logprob": -0.2076481032545549,
        "compression_ratio": 1.67524115755627,
        "end": 341.90000000000003,
        "id": 80,
        "no_speech_prob": 0.0000748461825423874,
        "seek": 33386,
        "start": 338.46000000000004,
        "temperature": 0,
        "text": " So I just wanted to be able to see this a bit more clearly at higher resolution.",
        "tokens": [
          50594,
          407,
          286,
          445,
          1415,
          281,
          312,
          1075,
          281,
          536,
          341,
          257,
          857,
          544,
          4448,
          412,
          2946,
          8669,
          13,
          50766
        ]
      },
      {
        "avg_logprob": -0.2076481032545549,
        "compression_ratio": 1.67524115755627,
        "end": 347.34000000000003,
        "id": 81,
        "no_speech_prob": 0.0000748461825423874,
        "seek": 33386,
        "start": 341.90000000000003,
        "temperature": 0,
        "text": " So to demonstrate how this works, I think it would be actually easier for me to consider",
        "tokens": [
          50766,
          407,
          281,
          11698,
          577,
          341,
          1985,
          11,
          286,
          519,
          309,
          576,
          312,
          767,
          3571,
          337,
          385,
          281,
          1949,
          51038
        ]
      },
      {
        "avg_logprob": -0.2076481032545549,
        "compression_ratio": 1.67524115755627,
        "end": 351.7,
        "id": 82,
        "no_speech_prob": 0.0000748461825423874,
        "seek": 33386,
        "start": 347.34000000000003,
        "temperature": 0,
        "text": " each one of these numerical values as just a 0 or a 1.",
        "tokens": [
          51038,
          1184,
          472,
          295,
          613,
          29054,
          4190,
          382,
          445,
          257,
          1958,
          420,
          257,
          502,
          13,
          51256
        ]
      },
      {
        "avg_logprob": -0.2076481032545549,
        "compression_ratio": 1.67524115755627,
        "end": 355.90000000000003,
        "id": 83,
        "no_speech_prob": 0.0000748461825423874,
        "seek": 33386,
        "start": 351.7,
        "temperature": 0,
        "text": " Later I'm going to describe what you can do once you have a floating point continuous",
        "tokens": [
          51256,
          11965,
          286,
          478,
          516,
          281,
          6786,
          437,
          291,
          393,
          360,
          1564,
          291,
          362,
          257,
          12607,
          935,
          10957,
          51466
        ]
      },
      {
        "avg_logprob": -0.2076481032545549,
        "compression_ratio": 1.67524115755627,
        "end": 358.86,
        "id": 84,
        "no_speech_prob": 0.0000748461825423874,
        "seek": 33386,
        "start": 355.90000000000003,
        "temperature": 0,
        "text": " values and how that affects the marching squares algorithm.",
        "tokens": [
          51466,
          4190,
          293,
          577,
          300,
          11807,
          264,
          30523,
          19368,
          9284,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.2076481032545549,
        "compression_ratio": 1.67524115755627,
        "end": 361.44,
        "id": 85,
        "no_speech_prob": 0.0000748461825423874,
        "seek": 33386,
        "start": 358.86,
        "temperature": 0,
        "text": " But it's going to be much simpler to start just with 0s and 1s.",
        "tokens": [
          51614,
          583,
          309,
          311,
          516,
          281,
          312,
          709,
          18587,
          281,
          722,
          445,
          365,
          1958,
          82,
          293,
          502,
          82,
          13,
          51743
        ]
      },
      {
        "avg_logprob": -0.2076481032545549,
        "compression_ratio": 1.67524115755627,
        "end": 362.90000000000003,
        "id": 86,
        "no_speech_prob": 0.0000748461825423874,
        "seek": 33386,
        "start": 361.44,
        "temperature": 0,
        "text": " So let me actually change that.",
        "tokens": [
          51743,
          407,
          718,
          385,
          767,
          1319,
          300,
          13,
          51816
        ]
      },
      {
        "avg_logprob": -0.2444893279165592,
        "compression_ratio": 1.6650943396226414,
        "end": 365.94,
        "id": 87,
        "no_speech_prob": 0.0017821553628891706,
        "seek": 36290,
        "start": 362.94,
        "temperature": 0,
        "text": " So I'm going to say floor random 2.",
        "tokens": [
          50366,
          407,
          286,
          478,
          516,
          281,
          584,
          4123,
          4974,
          568,
          13,
          50516
        ]
      },
      {
        "avg_logprob": -0.2444893279165592,
        "compression_ratio": 1.6650943396226414,
        "end": 367.53999999999996,
        "id": 88,
        "no_speech_prob": 0.0017821553628891706,
        "seek": 36290,
        "start": 365.94,
        "temperature": 0,
        "text": " And I'm going to change this to an integer.",
        "tokens": [
          50516,
          400,
          286,
          478,
          516,
          281,
          1319,
          341,
          281,
          364,
          24922,
          13,
          50596
        ]
      },
      {
        "avg_logprob": -0.2444893279165592,
        "compression_ratio": 1.6650943396226414,
        "end": 370.94,
        "id": 89,
        "no_speech_prob": 0.0017821553628891706,
        "seek": 36290,
        "start": 367.53999999999996,
        "temperature": 0,
        "text": " I'm going to come back to floats later, but let's just leave it as an integer right now.",
        "tokens": [
          50596,
          286,
          478,
          516,
          281,
          808,
          646,
          281,
          37878,
          1780,
          11,
          457,
          718,
          311,
          445,
          1856,
          309,
          382,
          364,
          24922,
          558,
          586,
          13,
          50766
        ]
      },
      {
        "avg_logprob": -0.2444893279165592,
        "compression_ratio": 1.6650943396226414,
        "end": 373.02,
        "id": 90,
        "no_speech_prob": 0.0017821553628891706,
        "seek": 36290,
        "start": 370.94,
        "temperature": 0,
        "text": " Let's let the background be gray so I can see.",
        "tokens": [
          50766,
          961,
          311,
          718,
          264,
          3678,
          312,
          10855,
          370,
          286,
          393,
          536,
          13,
          50870
        ]
      },
      {
        "avg_logprob": -0.2444893279165592,
        "compression_ratio": 1.6650943396226414,
        "end": 376.35999999999996,
        "id": 91,
        "no_speech_prob": 0.0017821553628891706,
        "seek": 36290,
        "start": 373.02,
        "temperature": 0,
        "text": " Whoops, and this has to be integers.",
        "tokens": [
          50870,
          45263,
          11,
          293,
          341,
          575,
          281,
          312,
          41674,
          13,
          51037
        ]
      },
      {
        "avg_logprob": -0.2444893279165592,
        "compression_ratio": 1.6650943396226414,
        "end": 380.02,
        "id": 92,
        "no_speech_prob": 0.0017821553628891706,
        "seek": 36290,
        "start": 376.35999999999996,
        "temperature": 0,
        "text": " So now I can see I have just black and white dot.",
        "tokens": [
          51037,
          407,
          586,
          286,
          393,
          536,
          286,
          362,
          445,
          2211,
          293,
          2418,
          5893,
          13,
          51220
        ]
      },
      {
        "avg_logprob": -0.2444893279165592,
        "compression_ratio": 1.6650943396226414,
        "end": 387.53999999999996,
        "id": 93,
        "no_speech_prob": 0.0017821553628891706,
        "seek": 36290,
        "start": 380.02,
        "temperature": 0,
        "text": " To figure this out, let's look at just one square.",
        "tokens": [
          51220,
          1407,
          2573,
          341,
          484,
          11,
          718,
          311,
          574,
          412,
          445,
          472,
          3732,
          13,
          51596
        ]
      },
      {
        "avg_logprob": -0.23704152948716106,
        "compression_ratio": 1.847457627118644,
        "end": 395.1,
        "id": 94,
        "no_speech_prob": 0.09945507347583771,
        "seek": 38754,
        "start": 387.54,
        "temperature": 0,
        "text": " Each one of these corners, we'll call them maybe A, B, C, and D just as a naming device.",
        "tokens": [
          50364,
          6947,
          472,
          295,
          613,
          12413,
          11,
          321,
          603,
          818,
          552,
          1310,
          316,
          11,
          363,
          11,
          383,
          11,
          293,
          413,
          445,
          382,
          257,
          25290,
          4302,
          13,
          50742
        ]
      },
      {
        "avg_logprob": -0.23704152948716106,
        "compression_ratio": 1.847457627118644,
        "end": 397.42,
        "id": 95,
        "no_speech_prob": 0.09945507347583771,
        "seek": 38754,
        "start": 395.1,
        "temperature": 0,
        "text": " Each one of these corners has a value of 0 or 1.",
        "tokens": [
          50742,
          6947,
          472,
          295,
          613,
          12413,
          575,
          257,
          2158,
          295,
          1958,
          420,
          502,
          13,
          50858
        ]
      },
      {
        "avg_logprob": -0.23704152948716106,
        "compression_ratio": 1.847457627118644,
        "end": 401.08000000000004,
        "id": 96,
        "no_speech_prob": 0.09945507347583771,
        "seek": 38754,
        "start": 397.42,
        "temperature": 0,
        "text": " So let's just say for the sake of argument, this one is 1.",
        "tokens": [
          50858,
          407,
          718,
          311,
          445,
          584,
          337,
          264,
          9717,
          295,
          6770,
          11,
          341,
          472,
          307,
          502,
          13,
          51041
        ]
      },
      {
        "avg_logprob": -0.23704152948716106,
        "compression_ratio": 1.847457627118644,
        "end": 403.44,
        "id": 97,
        "no_speech_prob": 0.09945507347583771,
        "seek": 38754,
        "start": 401.08000000000004,
        "temperature": 0,
        "text": " And maybe I'll visualize that by filling it in.",
        "tokens": [
          51041,
          400,
          1310,
          286,
          603,
          23273,
          300,
          538,
          10623,
          309,
          294,
          13,
          51159
        ]
      },
      {
        "avg_logprob": -0.23704152948716106,
        "compression_ratio": 1.847457627118644,
        "end": 404.44,
        "id": 98,
        "no_speech_prob": 0.09945507347583771,
        "seek": 38754,
        "start": 403.44,
        "temperature": 0,
        "text": " And this one is 2.",
        "tokens": [
          51159,
          400,
          341,
          472,
          307,
          568,
          13,
          51209
        ]
      },
      {
        "avg_logprob": -0.23704152948716106,
        "compression_ratio": 1.847457627118644,
        "end": 405.44,
        "id": 99,
        "no_speech_prob": 0.09945507347583771,
        "seek": 38754,
        "start": 404.44,
        "temperature": 0,
        "text": " Sorry, this one is 0.",
        "tokens": [
          51209,
          4919,
          11,
          341,
          472,
          307,
          1958,
          13,
          51259
        ]
      },
      {
        "avg_logprob": -0.23704152948716106,
        "compression_ratio": 1.847457627118644,
        "end": 406.44,
        "id": 100,
        "no_speech_prob": 0.09945507347583771,
        "seek": 38754,
        "start": 405.44,
        "temperature": 0,
        "text": " This one is 0.",
        "tokens": [
          51259,
          639,
          472,
          307,
          1958,
          13,
          51309
        ]
      },
      {
        "avg_logprob": -0.23704152948716106,
        "compression_ratio": 1.847457627118644,
        "end": 407.44,
        "id": 101,
        "no_speech_prob": 0.09945507347583771,
        "seek": 38754,
        "start": 406.44,
        "temperature": 0,
        "text": " And this one is 0.",
        "tokens": [
          51309,
          400,
          341,
          472,
          307,
          1958,
          13,
          51359
        ]
      },
      {
        "avg_logprob": -0.23704152948716106,
        "compression_ratio": 1.847457627118644,
        "end": 410.70000000000005,
        "id": 102,
        "no_speech_prob": 0.09945507347583771,
        "seek": 38754,
        "start": 407.44,
        "temperature": 0,
        "text": " So I'm going to just consider, let me draw that again.",
        "tokens": [
          51359,
          407,
          286,
          478,
          516,
          281,
          445,
          1949,
          11,
          718,
          385,
          2642,
          300,
          797,
          13,
          51522
        ]
      },
      {
        "avg_logprob": -0.23704152948716106,
        "compression_ratio": 1.847457627118644,
        "end": 413.54,
        "id": 103,
        "no_speech_prob": 0.09945507347583771,
        "seek": 38754,
        "start": 410.70000000000005,
        "temperature": 0,
        "text": " I'm going to consider just this one particular configuration.",
        "tokens": [
          51522,
          286,
          478,
          516,
          281,
          1949,
          445,
          341,
          472,
          1729,
          11694,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.24044490310381045,
        "compression_ratio": 1.7256637168141593,
        "end": 419.98,
        "id": 104,
        "no_speech_prob": 0.000709667569026351,
        "seek": 41354,
        "start": 413.94,
        "temperature": 0,
        "text": " Well, it so happens that this particular configuration, the way that I choose to visualize it is by",
        "tokens": [
          50384,
          1042,
          11,
          309,
          370,
          2314,
          300,
          341,
          1729,
          11694,
          11,
          264,
          636,
          300,
          286,
          2826,
          281,
          23273,
          309,
          307,
          538,
          50686
        ]
      },
      {
        "avg_logprob": -0.24044490310381045,
        "compression_ratio": 1.7256637168141593,
        "end": 421.78000000000003,
        "id": 105,
        "no_speech_prob": 0.000709667569026351,
        "seek": 41354,
        "start": 419.98,
        "temperature": 0,
        "text": " drawing a line here.",
        "tokens": [
          50686,
          6316,
          257,
          1622,
          510,
          13,
          50776
        ]
      },
      {
        "avg_logprob": -0.24044490310381045,
        "compression_ratio": 1.7256637168141593,
        "end": 425.90000000000003,
        "id": 106,
        "no_speech_prob": 0.000709667569026351,
        "seek": 41354,
        "start": 421.78000000000003,
        "temperature": 0,
        "text": " We can see that all of these are empty, but this one is full.",
        "tokens": [
          50776,
          492,
          393,
          536,
          300,
          439,
          295,
          613,
          366,
          6707,
          11,
          457,
          341,
          472,
          307,
          1577,
          13,
          50982
        ]
      },
      {
        "avg_logprob": -0.24044490310381045,
        "compression_ratio": 1.7256637168141593,
        "end": 429.74,
        "id": 107,
        "no_speech_prob": 0.000709667569026351,
        "seek": 41354,
        "start": 425.90000000000003,
        "temperature": 0,
        "text": " Therefore, the line goes across from the midpoint here to the midpoint here.",
        "tokens": [
          50982,
          7504,
          11,
          264,
          1622,
          1709,
          2108,
          490,
          264,
          2062,
          6053,
          510,
          281,
          264,
          2062,
          6053,
          510,
          13,
          51174
        ]
      },
      {
        "avg_logprob": -0.24044490310381045,
        "compression_ratio": 1.7256637168141593,
        "end": 434.24,
        "id": 108,
        "no_speech_prob": 0.000709667569026351,
        "seek": 41354,
        "start": 429.74,
        "temperature": 0,
        "text": " I could show you another one.",
        "tokens": [
          51174,
          286,
          727,
          855,
          291,
          1071,
          472,
          13,
          51399
        ]
      },
      {
        "avg_logprob": -0.24044490310381045,
        "compression_ratio": 1.7256637168141593,
        "end": 436.18,
        "id": 109,
        "no_speech_prob": 0.000709667569026351,
        "seek": 41354,
        "start": 434.24,
        "temperature": 0,
        "text": " Maybe from this, you could guess.",
        "tokens": [
          51399,
          2704,
          490,
          341,
          11,
          291,
          727,
          2041,
          13,
          51496
        ]
      },
      {
        "avg_logprob": -0.24044490310381045,
        "compression_ratio": 1.7256637168141593,
        "end": 439.5,
        "id": 110,
        "no_speech_prob": 0.000709667569026351,
        "seek": 41354,
        "start": 436.18,
        "temperature": 0,
        "text": " This one is full and this one is full, so I want to separate that.",
        "tokens": [
          51496,
          639,
          472,
          307,
          1577,
          293,
          341,
          472,
          307,
          1577,
          11,
          370,
          286,
          528,
          281,
          4994,
          300,
          13,
          51662
        ]
      },
      {
        "avg_logprob": -0.24890901171971883,
        "compression_ratio": 1.7569721115537849,
        "end": 444.58,
        "id": 111,
        "no_speech_prob": 0.06852579861879349,
        "seek": 43950,
        "start": 439.5,
        "temperature": 0,
        "text": " So the idea here is that basically whichever ones are on or off, I want to separate the",
        "tokens": [
          50364,
          407,
          264,
          1558,
          510,
          307,
          300,
          1936,
          24123,
          2306,
          366,
          322,
          420,
          766,
          11,
          286,
          528,
          281,
          4994,
          264,
          50618
        ]
      },
      {
        "avg_logprob": -0.24890901171971883,
        "compression_ratio": 1.7569721115537849,
        "end": 447.42,
        "id": 112,
        "no_speech_prob": 0.06852579861879349,
        "seek": 43950,
        "start": 444.58,
        "temperature": 0,
        "text": " ones that are on from the ones that are off.",
        "tokens": [
          50618,
          2306,
          300,
          366,
          322,
          490,
          264,
          2306,
          300,
          366,
          766,
          13,
          50760
        ]
      },
      {
        "avg_logprob": -0.24890901171971883,
        "compression_ratio": 1.7569721115537849,
        "end": 451.9,
        "id": 113,
        "no_speech_prob": 0.06852579861879349,
        "seek": 43950,
        "start": 447.42,
        "temperature": 0,
        "text": " So for example, if this was full and this was full, and by full, I don't know what full",
        "tokens": [
          50760,
          407,
          337,
          1365,
          11,
          498,
          341,
          390,
          1577,
          293,
          341,
          390,
          1577,
          11,
          293,
          538,
          1577,
          11,
          286,
          500,
          380,
          458,
          437,
          1577,
          50984
        ]
      },
      {
        "avg_logprob": -0.24890901171971883,
        "compression_ratio": 1.7569721115537849,
        "end": 452.9,
        "id": 114,
        "no_speech_prob": 0.06852579861879349,
        "seek": 43950,
        "start": 451.9,
        "temperature": 0,
        "text": " means.",
        "tokens": [
          50984,
          1355,
          13,
          51034
        ]
      },
      {
        "avg_logprob": -0.24890901171971883,
        "compression_ratio": 1.7569721115537849,
        "end": 454.68,
        "id": 115,
        "no_speech_prob": 0.06852579861879349,
        "seek": 43950,
        "start": 452.9,
        "temperature": 0,
        "text": " I should say this were 1, not 0.",
        "tokens": [
          51034,
          286,
          820,
          584,
          341,
          645,
          502,
          11,
          406,
          1958,
          13,
          51123
        ]
      },
      {
        "avg_logprob": -0.24890901171971883,
        "compression_ratio": 1.7569721115537849,
        "end": 457.58,
        "id": 116,
        "no_speech_prob": 0.06852579861879349,
        "seek": 43950,
        "start": 454.68,
        "temperature": 0,
        "text": " Then the line would actually end up here.",
        "tokens": [
          51123,
          1396,
          264,
          1622,
          576,
          767,
          917,
          493,
          510,
          13,
          51268
        ]
      },
      {
        "avg_logprob": -0.24890901171971883,
        "compression_ratio": 1.7569721115537849,
        "end": 461.06,
        "id": 117,
        "no_speech_prob": 0.06852579861879349,
        "seek": 43950,
        "start": 457.58,
        "temperature": 0,
        "text": " And now, how many possible scenarios are there?",
        "tokens": [
          51268,
          400,
          586,
          11,
          577,
          867,
          1944,
          15077,
          366,
          456,
          30,
          51442
        ]
      },
      {
        "avg_logprob": -0.24890901171971883,
        "compression_ratio": 1.7569721115537849,
        "end": 468.9,
        "id": 118,
        "no_speech_prob": 0.06852579861879349,
        "seek": 43950,
        "start": 461.06,
        "temperature": 0,
        "text": " Well, if there are four corners and each corner could be on or off, a 0 or a 1 in each one",
        "tokens": [
          51442,
          1042,
          11,
          498,
          456,
          366,
          1451,
          12413,
          293,
          1184,
          4538,
          727,
          312,
          322,
          420,
          766,
          11,
          257,
          1958,
          420,
          257,
          502,
          294,
          1184,
          472,
          51834
        ]
      },
      {
        "avg_logprob": -0.2840282856917181,
        "compression_ratio": 1.5191489361702128,
        "end": 477.65999999999997,
        "id": 119,
        "no_speech_prob": 0.12420070171356201,
        "seek": 46890,
        "start": 468.9,
        "temperature": 0,
        "text": " of these spots, whoops, 000 all the way up to 1111, well, this is like a four-bit number.",
        "tokens": [
          50364,
          295,
          613,
          10681,
          11,
          567,
          3370,
          11,
          13711,
          439,
          264,
          636,
          493,
          281,
          2975,
          5348,
          11,
          731,
          11,
          341,
          307,
          411,
          257,
          1451,
          12,
          5260,
          1230,
          13,
          50802
        ]
      },
      {
        "avg_logprob": -0.2840282856917181,
        "compression_ratio": 1.5191489361702128,
        "end": 480.26,
        "id": 120,
        "no_speech_prob": 0.12420070171356201,
        "seek": 46890,
        "start": 477.65999999999997,
        "temperature": 0,
        "text": " There are four bits, four 0s or 1s.",
        "tokens": [
          50802,
          821,
          366,
          1451,
          9239,
          11,
          1451,
          1958,
          82,
          420,
          502,
          82,
          13,
          50932
        ]
      },
      {
        "avg_logprob": -0.2840282856917181,
        "compression_ratio": 1.5191489361702128,
        "end": 483.17999999999995,
        "id": 121,
        "no_speech_prob": 0.12420070171356201,
        "seek": 46890,
        "start": 480.26,
        "temperature": 0,
        "text": " Two to the fourth power equals what?",
        "tokens": [
          50932,
          4453,
          281,
          264,
          6409,
          1347,
          6915,
          437,
          30,
          51078
        ]
      },
      {
        "avg_logprob": -0.2840282856917181,
        "compression_ratio": 1.5191489361702128,
        "end": 484.21999999999997,
        "id": 122,
        "no_speech_prob": 0.12420070171356201,
        "seek": 46890,
        "start": 483.17999999999995,
        "temperature": 0,
        "text": " That's 16.",
        "tokens": [
          51078,
          663,
          311,
          3165,
          13,
          51130
        ]
      },
      {
        "avg_logprob": -0.2840282856917181,
        "compression_ratio": 1.5191489361702128,
        "end": 486.21999999999997,
        "id": 123,
        "no_speech_prob": 0.12420070171356201,
        "seek": 46890,
        "start": 484.21999999999997,
        "temperature": 0,
        "text": " So there are 16 possible configurations.",
        "tokens": [
          51130,
          407,
          456,
          366,
          3165,
          1944,
          31493,
          13,
          51230
        ]
      },
      {
        "avg_logprob": -0.2840282856917181,
        "compression_ratio": 1.5191489361702128,
        "end": 488.09999999999997,
        "id": 124,
        "no_speech_prob": 0.12420070171356201,
        "seek": 46890,
        "start": 486.21999999999997,
        "temperature": 0,
        "text": " Look at Gloria's water.",
        "tokens": [
          51230,
          2053,
          412,
          34288,
          311,
          1281,
          13,
          51324
        ]
      },
      {
        "avg_logprob": -0.2840282856917181,
        "compression_ratio": 1.5191489361702128,
        "end": 489.97999999999996,
        "id": 125,
        "no_speech_prob": 0.12420070171356201,
        "seek": 46890,
        "start": 488.09999999999997,
        "temperature": 0,
        "text": " She seems very thirsty.",
        "tokens": [
          51324,
          1240,
          2544,
          588,
          28115,
          13,
          51418
        ]
      },
      {
        "avg_logprob": -0.2840282856917181,
        "compression_ratio": 1.5191489361702128,
        "end": 491.09999999999997,
        "id": 126,
        "no_speech_prob": 0.12420070171356201,
        "seek": 46890,
        "start": 489.97999999999996,
        "temperature": 0,
        "text": " It's a hot day.",
        "tokens": [
          51418,
          467,
          311,
          257,
          2368,
          786,
          13,
          51474
        ]
      },
      {
        "avg_logprob": -0.2840282856917181,
        "compression_ratio": 1.5191489361702128,
        "end": 492.09999999999997,
        "id": 127,
        "no_speech_prob": 0.12420070171356201,
        "seek": 46890,
        "start": 491.09999999999997,
        "temperature": 0,
        "text": " It's early-ish.",
        "tokens": [
          51474,
          467,
          311,
          2440,
          12,
          742,
          13,
          51524
        ]
      },
      {
        "avg_logprob": -0.2840282856917181,
        "compression_ratio": 1.5191489361702128,
        "end": 496.02,
        "id": 128,
        "no_speech_prob": 0.12420070171356201,
        "seek": 46890,
        "start": 492.09999999999997,
        "temperature": 0,
        "text": " The sun's not beating down in here yet, but it's getting warm.",
        "tokens": [
          51524,
          440,
          3295,
          311,
          406,
          13497,
          760,
          294,
          510,
          1939,
          11,
          457,
          309,
          311,
          1242,
          4561,
          13,
          51720
        ]
      },
      {
        "avg_logprob": -0.4821503409023943,
        "compression_ratio": 1.0886075949367089,
        "end": 498.02,
        "id": 129,
        "no_speech_prob": 0.8841249942779541,
        "seek": 49602,
        "start": 496.02,
        "temperature": 0,
        "text": " She looks like she could use some water.",
        "tokens": [
          50364,
          1240,
          1542,
          411,
          750,
          727,
          764,
          512,
          1281,
          13,
          50464
        ]
      },
      {
        "avg_logprob": -0.4821503409023943,
        "compression_ratio": 1.0886075949367089,
        "end": 501.02,
        "id": 130,
        "no_speech_prob": 0.8841249942779541,
        "seek": 49602,
        "start": 500.02,
        "temperature": 0,
        "text": " Come on, Gloria.",
        "tokens": [
          50564,
          2492,
          322,
          11,
          34288,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.4821503409023943,
        "compression_ratio": 1.0886075949367089,
        "end": 502.02,
        "id": 131,
        "no_speech_prob": 0.8841249942779541,
        "seek": 49602,
        "start": 501.02,
        "temperature": 0,
        "text": " Let's go get you some water.",
        "tokens": [
          50614,
          961,
          311,
          352,
          483,
          291,
          512,
          1281,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.33177532196044923,
        "compression_ratio": 1.206896551724138,
        "end": 529.46,
        "id": 132,
        "no_speech_prob": 0.05581625923514366,
        "seek": 52602,
        "start": 527.02,
        "temperature": 0,
        "text": " Okay, so these are all 16 possibilities.",
        "tokens": [
          50414,
          1033,
          11,
          370,
          613,
          366,
          439,
          3165,
          12178,
          13,
          50536
        ]
      },
      {
        "avg_logprob": -0.33177532196044923,
        "compression_ratio": 1.206896551724138,
        "end": 531.02,
        "id": 133,
        "no_speech_prob": 0.05581625923514366,
        "seek": 52602,
        "start": 529.46,
        "temperature": 0,
        "text": " Let's put the numbers underneath.",
        "tokens": [
          50536,
          961,
          311,
          829,
          264,
          3547,
          7223,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.33177532196044923,
        "compression_ratio": 1.206896551724138,
        "end": 533.02,
        "id": 134,
        "no_speech_prob": 0.05581625923514366,
        "seek": 52602,
        "start": 531.02,
        "temperature": 0,
        "text": " 0, 1, 2, 3.",
        "tokens": [
          50614,
          1958,
          11,
          502,
          11,
          568,
          11,
          805,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.33177532196044923,
        "compression_ratio": 1.206896551724138,
        "end": 537.02,
        "id": 135,
        "no_speech_prob": 0.05581625923514366,
        "seek": 52602,
        "start": 536.02,
        "temperature": 0,
        "text": " And now let me put these.",
        "tokens": [
          50864,
          400,
          586,
          718,
          385,
          829,
          613,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.33177532196044923,
        "compression_ratio": 1.206896551724138,
        "end": 539.02,
        "id": 136,
        "no_speech_prob": 0.05581625923514366,
        "seek": 52602,
        "start": 537.02,
        "temperature": 0,
        "text": " These are called iso lines.",
        "tokens": [
          50914,
          1981,
          366,
          1219,
          307,
          78,
          3876,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.2537947115690812,
        "compression_ratio": 1.3812154696132597,
        "end": 558.02,
        "id": 137,
        "no_speech_prob": 0.007695367094129324,
        "seek": 53902,
        "start": 540.02,
        "temperature": 0,
        "text": " So number 10 here, just so I have a fixed version of it here, should be this.",
        "tokens": [
          50414,
          407,
          1230,
          1266,
          510,
          11,
          445,
          370,
          286,
          362,
          257,
          6806,
          3037,
          295,
          309,
          510,
          11,
          820,
          312,
          341,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.2537947115690812,
        "compression_ratio": 1.3812154696132597,
        "end": 563.02,
        "id": 138,
        "no_speech_prob": 0.007695367094129324,
        "seek": 53902,
        "start": 558.02,
        "temperature": 0,
        "text": " Looking at my processing window right now, I realize I'm missing an extra column and",
        "tokens": [
          51314,
          11053,
          412,
          452,
          9007,
          4910,
          558,
          586,
          11,
          286,
          4325,
          286,
          478,
          5361,
          364,
          2857,
          7738,
          293,
          51564
        ]
      },
      {
        "avg_logprob": -0.2537947115690812,
        "compression_ratio": 1.3812154696132597,
        "end": 564.02,
        "id": 139,
        "no_speech_prob": 0.007695367094129324,
        "seek": 53902,
        "start": 563.02,
        "temperature": 0,
        "text": " an extra row, right?",
        "tokens": [
          51564,
          364,
          2857,
          5386,
          11,
          558,
          30,
          51614
        ]
      },
      {
        "avg_logprob": -0.2537947115690812,
        "compression_ratio": 1.3812154696132597,
        "end": 568.02,
        "id": 140,
        "no_speech_prob": 0.007695367094129324,
        "seek": 53902,
        "start": 564.02,
        "temperature": 0,
        "text": " Because the idea is I want to look at each square with e4 corners.",
        "tokens": [
          51614,
          1436,
          264,
          1558,
          307,
          286,
          528,
          281,
          574,
          412,
          1184,
          3732,
          365,
          308,
          19,
          12413,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.1942398418079723,
        "compression_ratio": 1.62015503875969,
        "end": 573.02,
        "id": 141,
        "no_speech_prob": 0.00010554657637840137,
        "seek": 56802,
        "start": 568.02,
        "temperature": 0,
        "text": " And in order to fill the full space down here on the edges, I'm missing the right",
        "tokens": [
          50364,
          400,
          294,
          1668,
          281,
          2836,
          264,
          1577,
          1901,
          760,
          510,
          322,
          264,
          8819,
          11,
          286,
          478,
          5361,
          264,
          558,
          50614
        ]
      },
      {
        "avg_logprob": -0.1942398418079723,
        "compression_ratio": 1.62015503875969,
        "end": 575.02,
        "id": 142,
        "no_speech_prob": 0.00010554657637840137,
        "seek": 56802,
        "start": 573.02,
        "temperature": 0,
        "text": " and bottom corners.",
        "tokens": [
          50614,
          293,
          2767,
          12413,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.1942398418079723,
        "compression_ratio": 1.62015503875969,
        "end": 580.02,
        "id": 143,
        "no_speech_prob": 0.00010554657637840137,
        "seek": 56802,
        "start": 575.02,
        "temperature": 0,
        "text": " So I can fix that very easily just by adding one more column and one more row.",
        "tokens": [
          50714,
          407,
          286,
          393,
          3191,
          300,
          588,
          3612,
          445,
          538,
          5127,
          472,
          544,
          7738,
          293,
          472,
          544,
          5386,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.1942398418079723,
        "compression_ratio": 1.62015503875969,
        "end": 585.02,
        "id": 144,
        "no_speech_prob": 0.00010554657637840137,
        "seek": 56802,
        "start": 580.02,
        "temperature": 0,
        "text": " And now, see, I'm ready to look at each collection of four corners and figure out",
        "tokens": [
          50964,
          400,
          586,
          11,
          536,
          11,
          286,
          478,
          1919,
          281,
          574,
          412,
          1184,
          5765,
          295,
          1451,
          12413,
          293,
          2573,
          484,
          51214
        ]
      },
      {
        "avg_logprob": -0.1942398418079723,
        "compression_ratio": 1.62015503875969,
        "end": 588.02,
        "id": 145,
        "no_speech_prob": 0.00010554657637840137,
        "seek": 56802,
        "start": 585.02,
        "temperature": 0,
        "text": " which iso line should I draw based on that.",
        "tokens": [
          51214,
          597,
          307,
          78,
          1622,
          820,
          286,
          2642,
          2361,
          322,
          300,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.1942398418079723,
        "compression_ratio": 1.62015503875969,
        "end": 593.02,
        "id": 146,
        "no_speech_prob": 0.00010554657637840137,
        "seek": 56802,
        "start": 588.02,
        "temperature": 0,
        "text": " If I look at any individual square, these are the important points, right?",
        "tokens": [
          51364,
          759,
          286,
          574,
          412,
          604,
          2609,
          3732,
          11,
          613,
          366,
          264,
          1021,
          2793,
          11,
          558,
          30,
          51614
        ]
      },
      {
        "avg_logprob": -0.1942398418079723,
        "compression_ratio": 1.62015503875969,
        "end": 595.02,
        "id": 147,
        "no_speech_prob": 0.00010554657637840137,
        "seek": 56802,
        "start": 593.02,
        "temperature": 0,
        "text": " These midpoints between the corners.",
        "tokens": [
          51614,
          1981,
          2062,
          20552,
          1296,
          264,
          12413,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.15180181356576772,
        "compression_ratio": 1.954356846473029,
        "end": 599.02,
        "id": 148,
        "no_speech_prob": 0.09945638477802277,
        "seek": 59502,
        "start": 595.02,
        "temperature": 0,
        "text": " Because that's what's going to connect the line, whether it's this or whether it's this",
        "tokens": [
          50364,
          1436,
          300,
          311,
          437,
          311,
          516,
          281,
          1745,
          264,
          1622,
          11,
          1968,
          309,
          311,
          341,
          420,
          1968,
          309,
          311,
          341,
          50564
        ]
      },
      {
        "avg_logprob": -0.15180181356576772,
        "compression_ratio": 1.954356846473029,
        "end": 600.02,
        "id": 149,
        "no_speech_prob": 0.09945638477802277,
        "seek": 59502,
        "start": 599.02,
        "temperature": 0,
        "text": " or whether it's this.",
        "tokens": [
          50564,
          420,
          1968,
          309,
          311,
          341,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.15180181356576772,
        "compression_ratio": 1.954356846473029,
        "end": 602.02,
        "id": 150,
        "no_speech_prob": 0.09945638477802277,
        "seek": 59502,
        "start": 600.02,
        "temperature": 0,
        "text": " Any of these are what I'm drawing.",
        "tokens": [
          50614,
          2639,
          295,
          613,
          366,
          437,
          286,
          478,
          6316,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.15180181356576772,
        "compression_ratio": 1.954356846473029,
        "end": 606.02,
        "id": 151,
        "no_speech_prob": 0.09945638477802277,
        "seek": 59502,
        "start": 602.02,
        "temperature": 0,
        "text": " So I think I'm going to call this one A, B, C, and D.",
        "tokens": [
          50714,
          407,
          286,
          519,
          286,
          478,
          516,
          281,
          818,
          341,
          472,
          316,
          11,
          363,
          11,
          383,
          11,
          293,
          413,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.15180181356576772,
        "compression_ratio": 1.954356846473029,
        "end": 610.02,
        "id": 152,
        "no_speech_prob": 0.09945638477802277,
        "seek": 59502,
        "start": 606.02,
        "temperature": 0,
        "text": " So let me first calculate the positions of each one of those points.",
        "tokens": [
          50914,
          407,
          718,
          385,
          700,
          8873,
          264,
          8432,
          295,
          1184,
          472,
          295,
          729,
          2793,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.15180181356576772,
        "compression_ratio": 1.954356846473029,
        "end": 615.02,
        "id": 153,
        "no_speech_prob": 0.09945638477802277,
        "seek": 59502,
        "start": 610.02,
        "temperature": 0,
        "text": " I'm going to do this in a separate loop also because I need to stop at minus 1",
        "tokens": [
          51114,
          286,
          478,
          516,
          281,
          360,
          341,
          294,
          257,
          4994,
          6367,
          611,
          570,
          286,
          643,
          281,
          1590,
          412,
          3175,
          502,
          51364
        ]
      },
      {
        "avg_logprob": -0.15180181356576772,
        "compression_ratio": 1.954356846473029,
        "end": 620.02,
        "id": 154,
        "no_speech_prob": 0.09945638477802277,
        "seek": 59502,
        "start": 615.02,
        "temperature": 0,
        "text": " because the final column doesn't have any neighbors to the right and the final row",
        "tokens": [
          51364,
          570,
          264,
          2572,
          7738,
          1177,
          380,
          362,
          604,
          12512,
          281,
          264,
          558,
          293,
          264,
          2572,
          5386,
          51614
        ]
      },
      {
        "avg_logprob": -0.15180181356576772,
        "compression_ratio": 1.954356846473029,
        "end": 621.02,
        "id": 155,
        "no_speech_prob": 0.09945638477802277,
        "seek": 59502,
        "start": 620.02,
        "temperature": 0,
        "text": " doesn't have any neighbors to the bottom.",
        "tokens": [
          51614,
          1177,
          380,
          362,
          604,
          12512,
          281,
          264,
          2767,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.21003214518229166,
        "compression_ratio": 1.525,
        "end": 627.02,
        "id": 156,
        "no_speech_prob": 0.028434772044420242,
        "seek": 62102,
        "start": 621.02,
        "temperature": 0,
        "text": " A is a P. I'm going to use P vector just to figure out what's P vector A, B, C, and D.",
        "tokens": [
          50364,
          316,
          307,
          257,
          430,
          13,
          286,
          478,
          516,
          281,
          764,
          430,
          8062,
          445,
          281,
          2573,
          484,
          437,
          311,
          430,
          8062,
          316,
          11,
          363,
          11,
          383,
          11,
          293,
          413,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.21003214518229166,
        "compression_ratio": 1.525,
        "end": 632.02,
        "id": 157,
        "no_speech_prob": 0.028434772044420242,
        "seek": 62102,
        "start": 627.02,
        "temperature": 0,
        "text": " The X value is which column I'm on times that resolution.",
        "tokens": [
          50664,
          440,
          1783,
          2158,
          307,
          597,
          7738,
          286,
          478,
          322,
          1413,
          300,
          8669,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.21003214518229166,
        "compression_ratio": 1.525,
        "end": 642.02,
        "id": 158,
        "no_speech_prob": 0.028434772044420242,
        "seek": 62102,
        "start": 632.02,
        "temperature": 0,
        "text": " And point A, which is over here, is the X value of this plus half, right, this,",
        "tokens": [
          50914,
          400,
          935,
          316,
          11,
          597,
          307,
          670,
          510,
          11,
          307,
          264,
          1783,
          2158,
          295,
          341,
          1804,
          1922,
          11,
          558,
          11,
          341,
          11,
          51414
        ]
      },
      {
        "avg_logprob": -0.21003214518229166,
        "compression_ratio": 1.525,
        "end": 648.02,
        "id": 159,
        "no_speech_prob": 0.028434772044420242,
        "seek": 62102,
        "start": 642.02,
        "temperature": 0,
        "text": " the length of each side is my variable res, so half of that, plus res times 0.5.",
        "tokens": [
          51414,
          264,
          4641,
          295,
          1184,
          1252,
          307,
          452,
          7006,
          725,
          11,
          370,
          1922,
          295,
          300,
          11,
          1804,
          725,
          1413,
          1958,
          13,
          20,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.1752834682223163,
        "compression_ratio": 1.5030674846625767,
        "end": 651.02,
        "id": 160,
        "no_speech_prob": 0.010013357736170292,
        "seek": 64802,
        "start": 648.02,
        "temperature": 0,
        "text": " That's X and Y for A is just at the top.",
        "tokens": [
          50364,
          663,
          311,
          1783,
          293,
          398,
          337,
          316,
          307,
          445,
          412,
          264,
          1192,
          13,
          50514
        ]
      },
      {
        "avg_logprob": -0.1752834682223163,
        "compression_ratio": 1.5030674846625767,
        "end": 658.02,
        "id": 161,
        "no_speech_prob": 0.010013357736170292,
        "seek": 64802,
        "start": 651.02,
        "temperature": 0,
        "text": " So using that same idea, I can figure out B, C, and D.",
        "tokens": [
          50514,
          407,
          1228,
          300,
          912,
          1558,
          11,
          286,
          393,
          2573,
          484,
          363,
          11,
          383,
          11,
          293,
          413,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.1752834682223163,
        "compression_ratio": 1.5030674846625767,
        "end": 663.02,
        "id": 162,
        "no_speech_prob": 0.010013357736170292,
        "seek": 64802,
        "start": 658.02,
        "temperature": 0,
        "text": " C is Y is all the way at the bottom and X is again in the middle.",
        "tokens": [
          50864,
          383,
          307,
          398,
          307,
          439,
          264,
          636,
          412,
          264,
          2767,
          293,
          1783,
          307,
          797,
          294,
          264,
          2808,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.1752834682223163,
        "compression_ratio": 1.5030674846625767,
        "end": 672.02,
        "id": 163,
        "no_speech_prob": 0.010013357736170292,
        "seek": 64802,
        "start": 663.02,
        "temperature": 0,
        "text": " And then D is X is at its original location of the top left and Y is in the middle.",
        "tokens": [
          51114,
          400,
          550,
          413,
          307,
          1783,
          307,
          412,
          1080,
          3380,
          4914,
          295,
          264,
          1192,
          1411,
          293,
          398,
          307,
          294,
          264,
          2808,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.20713512714092547,
        "compression_ratio": 1.4098360655737705,
        "end": 675.02,
        "id": 164,
        "no_speech_prob": 0.0033243761863559484,
        "seek": 67202,
        "start": 673.02,
        "temperature": 0,
        "text": " And I forgot to make a variable for Y.",
        "tokens": [
          50414,
          400,
          286,
          5298,
          281,
          652,
          257,
          7006,
          337,
          398,
          13,
          50514
        ]
      },
      {
        "avg_logprob": -0.20713512714092547,
        "compression_ratio": 1.4098360655737705,
        "end": 682.02,
        "id": 165,
        "no_speech_prob": 0.0033243761863559484,
        "seek": 67202,
        "start": 678.02,
        "temperature": 0,
        "text": " And because of the person who I am, which I am just happy to be these days,",
        "tokens": [
          50664,
          400,
          570,
          295,
          264,
          954,
          567,
          286,
          669,
          11,
          597,
          286,
          669,
          445,
          2055,
          281,
          312,
          613,
          1708,
          11,
          50864
        ]
      },
      {
        "avg_logprob": -0.20713512714092547,
        "compression_ratio": 1.4098360655737705,
        "end": 685.02,
        "id": 166,
        "no_speech_prob": 0.0033243761863559484,
        "seek": 67202,
        "start": 682.02,
        "temperature": 0,
        "text": " I must align all of the spacing here.",
        "tokens": [
          50864,
          286,
          1633,
          7975,
          439,
          295,
          264,
          27739,
          510,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.20713512714092547,
        "compression_ratio": 1.4098360655737705,
        "end": 692.02,
        "id": 167,
        "no_speech_prob": 0.0033243761863559484,
        "seek": 67202,
        "start": 685.02,
        "temperature": 0,
        "text": " ♪",
        "tokens": [
          51014,
          220,
          158,
          247,
          103,
          51364
        ]
      },
      {
        "avg_logprob": -0.20713512714092547,
        "compression_ratio": 1.4098360655737705,
        "end": 697.02,
        "id": 168,
        "no_speech_prob": 0.0033243761863559484,
        "seek": 67202,
        "start": 692.02,
        "temperature": 0,
        "text": " I don't know whether that makes it better or worse, but I'm very happy with how that looks right now.",
        "tokens": [
          51364,
          286,
          500,
          380,
          458,
          1968,
          300,
          1669,
          309,
          1101,
          420,
          5324,
          11,
          457,
          286,
          478,
          588,
          2055,
          365,
          577,
          300,
          1542,
          558,
          586,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.18271249300473696,
        "compression_ratio": 1.3398692810457515,
        "end": 703.02,
        "id": 169,
        "no_speech_prob": 0.0016484638908877969,
        "seek": 69702,
        "start": 697.02,
        "temperature": 0,
        "text": " So if I just wanted to put, let's say, this line at every single spot,",
        "tokens": [
          50364,
          407,
          498,
          286,
          445,
          1415,
          281,
          829,
          11,
          718,
          311,
          584,
          11,
          341,
          1622,
          412,
          633,
          2167,
          4008,
          11,
          50664
        ]
      },
      {
        "avg_logprob": -0.18271249300473696,
        "compression_ratio": 1.3398692810457515,
        "end": 710.02,
        "id": 170,
        "no_speech_prob": 0.0016484638908877969,
        "seek": 69702,
        "start": 703.02,
        "temperature": 0,
        "text": " I would say line from A.X, A.Y to B.X, B.Y.",
        "tokens": [
          50664,
          286,
          576,
          584,
          1622,
          490,
          316,
          13,
          55,
          11,
          316,
          13,
          56,
          281,
          363,
          13,
          55,
          11,
          363,
          13,
          56,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.18271249300473696,
        "compression_ratio": 1.3398692810457515,
        "end": 714.02,
        "id": 171,
        "no_speech_prob": 0.0016484638908877969,
        "seek": 69702,
        "start": 710.02,
        "temperature": 0,
        "text": " Let's say stroke 255.",
        "tokens": [
          51014,
          961,
          311,
          584,
          12403,
          3552,
          20,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.18271249300473696,
        "compression_ratio": 1.3398692810457515,
        "end": 719.02,
        "id": 172,
        "no_speech_prob": 0.0016484638908877969,
        "seek": 69702,
        "start": 714.02,
        "temperature": 0,
        "text": " Ooh, and let's make these thinner, stroke weight 1.",
        "tokens": [
          51214,
          7951,
          11,
          293,
          718,
          311,
          652,
          613,
          21905,
          11,
          12403,
          3364,
          502,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.18271249300473696,
        "compression_ratio": 1.3398692810457515,
        "end": 721.02,
        "id": 173,
        "no_speech_prob": 0.0016484638908877969,
        "seek": 69702,
        "start": 719.02,
        "temperature": 0,
        "text": " And there we go.",
        "tokens": [
          51464,
          400,
          456,
          321,
          352,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.15474279427234036,
        "compression_ratio": 1.5380434782608696,
        "end": 727.02,
        "id": 174,
        "no_speech_prob": 0.005060235038399696,
        "seek": 72102,
        "start": 721.02,
        "temperature": 0,
        "text": " So we can see now I've got this line in every single square.",
        "tokens": [
          50364,
          407,
          321,
          393,
          536,
          586,
          286,
          600,
          658,
          341,
          1622,
          294,
          633,
          2167,
          3732,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.15474279427234036,
        "compression_ratio": 1.5380434782608696,
        "end": 729.02,
        "id": 175,
        "no_speech_prob": 0.005060235038399696,
        "seek": 72102,
        "start": 727.02,
        "temperature": 0,
        "text": " But that's not what I want to do.",
        "tokens": [
          50664,
          583,
          300,
          311,
          406,
          437,
          286,
          528,
          281,
          360,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.15474279427234036,
        "compression_ratio": 1.5380434782608696,
        "end": 738.02,
        "id": 176,
        "no_speech_prob": 0.005060235038399696,
        "seek": 72102,
        "start": 729.02,
        "temperature": 0,
        "text": " I only want that line if the squares are this particular configuration, configuration number 4.",
        "tokens": [
          50764,
          286,
          787,
          528,
          300,
          1622,
          498,
          264,
          19368,
          366,
          341,
          1729,
          11694,
          11,
          11694,
          1230,
          1017,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.15474279427234036,
        "compression_ratio": 1.5380434782608696,
        "end": 749.02,
        "id": 177,
        "no_speech_prob": 0.005060235038399696,
        "seek": 72102,
        "start": 738.02,
        "temperature": 0,
        "text": " So these, by the way, if I were to say 0000, 0001, 0010, notice that I'm counting in binary.",
        "tokens": [
          51214,
          407,
          613,
          11,
          538,
          264,
          636,
          11,
          498,
          286,
          645,
          281,
          584,
          7143,
          628,
          11,
          13711,
          16,
          11,
          7143,
          3279,
          11,
          3449,
          300,
          286,
          478,
          13251,
          294,
          17434,
          13,
          51764
        ]
      },
      {
        "avg_logprob": -0.14663695153735934,
        "compression_ratio": 1.6119402985074627,
        "end": 754.02,
        "id": 178,
        "no_speech_prob": 0.00046552513958886266,
        "seek": 74902,
        "start": 749.02,
        "temperature": 0,
        "text": " So each one of these maps to the binary representation of the numbers.",
        "tokens": [
          50364,
          407,
          1184,
          472,
          295,
          613,
          11317,
          281,
          264,
          17434,
          10290,
          295,
          264,
          3547,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.14663695153735934,
        "compression_ratio": 1.6119402985074627,
        "end": 756.02,
        "id": 179,
        "no_speech_prob": 0.00046552513958886266,
        "seek": 74902,
        "start": 754.02,
        "temperature": 0,
        "text": " I don't know if I made that totally clear.",
        "tokens": [
          50614,
          286,
          500,
          380,
          458,
          498,
          286,
          1027,
          300,
          3879,
          1850,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.14663695153735934,
        "compression_ratio": 1.6119402985074627,
        "end": 764.02,
        "id": 180,
        "no_speech_prob": 0.00046552513958886266,
        "seek": 74902,
        "start": 756.02,
        "temperature": 0,
        "text": " So if I take any binary number, I just need to convert this into its base 10 representation,",
        "tokens": [
          50714,
          407,
          498,
          286,
          747,
          604,
          17434,
          1230,
          11,
          286,
          445,
          643,
          281,
          7620,
          341,
          666,
          1080,
          3096,
          1266,
          10290,
          11,
          51114
        ]
      },
      {
        "avg_logprob": -0.14663695153735934,
        "compression_ratio": 1.6119402985074627,
        "end": 770.02,
        "id": 181,
        "no_speech_prob": 0.00046552513958886266,
        "seek": 74902,
        "start": 764.02,
        "temperature": 0,
        "text": " this being 4, and then figure out which one of these it is and draw the appropriate line.",
        "tokens": [
          51114,
          341,
          885,
          1017,
          11,
          293,
          550,
          2573,
          484,
          597,
          472,
          295,
          613,
          309,
          307,
          293,
          2642,
          264,
          6854,
          1622,
          13,
          51414
        ]
      },
      {
        "avg_logprob": -0.14663695153735934,
        "compression_ratio": 1.6119402985074627,
        "end": 773.02,
        "id": 182,
        "no_speech_prob": 0.00046552513958886266,
        "seek": 74902,
        "start": 770.02,
        "temperature": 0,
        "text": " So let me write a function.",
        "tokens": [
          51414,
          407,
          718,
          385,
          2464,
          257,
          2445,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.17712332985617898,
        "compression_ratio": 1.623076923076923,
        "end": 776.02,
        "id": 183,
        "no_speech_prob": 0.5465390682220459,
        "seek": 77302,
        "start": 773.02,
        "temperature": 0,
        "text": " I'm going to call it get state.",
        "tokens": [
          50364,
          286,
          478,
          516,
          281,
          818,
          309,
          483,
          1785,
          13,
          50514
        ]
      },
      {
        "avg_logprob": -0.17712332985617898,
        "compression_ratio": 1.623076923076923,
        "end": 782.02,
        "id": 184,
        "no_speech_prob": 0.5465390682220459,
        "seek": 77302,
        "start": 776.02,
        "temperature": 0,
        "text": " That gets the base 10 state based on four 0s and 1s.",
        "tokens": [
          50514,
          663,
          2170,
          264,
          3096,
          1266,
          1785,
          2361,
          322,
          1451,
          1958,
          82,
          293,
          502,
          82,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.17712332985617898,
        "compression_ratio": 1.623076923076923,
        "end": 783.02,
        "id": 185,
        "no_speech_prob": 0.5465390682220459,
        "seek": 77302,
        "start": 782.02,
        "temperature": 0,
        "text": " So I'm going to give it four arguments.",
        "tokens": [
          50814,
          407,
          286,
          478,
          516,
          281,
          976,
          309,
          1451,
          12869,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.17712332985617898,
        "compression_ratio": 1.623076923076923,
        "end": 787.02,
        "id": 186,
        "no_speech_prob": 0.5465390682220459,
        "seek": 77302,
        "start": 783.02,
        "temperature": 0,
        "text": " This is kind of silly because I could actually use some type of built-in Java function",
        "tokens": [
          50864,
          639,
          307,
          733,
          295,
          11774,
          570,
          286,
          727,
          767,
          764,
          512,
          2010,
          295,
          3094,
          12,
          259,
          10745,
          2445,
          51064
        ]
      },
      {
        "avg_logprob": -0.17712332985617898,
        "compression_ratio": 1.623076923076923,
        "end": 790.02,
        "id": 187,
        "no_speech_prob": 0.5465390682220459,
        "seek": 77302,
        "start": 787.02,
        "temperature": 0,
        "text": " to convert from binary to decimal or base 2 to base 10.",
        "tokens": [
          51064,
          281,
          7620,
          490,
          17434,
          281,
          26601,
          420,
          3096,
          568,
          281,
          3096,
          1266,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.17712332985617898,
        "compression_ratio": 1.623076923076923,
        "end": 795.02,
        "id": 188,
        "no_speech_prob": 0.5465390682220459,
        "seek": 77302,
        "start": 790.02,
        "temperature": 0,
        "text": " But I'm just going to do this in a very manual way since I know I only ever have four bits.",
        "tokens": [
          51214,
          583,
          286,
          478,
          445,
          516,
          281,
          360,
          341,
          294,
          257,
          588,
          9688,
          636,
          1670,
          286,
          458,
          286,
          787,
          1562,
          362,
          1451,
          9239,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.17712332985617898,
        "compression_ratio": 1.623076923076923,
        "end": 802.02,
        "id": 189,
        "no_speech_prob": 0.5465390682220459,
        "seek": 77302,
        "start": 795.02,
        "temperature": 0,
        "text": " Return A times 1 plus B times 2 plus C times 4 plus D times 8.",
        "tokens": [
          51464,
          24350,
          316,
          1413,
          502,
          1804,
          363,
          1413,
          568,
          1804,
          383,
          1413,
          1017,
          1804,
          413,
          1413,
          1649,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.17521618152486867,
        "compression_ratio": 1.393939393939394,
        "end": 810.02,
        "id": 190,
        "no_speech_prob": 0.0017007067799568176,
        "seek": 80202,
        "start": 802.02,
        "temperature": 0,
        "text": " And so if I were to now say int state equals get state.",
        "tokens": [
          50364,
          400,
          370,
          498,
          286,
          645,
          281,
          586,
          584,
          560,
          1785,
          6915,
          483,
          1785,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.17521618152486867,
        "compression_ratio": 1.393939393939394,
        "end": 812.02,
        "id": 191,
        "no_speech_prob": 0.0017007067799568176,
        "seek": 80202,
        "start": 810.02,
        "temperature": 0,
        "text": " Oh, no, no, no. I'm not passing these in.",
        "tokens": [
          50764,
          876,
          11,
          572,
          11,
          572,
          11,
          572,
          13,
          286,
          478,
          406,
          8437,
          613,
          294,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.17521618152486867,
        "compression_ratio": 1.393939393939394,
        "end": 818.02,
        "id": 192,
        "no_speech_prob": 0.0017007067799568176,
        "seek": 80202,
        "start": 812.02,
        "temperature": 0,
        "text": " What I'm passing in is the value of each of these corners, which is in my field array.",
        "tokens": [
          50864,
          708,
          286,
          478,
          8437,
          294,
          307,
          264,
          2158,
          295,
          1184,
          295,
          613,
          12413,
          11,
          597,
          307,
          294,
          452,
          2519,
          10225,
          13,
          51164
        ]
      },
      {
        "avg_logprob": -0.18324162743308328,
        "compression_ratio": 1.603960396039604,
        "end": 831.02,
        "id": 193,
        "no_speech_prob": 0.08388471603393555,
        "seek": 81802,
        "start": 818.02,
        "temperature": 0,
        "text": " So this is field i, j, field i plus 1, j, i, j, i plus 1, j, i plus 1, j plus 1, i, j plus 1.",
        "tokens": [
          50364,
          407,
          341,
          307,
          2519,
          741,
          11,
          361,
          11,
          2519,
          741,
          1804,
          502,
          11,
          361,
          11,
          741,
          11,
          361,
          11,
          741,
          1804,
          502,
          11,
          361,
          11,
          741,
          1804,
          502,
          11,
          361,
          1804,
          502,
          11,
          741,
          11,
          361,
          1804,
          502,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.18324162743308328,
        "compression_ratio": 1.603960396039604,
        "end": 838.02,
        "id": 194,
        "no_speech_prob": 0.08388471603393555,
        "seek": 81802,
        "start": 836.02,
        "temperature": 0,
        "text": " Okay, it all fits on one line.",
        "tokens": [
          51264,
          1033,
          11,
          309,
          439,
          9001,
          322,
          472,
          1622,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.18324162743308328,
        "compression_ratio": 1.603960396039604,
        "end": 840.02,
        "id": 195,
        "no_speech_prob": 0.08388471603393555,
        "seek": 81802,
        "start": 838.02,
        "temperature": 0,
        "text": " So that looks good. Looks good to me.",
        "tokens": [
          51364,
          407,
          300,
          1542,
          665,
          13,
          10027,
          665,
          281,
          385,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.17769365403258686,
        "compression_ratio": 1.7695852534562213,
        "end": 850.02,
        "id": 196,
        "no_speech_prob": 0.021614599972963333,
        "seek": 84002,
        "start": 840.02,
        "temperature": 0,
        "text": " Okay, so now if state is for this particular line that I've drawn, that's only if the state is four.",
        "tokens": [
          50364,
          1033,
          11,
          370,
          586,
          498,
          1785,
          307,
          337,
          341,
          1729,
          1622,
          300,
          286,
          600,
          10117,
          11,
          300,
          311,
          787,
          498,
          264,
          1785,
          307,
          1451,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.17769365403258686,
        "compression_ratio": 1.7695852534562213,
        "end": 855.02,
        "id": 197,
        "no_speech_prob": 0.021614599972963333,
        "seek": 84002,
        "start": 850.02,
        "temperature": 0,
        "text": " Oh, guess what? Here's a really excellent time to use a switch statement.",
        "tokens": [
          50864,
          876,
          11,
          2041,
          437,
          30,
          1692,
          311,
          257,
          534,
          7103,
          565,
          281,
          764,
          257,
          3679,
          5629,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.17769365403258686,
        "compression_ratio": 1.7695852534562213,
        "end": 859.02,
        "id": 198,
        "no_speech_prob": 0.021614599972963333,
        "seek": 84002,
        "start": 855.02,
        "temperature": 0,
        "text": " Oh, I hate, I'm so afraid of switch statements, but I'm going to be strong and brave",
        "tokens": [
          51114,
          876,
          11,
          286,
          4700,
          11,
          286,
          478,
          370,
          4638,
          295,
          3679,
          12363,
          11,
          457,
          286,
          478,
          516,
          281,
          312,
          2068,
          293,
          12653,
          51314
        ]
      },
      {
        "avg_logprob": -0.17769365403258686,
        "compression_ratio": 1.7695852534562213,
        "end": 862.02,
        "id": 199,
        "no_speech_prob": 0.021614599972963333,
        "seek": 84002,
        "start": 859.02,
        "temperature": 0,
        "text": " and I'm going to use a switch statement today.",
        "tokens": [
          51314,
          293,
          286,
          478,
          516,
          281,
          764,
          257,
          3679,
          5629,
          965,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.17769365403258686,
        "compression_ratio": 1.7695852534562213,
        "end": 867.02,
        "id": 200,
        "no_speech_prob": 0.021614599972963333,
        "seek": 84002,
        "start": 862.02,
        "temperature": 0,
        "text": " And I'm definitely not going to Google syntax for a switch statement in Java.",
        "tokens": [
          51464,
          400,
          286,
          478,
          2138,
          406,
          516,
          281,
          3329,
          28431,
          337,
          257,
          3679,
          5629,
          294,
          10745,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.21297877442603017,
        "compression_ratio": 1.6227272727272728,
        "end": 870.02,
        "id": 201,
        "no_speech_prob": 0.02128651738166809,
        "seek": 86702,
        "start": 867.02,
        "temperature": 0,
        "text": " I know it off the top of my head, right? Because I've been programming for 20 years.",
        "tokens": [
          50364,
          286,
          458,
          309,
          766,
          264,
          1192,
          295,
          452,
          1378,
          11,
          558,
          30,
          1436,
          286,
          600,
          668,
          9410,
          337,
          945,
          924,
          13,
          50514
        ]
      },
      {
        "avg_logprob": -0.21297877442603017,
        "compression_ratio": 1.6227272727272728,
        "end": 873.02,
        "id": 202,
        "no_speech_prob": 0.02128651738166809,
        "seek": 86702,
        "start": 870.02,
        "temperature": 0,
        "text": " Of course I know the syntax for a switch statement off the top of my head.",
        "tokens": [
          50514,
          2720,
          1164,
          286,
          458,
          264,
          28431,
          337,
          257,
          3679,
          5629,
          766,
          264,
          1192,
          295,
          452,
          1378,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.21297877442603017,
        "compression_ratio": 1.6227272727272728,
        "end": 882.02,
        "id": 203,
        "no_speech_prob": 0.02128651738166809,
        "seek": 86702,
        "start": 878.02,
        "temperature": 0,
        "text": " So in the switch, the thing that I'm checking is state.",
        "tokens": [
          50914,
          407,
          294,
          264,
          3679,
          11,
          264,
          551,
          300,
          286,
          478,
          8568,
          307,
          1785,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.21297877442603017,
        "compression_ratio": 1.6227272727272728,
        "end": 885.02,
        "id": 204,
        "no_speech_prob": 0.02128651738166809,
        "seek": 86702,
        "start": 882.02,
        "temperature": 0,
        "text": " And then I'm checking whether it's 0, 1.",
        "tokens": [
          51114,
          400,
          550,
          286,
          478,
          8568,
          1968,
          309,
          311,
          1958,
          11,
          502,
          13,
          51264
        ]
      },
      {
        "avg_logprob": -0.21297877442603017,
        "compression_ratio": 1.6227272727272728,
        "end": 893.02,
        "id": 205,
        "no_speech_prob": 0.02128651738166809,
        "seek": 86702,
        "start": 885.02,
        "temperature": 0,
        "text": " Oh, let me just add one for 0 since this code that I copy pasted in here already has, starts from 1.",
        "tokens": [
          51264,
          876,
          11,
          718,
          385,
          445,
          909,
          472,
          337,
          1958,
          1670,
          341,
          3089,
          300,
          286,
          5055,
          1791,
          292,
          294,
          510,
          1217,
          575,
          11,
          3719,
          490,
          502,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.22119826832036862,
        "compression_ratio": 1.5614035087719298,
        "end": 897.02,
        "id": 206,
        "no_speech_prob": 0.0002824045077431947,
        "seek": 89302,
        "start": 894.02,
        "temperature": 0,
        "text": " Then I'm going all the way up to 15.",
        "tokens": [
          50414,
          1396,
          286,
          478,
          516,
          439,
          264,
          636,
          493,
          281,
          2119,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.22119826832036862,
        "compression_ratio": 1.5614035087719298,
        "end": 910.02,
        "id": 207,
        "no_speech_prob": 0.0002824045077431947,
        "seek": 89302,
        "start": 901.02,
        "temperature": 0,
        "text": " Now you might be thinking, oh, isn't there some nice elegant way to do this without a separate line of code for each particular state?",
        "tokens": [
          50764,
          823,
          291,
          1062,
          312,
          1953,
          11,
          1954,
          11,
          1943,
          380,
          456,
          512,
          1481,
          21117,
          636,
          281,
          360,
          341,
          1553,
          257,
          4994,
          1622,
          295,
          3089,
          337,
          1184,
          1729,
          1785,
          30,
          51214
        ]
      },
      {
        "avg_logprob": -0.22119826832036862,
        "compression_ratio": 1.5614035087719298,
        "end": 915.02,
        "id": 208,
        "no_speech_prob": 0.0002824045077431947,
        "seek": 89302,
        "start": 910.02,
        "temperature": 0,
        "text": " Probably. I'm so excited for people to watch this video and make all sorts of new and different ways of doing this algorithm",
        "tokens": [
          51214,
          9210,
          13,
          286,
          478,
          370,
          2919,
          337,
          561,
          281,
          1159,
          341,
          960,
          293,
          652,
          439,
          7527,
          295,
          777,
          293,
          819,
          2098,
          295,
          884,
          341,
          9284,
          51464
        ]
      },
      {
        "avg_logprob": -0.22119826832036862,
        "compression_ratio": 1.5614035087719298,
        "end": 919.02,
        "id": 209,
        "no_speech_prob": 0.0002824045077431947,
        "seek": 89302,
        "start": 915.02,
        "temperature": 0,
        "text": " with shorter code, more efficient code, more creative code.",
        "tokens": [
          51464,
          365,
          11639,
          3089,
          11,
          544,
          7148,
          3089,
          11,
          544,
          5880,
          3089,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.20220020839146205,
        "compression_ratio": 1.7252396166134185,
        "end": 920.02,
        "id": 210,
        "no_speech_prob": 0.04741697758436203,
        "seek": 91902,
        "start": 919.02,
        "temperature": 0,
        "text": " So please share that with me.",
        "tokens": [
          50364,
          407,
          1767,
          2073,
          300,
          365,
          385,
          13,
          50414
        ]
      },
      {
        "avg_logprob": -0.20220020839146205,
        "compression_ratio": 1.7252396166134185,
        "end": 924.02,
        "id": 211,
        "no_speech_prob": 0.04741697758436203,
        "seek": 91902,
        "start": 920.02,
        "temperature": 0,
        "text": " But I'm just to get this to work, going to do it based on each state individually.",
        "tokens": [
          50414,
          583,
          286,
          478,
          445,
          281,
          483,
          341,
          281,
          589,
          11,
          516,
          281,
          360,
          309,
          2361,
          322,
          1184,
          1785,
          16652,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.20220020839146205,
        "compression_ratio": 1.7252396166134185,
        "end": 929.02,
        "id": 212,
        "no_speech_prob": 0.04741697758436203,
        "seek": 91902,
        "start": 924.02,
        "temperature": 0,
        "text": " Of course, I actually don't need a case for 0 because in the case of 0 I don't draw anything.",
        "tokens": [
          50614,
          2720,
          1164,
          11,
          286,
          767,
          500,
          380,
          643,
          257,
          1389,
          337,
          1958,
          570,
          294,
          264,
          1389,
          295,
          1958,
          286,
          500,
          380,
          2642,
          1340,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.20220020839146205,
        "compression_ratio": 1.7252396166134185,
        "end": 931.02,
        "id": 213,
        "no_speech_prob": 0.04741697758436203,
        "seek": 91902,
        "start": 929.02,
        "temperature": 0,
        "text": " So I didn't need to put that in there.",
        "tokens": [
          50864,
          407,
          286,
          994,
          380,
          643,
          281,
          829,
          300,
          294,
          456,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.20220020839146205,
        "compression_ratio": 1.7252396166134185,
        "end": 934.02,
        "id": 214,
        "no_speech_prob": 0.04741697758436203,
        "seek": 91902,
        "start": 931.02,
        "temperature": 0,
        "text": " I mean, I might want to add those back in if I wanted to do something based on that.",
        "tokens": [
          50964,
          286,
          914,
          11,
          286,
          1062,
          528,
          281,
          909,
          729,
          646,
          294,
          498,
          286,
          1415,
          281,
          360,
          746,
          2361,
          322,
          300,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.20220020839146205,
        "compression_ratio": 1.7252396166134185,
        "end": 941.02,
        "id": 215,
        "no_speech_prob": 0.04741697758436203,
        "seek": 91902,
        "start": 934.02,
        "temperature": 0,
        "text": " But let's just add case 1, which is drawing a line from, and if I remember, this is from a C to D.",
        "tokens": [
          51114,
          583,
          718,
          311,
          445,
          909,
          1389,
          502,
          11,
          597,
          307,
          6316,
          257,
          1622,
          490,
          11,
          293,
          498,
          286,
          1604,
          11,
          341,
          307,
          490,
          257,
          383,
          281,
          413,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.20220020839146205,
        "compression_ratio": 1.7252396166134185,
        "end": 945.02,
        "id": 216,
        "no_speech_prob": 0.04741697758436203,
        "seek": 91902,
        "start": 941.02,
        "temperature": 0,
        "text": " You know what? I'm going to write my own function.",
        "tokens": [
          51464,
          509,
          458,
          437,
          30,
          286,
          478,
          516,
          281,
          2464,
          452,
          1065,
          2445,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.20220020839146205,
        "compression_ratio": 1.7252396166134185,
        "end": 948.02,
        "id": 217,
        "no_speech_prob": 0.04741697758436203,
        "seek": 91902,
        "start": 945.02,
        "temperature": 0,
        "text": " You can do this in Java because you can overload functions.",
        "tokens": [
          51664,
          509,
          393,
          360,
          341,
          294,
          10745,
          570,
          291,
          393,
          28777,
          6828,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.17650374659785517,
        "compression_ratio": 1.5162790697674418,
        "end": 954.02,
        "id": 218,
        "no_speech_prob": 0.015905706211924553,
        "seek": 94802,
        "start": 948.02,
        "temperature": 0,
        "text": " So I'm going to write a function that gets two P vectors, V1, V2.",
        "tokens": [
          50364,
          407,
          286,
          478,
          516,
          281,
          2464,
          257,
          2445,
          300,
          2170,
          732,
          430,
          18875,
          11,
          691,
          16,
          11,
          691,
          17,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.17650374659785517,
        "compression_ratio": 1.5162790697674418,
        "end": 964.02,
        "id": 219,
        "no_speech_prob": 0.015905706211924553,
        "seek": 94802,
        "start": 954.02,
        "temperature": 0,
        "text": " I'm just going to call it line and draws a line between them so I don't have to constantly type out the X and the Y over and over again.",
        "tokens": [
          50664,
          286,
          478,
          445,
          516,
          281,
          818,
          309,
          1622,
          293,
          20045,
          257,
          1622,
          1296,
          552,
          370,
          286,
          500,
          380,
          362,
          281,
          6460,
          2010,
          484,
          264,
          1783,
          293,
          264,
          398,
          670,
          293,
          670,
          797,
          13,
          51164
        ]
      },
      {
        "avg_logprob": -0.17650374659785517,
        "compression_ratio": 1.5162790697674418,
        "end": 966.02,
        "id": 220,
        "no_speech_prob": 0.015905706211924553,
        "seek": 94802,
        "start": 964.02,
        "temperature": 0,
        "text": " So let's do that. That's right, right?",
        "tokens": [
          51164,
          407,
          718,
          311,
          360,
          300,
          13,
          663,
          311,
          558,
          11,
          558,
          30,
          51264
        ]
      },
      {
        "avg_logprob": -0.17650374659785517,
        "compression_ratio": 1.5162790697674418,
        "end": 968.02,
        "id": 221,
        "no_speech_prob": 0.015905706211924553,
        "seek": 94802,
        "start": 966.02,
        "temperature": 0,
        "text": " X, Y, X, Y. Okay, good.",
        "tokens": [
          51264,
          1783,
          11,
          398,
          11,
          1783,
          11,
          398,
          13,
          1033,
          11,
          665,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.17650374659785517,
        "compression_ratio": 1.5162790697674418,
        "end": 971.02,
        "id": 222,
        "no_speech_prob": 0.015905706211924553,
        "seek": 94802,
        "start": 968.02,
        "temperature": 0,
        "text": " Now I'm going to say line from C to D.",
        "tokens": [
          51364,
          823,
          286,
          478,
          516,
          281,
          584,
          1622,
          490,
          383,
          281,
          413,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.17650374659785517,
        "compression_ratio": 1.5162790697674418,
        "end": 973.02,
        "id": 223,
        "no_speech_prob": 0.015905706211924553,
        "seek": 94802,
        "start": 971.02,
        "temperature": 0,
        "text": " And that makes sense.",
        "tokens": [
          51514,
          400,
          300,
          1669,
          2020,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.24488041701826077,
        "compression_ratio": 1.5454545454545454,
        "end": 977.02,
        "id": 224,
        "no_speech_prob": 0.6112310290336609,
        "seek": 97302,
        "start": 973.02,
        "temperature": 0,
        "text": " You can see that line appearing every time there's a...",
        "tokens": [
          50364,
          509,
          393,
          536,
          300,
          1622,
          19870,
          633,
          565,
          456,
          311,
          257,
          485,
          50564
        ]
      },
      {
        "avg_logprob": -0.24488041701826077,
        "compression_ratio": 1.5454545454545454,
        "end": 980.02,
        "id": 225,
        "no_speech_prob": 0.6112310290336609,
        "seek": 97302,
        "start": 977.02,
        "temperature": 0,
        "text": " It's not right.",
        "tokens": [
          50564,
          467,
          311,
          406,
          558,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.24488041701826077,
        "compression_ratio": 1.5454545454545454,
        "end": 983.02,
        "id": 226,
        "no_speech_prob": 0.6112310290336609,
        "seek": 97302,
        "start": 980.02,
        "temperature": 0,
        "text": " Oh, the first one is times 8.",
        "tokens": [
          50714,
          876,
          11,
          264,
          700,
          472,
          307,
          1413,
          1649,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.24488041701826077,
        "compression_ratio": 1.5454545454545454,
        "end": 985.02,
        "id": 227,
        "no_speech_prob": 0.6112310290336609,
        "seek": 97302,
        "start": 983.02,
        "temperature": 0,
        "text": " Oh, boy, this has been in there for a while.",
        "tokens": [
          50864,
          876,
          11,
          3237,
          11,
          341,
          575,
          668,
          294,
          456,
          337,
          257,
          1339,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.24488041701826077,
        "compression_ratio": 1.5454545454545454,
        "end": 989.02,
        "id": 228,
        "no_speech_prob": 0.6112310290336609,
        "seek": 97302,
        "start": 985.02,
        "temperature": 0,
        "text": " My binary number starts on the left and goes to the right.",
        "tokens": [
          50964,
          1222,
          17434,
          1230,
          3719,
          322,
          264,
          1411,
          293,
          1709,
          281,
          264,
          558,
          13,
          51164
        ]
      },
      {
        "avg_logprob": -0.24488041701826077,
        "compression_ratio": 1.5454545454545454,
        "end": 996.02,
        "id": 229,
        "no_speech_prob": 0.6112310290336609,
        "seek": 97302,
        "start": 989.02,
        "temperature": 0,
        "text": " So the left-hand digit, the 0 or 1, is the amount, is the 2 to the 4th.",
        "tokens": [
          51164,
          407,
          264,
          1411,
          12,
          5543,
          14293,
          11,
          264,
          1958,
          420,
          502,
          11,
          307,
          264,
          2372,
          11,
          307,
          264,
          568,
          281,
          264,
          1017,
          392,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.24488041701826077,
        "compression_ratio": 1.5454545454545454,
        "end": 998.02,
        "id": 230,
        "no_speech_prob": 0.6112310290336609,
        "seek": 97302,
        "start": 996.02,
        "temperature": 0,
        "text": " No, 2 to the 3rd, excuse me.",
        "tokens": [
          51514,
          883,
          11,
          568,
          281,
          264,
          805,
          7800,
          11,
          8960,
          385,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.16412908890668085,
        "compression_ratio": 1.6037735849056605,
        "end": 1004.02,
        "id": 231,
        "no_speech_prob": 0.534904420375824,
        "seek": 99802,
        "start": 998.02,
        "temperature": 0,
        "text": " 2 to the 3rd, 2 squared, 2 to the 1, 2 to the 0.",
        "tokens": [
          50364,
          568,
          281,
          264,
          805,
          7800,
          11,
          568,
          8889,
          11,
          568,
          281,
          264,
          502,
          11,
          568,
          281,
          264,
          1958,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.16412908890668085,
        "compression_ratio": 1.6037735849056605,
        "end": 1007.02,
        "id": 232,
        "no_speech_prob": 0.534904420375824,
        "seek": 99802,
        "start": 1004.02,
        "temperature": 0,
        "text": " There we go. Now we're seeing that in the correct place.",
        "tokens": [
          50664,
          821,
          321,
          352,
          13,
          823,
          321,
          434,
          2577,
          300,
          294,
          264,
          3006,
          1081,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.16412908890668085,
        "compression_ratio": 1.6037735849056605,
        "end": 1010.02,
        "id": 233,
        "no_speech_prob": 0.534904420375824,
        "seek": 99802,
        "start": 1007.02,
        "temperature": 0,
        "text": " Case number 2. Now I should be able to do these fairly quickly.",
        "tokens": [
          50814,
          17791,
          1230,
          568,
          13,
          823,
          286,
          820,
          312,
          1075,
          281,
          360,
          613,
          6457,
          2661,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.16412908890668085,
        "compression_ratio": 1.6037735849056605,
        "end": 1017.02,
        "id": 234,
        "no_speech_prob": 0.534904420375824,
        "seek": 99802,
        "start": 1010.02,
        "temperature": 0,
        "text": " Case number 2 is a line between B and C.",
        "tokens": [
          50964,
          17791,
          1230,
          568,
          307,
          257,
          1622,
          1296,
          363,
          293,
          383,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.16412908890668085,
        "compression_ratio": 1.6037735849056605,
        "end": 1024.02,
        "id": 235,
        "no_speech_prob": 0.534904420375824,
        "seek": 99802,
        "start": 1017.02,
        "temperature": 0,
        "text": " Case number 3 is a line between A, B, and D.",
        "tokens": [
          51314,
          17791,
          1230,
          805,
          307,
          257,
          1622,
          1296,
          316,
          11,
          363,
          11,
          293,
          413,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.17850297870058002,
        "compression_ratio": 1.4851485148514851,
        "end": 1028.02,
        "id": 236,
        "no_speech_prob": 0.1732453852891922,
        "seek": 102402,
        "start": 1024.02,
        "temperature": 0,
        "text": " So I'm now going to speed through this, and you'll see if you can see.",
        "tokens": [
          50364,
          407,
          286,
          478,
          586,
          516,
          281,
          3073,
          807,
          341,
          11,
          293,
          291,
          603,
          536,
          498,
          291,
          393,
          536,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.17850297870058002,
        "compression_ratio": 1.4851485148514851,
        "end": 1031.02,
        "id": 237,
        "no_speech_prob": 0.1732453852891922,
        "seek": 102402,
        "start": 1028.02,
        "temperature": 0,
        "text": " I'm sure I'm going to make a mistake, but you'll see if I do.",
        "tokens": [
          50564,
          286,
          478,
          988,
          286,
          478,
          516,
          281,
          652,
          257,
          6146,
          11,
          457,
          291,
          603,
          536,
          498,
          286,
          360,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.17850297870058002,
        "compression_ratio": 1.4851485148514851,
        "end": 1036.02,
        "id": 238,
        "no_speech_prob": 0.1732453852891922,
        "seek": 102402,
        "start": 1031.02,
        "temperature": 0,
        "text": " ♪♪♪",
        "tokens": [
          50714,
          220,
          158,
          247,
          103,
          158,
          247,
          103,
          158,
          247,
          103,
          50964
        ]
      },
      {
        "avg_logprob": -0.17850297870058002,
        "compression_ratio": 1.4851485148514851,
        "end": 1040.02,
        "id": 239,
        "no_speech_prob": 0.1732453852891922,
        "seek": 102402,
        "start": 1036.02,
        "temperature": 0,
        "text": " I think I've put in all the correct line configurations",
        "tokens": [
          50964,
          286,
          519,
          286,
          600,
          829,
          294,
          439,
          264,
          3006,
          1622,
          31493,
          51164
        ]
      },
      {
        "avg_logprob": -0.17850297870058002,
        "compression_ratio": 1.4851485148514851,
        "end": 1044.02,
        "id": 240,
        "no_speech_prob": 0.1732453852891922,
        "seek": 102402,
        "start": 1040.02,
        "temperature": 0,
        "text": " based on every possible values for the four corners.",
        "tokens": [
          51164,
          2361,
          322,
          633,
          1944,
          4190,
          337,
          264,
          1451,
          12413,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.17850297870058002,
        "compression_ratio": 1.4851485148514851,
        "end": 1048.02,
        "id": 241,
        "no_speech_prob": 0.1732453852891922,
        "seek": 102402,
        "start": 1044.02,
        "temperature": 0,
        "text": " Let's see what this gives me.",
        "tokens": [
          51364,
          961,
          311,
          536,
          437,
          341,
          2709,
          385,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.17850297870058002,
        "compression_ratio": 1.4851485148514851,
        "end": 1050.02,
        "id": 242,
        "no_speech_prob": 0.1732453852891922,
        "seek": 102402,
        "start": 1048.02,
        "temperature": 0,
        "text": " Hey, look at that!",
        "tokens": [
          51564,
          1911,
          11,
          574,
          412,
          300,
          0,
          51664
        ]
      },
      {
        "avg_logprob": -0.16454006296343507,
        "compression_ratio": 1.6953125,
        "end": 1057.02,
        "id": 243,
        "no_speech_prob": 0.43760180473327637,
        "seek": 105002,
        "start": 1050.02,
        "temperature": 0,
        "text": " I have now drawn contours around all of the areas of black and white.",
        "tokens": [
          50364,
          286,
          362,
          586,
          10117,
          660,
          5067,
          926,
          439,
          295,
          264,
          3179,
          295,
          2211,
          293,
          2418,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.16454006296343507,
        "compression_ratio": 1.6953125,
        "end": 1061.02,
        "id": 244,
        "no_speech_prob": 0.43760180473327637,
        "seek": 105002,
        "start": 1057.02,
        "temperature": 0,
        "text": " Let's try putting in a different algorithm now.",
        "tokens": [
          50714,
          961,
          311,
          853,
          3372,
          294,
          257,
          819,
          9284,
          586,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.16454006296343507,
        "compression_ratio": 1.6953125,
        "end": 1063.02,
        "id": 245,
        "no_speech_prob": 0.43760180473327637,
        "seek": 105002,
        "start": 1061.02,
        "temperature": 0,
        "text": " I'm going to use OpenSimplex Noise.",
        "tokens": [
          50914,
          286,
          478,
          516,
          281,
          764,
          7238,
          39392,
          18945,
          44821,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.16454006296343507,
        "compression_ratio": 1.6953125,
        "end": 1067.02,
        "id": 246,
        "no_speech_prob": 0.43760180473327637,
        "seek": 105002,
        "start": 1063.02,
        "temperature": 0,
        "text": " I would refer you to some videos that I made on OpenSimplex Noise.",
        "tokens": [
          51014,
          286,
          576,
          2864,
          291,
          281,
          512,
          2145,
          300,
          286,
          1027,
          322,
          7238,
          39392,
          18945,
          44821,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.16454006296343507,
        "compression_ratio": 1.6953125,
        "end": 1072.02,
        "id": 247,
        "no_speech_prob": 0.43760180473327637,
        "seek": 105002,
        "start": 1067.02,
        "temperature": 0,
        "text": " I even worked on a library for processing that incorporates OpenSimplex Noise.",
        "tokens": [
          51214,
          286,
          754,
          2732,
          322,
          257,
          6405,
          337,
          9007,
          300,
          50193,
          7238,
          39392,
          18945,
          44821,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.16454006296343507,
        "compression_ratio": 1.6953125,
        "end": 1076.02,
        "id": 248,
        "no_speech_prob": 0.43760180473327637,
        "seek": 105002,
        "start": 1072.02,
        "temperature": 0,
        "text": " It didn't really get finished, so I'm just going to pull in the OpenSimplex Noise code directly",
        "tokens": [
          51464,
          467,
          994,
          380,
          534,
          483,
          4335,
          11,
          370,
          286,
          478,
          445,
          516,
          281,
          2235,
          294,
          264,
          7238,
          39392,
          18945,
          44821,
          3089,
          3838,
          51664
        ]
      },
      {
        "avg_logprob": -0.16454006296343507,
        "compression_ratio": 1.6953125,
        "end": 1079.02,
        "id": 249,
        "no_speech_prob": 0.43760180473327637,
        "seek": 105002,
        "start": 1076.02,
        "temperature": 0,
        "text": " from one of my previous examples here.",
        "tokens": [
          51664,
          490,
          472,
          295,
          452,
          3894,
          5110,
          510,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.2490492470656769,
        "compression_ratio": 1.48,
        "end": 1083.02,
        "id": 250,
        "no_speech_prob": 0.002714924979954958,
        "seek": 107902,
        "start": 1079.02,
        "temperature": 0,
        "text": " This was developed by Kurt Spencer in 2014.",
        "tokens": [
          50364,
          639,
          390,
          4743,
          538,
          26168,
          31996,
          294,
          8227,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.2490492470656769,
        "compression_ratio": 1.48,
        "end": 1090.02,
        "id": 251,
        "no_speech_prob": 0.002714924979954958,
        "seek": 107902,
        "start": 1083.02,
        "temperature": 0,
        "text": " It's a direct Java code without all the processing niceties,",
        "tokens": [
          50564,
          467,
          311,
          257,
          2047,
          10745,
          3089,
          1553,
          439,
          264,
          9007,
          6201,
          43469,
          11,
          50914
        ]
      },
      {
        "avg_logprob": -0.2490492470656769,
        "compression_ratio": 1.48,
        "end": 1093.02,
        "id": 252,
        "no_speech_prob": 0.002714924979954958,
        "seek": 107902,
        "start": 1090.02,
        "temperature": 0,
        "text": " so I'm actually going to put it in an OpenSimplexNoise.java tab.",
        "tokens": [
          50914,
          370,
          286,
          478,
          767,
          516,
          281,
          829,
          309,
          294,
          364,
          7238,
          39392,
          18945,
          4540,
          908,
          13,
          73,
          4061,
          4421,
          13,
          51064
        ]
      },
      {
        "avg_logprob": -0.2490492470656769,
        "compression_ratio": 1.48,
        "end": 1096.02,
        "id": 253,
        "no_speech_prob": 0.002714924979954958,
        "seek": 107902,
        "start": 1093.02,
        "temperature": 0,
        "text": " Then I should be able to say,",
        "tokens": [
          51064,
          1396,
          286,
          820,
          312,
          1075,
          281,
          584,
          11,
          51214
        ]
      },
      {
        "avg_logprob": -0.2490492470656769,
        "compression_ratio": 1.48,
        "end": 1105.02,
        "id": 254,
        "no_speech_prob": 0.002714924979954958,
        "seek": 107902,
        "start": 1096.02,
        "temperature": 0,
        "text": " OpenSimplexNoise, noise, noise equals new OpenSimplexNoise.",
        "tokens": [
          51214,
          7238,
          39392,
          18945,
          4540,
          908,
          11,
          5658,
          11,
          5658,
          6915,
          777,
          7238,
          39392,
          18945,
          4540,
          908,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.20307314073717272,
        "compression_ratio": 1.6919431279620853,
        "end": 1113.02,
        "id": 255,
        "no_speech_prob": 0.0018675284227356315,
        "seek": 110502,
        "start": 1106.02,
        "temperature": 0,
        "text": " Then what I'm going to do is I'm going to calculate in the draw loop new values each time.",
        "tokens": [
          50414,
          1396,
          437,
          286,
          478,
          516,
          281,
          360,
          307,
          286,
          478,
          516,
          281,
          8873,
          294,
          264,
          2642,
          6367,
          777,
          4190,
          1184,
          565,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.20307314073717272,
        "compression_ratio": 1.6919431279620853,
        "end": 1117.02,
        "id": 256,
        "no_speech_prob": 0.0018675284227356315,
        "seek": 110502,
        "start": 1113.02,
        "temperature": 0,
        "text": " Let's move this into the draw loop.",
        "tokens": [
          50764,
          961,
          311,
          1286,
          341,
          666,
          264,
          2642,
          6367,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.20307314073717272,
        "compression_ratio": 1.6919431279620853,
        "end": 1121.02,
        "id": 257,
        "no_speech_prob": 0.0018675284227356315,
        "seek": 110502,
        "start": 1117.02,
        "temperature": 0,
        "text": " Instead of a random number, I'm going to say noise.eval.",
        "tokens": [
          50964,
          7156,
          295,
          257,
          4974,
          1230,
          11,
          286,
          478,
          516,
          281,
          584,
          5658,
          13,
          68,
          3337,
          13,
          51164
        ]
      },
      {
        "avg_logprob": -0.20307314073717272,
        "compression_ratio": 1.6919431279620853,
        "end": 1125.02,
        "id": 258,
        "no_speech_prob": 0.0018675284227356315,
        "seek": 110502,
        "start": 1121.02,
        "temperature": 0,
        "text": " I want two offsets, an x offset and a y offset.",
        "tokens": [
          51164,
          286,
          528,
          732,
          39457,
          1385,
          11,
          364,
          2031,
          18687,
          293,
          257,
          288,
          18687,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.20307314073717272,
        "compression_ratio": 1.6919431279620853,
        "end": 1128.02,
        "id": 259,
        "no_speech_prob": 0.0018675284227356315,
        "seek": 110502,
        "start": 1125.02,
        "temperature": 0,
        "text": " Let's have x offset start at zero.",
        "tokens": [
          51364,
          961,
          311,
          362,
          2031,
          18687,
          722,
          412,
          4018,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.20307314073717272,
        "compression_ratio": 1.6919431279620853,
        "end": 1130.02,
        "id": 260,
        "no_speech_prob": 0.0018675284227356315,
        "seek": 110502,
        "start": 1128.02,
        "temperature": 0,
        "text": " This might seem super strange.",
        "tokens": [
          51514,
          639,
          1062,
          1643,
          1687,
          5861,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.20307314073717272,
        "compression_ratio": 1.6919431279620853,
        "end": 1131.02,
        "id": 261,
        "no_speech_prob": 0.0018675284227356315,
        "seek": 110502,
        "start": 1130.02,
        "temperature": 0,
        "text": " What are you talking about?",
        "tokens": [
          51614,
          708,
          366,
          291,
          1417,
          466,
          30,
          51664
        ]
      },
      {
        "avg_logprob": -0.20307314073717272,
        "compression_ratio": 1.6919431279620853,
        "end": 1134.02,
        "id": 262,
        "no_speech_prob": 0.0018675284227356315,
        "seek": 110502,
        "start": 1131.02,
        "temperature": 0,
        "text": " X offset, y offset, noise.eval.",
        "tokens": [
          51664,
          1783,
          18687,
          11,
          288,
          18687,
          11,
          5658,
          13,
          68,
          3337,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.1844958422476785,
        "compression_ratio": 1.6615384615384616,
        "end": 1139.02,
        "id": 263,
        "no_speech_prob": 0.002472561551257968,
        "seek": 113402,
        "start": 1134.02,
        "temperature": 0,
        "text": " You'll have to go back and look at some of my videos on Perlin noise and OpenSimplex noise.",
        "tokens": [
          50364,
          509,
          603,
          362,
          281,
          352,
          646,
          293,
          574,
          412,
          512,
          295,
          452,
          2145,
          322,
          3026,
          5045,
          5658,
          293,
          7238,
          39392,
          18945,
          5658,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.1844958422476785,
        "compression_ratio": 1.6615384615384616,
        "end": 1145.02,
        "id": 264,
        "no_speech_prob": 0.002472561551257968,
        "seek": 113402,
        "start": 1139.02,
        "temperature": 0,
        "text": " The short, the gist of it here is I am looking at this two-dimensional space",
        "tokens": [
          50614,
          440,
          2099,
          11,
          264,
          290,
          468,
          295,
          309,
          510,
          307,
          286,
          669,
          1237,
          412,
          341,
          732,
          12,
          18759,
          1901,
          50914
        ]
      },
      {
        "avg_logprob": -0.1844958422476785,
        "compression_ratio": 1.6615384615384616,
        "end": 1147.02,
        "id": 265,
        "no_speech_prob": 0.002472561551257968,
        "seek": 113402,
        "start": 1145.02,
        "temperature": 0,
        "text": " and looking for smooth random values.",
        "tokens": [
          50914,
          293,
          1237,
          337,
          5508,
          4974,
          4190,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.1844958422476785,
        "compression_ratio": 1.6615384615384616,
        "end": 1151.02,
        "id": 266,
        "no_speech_prob": 0.002472561551257968,
        "seek": 113402,
        "start": 1147.02,
        "temperature": 0,
        "text": " I'm going to get nice smooth gradients from white to black,",
        "tokens": [
          51014,
          286,
          478,
          516,
          281,
          483,
          1481,
          5508,
          2771,
          2448,
          490,
          2418,
          281,
          2211,
          11,
          51214
        ]
      },
      {
        "avg_logprob": -0.1844958422476785,
        "compression_ratio": 1.6615384615384616,
        "end": 1155.02,
        "id": 267,
        "no_speech_prob": 0.002472561551257968,
        "seek": 113402,
        "start": 1151.02,
        "temperature": 0,
        "text": " nice smooth gradients of gray throughout this space by calling this function.",
        "tokens": [
          51214,
          1481,
          5508,
          2771,
          2448,
          295,
          10855,
          3710,
          341,
          1901,
          538,
          5141,
          341,
          2445,
          13,
          51414
        ]
      },
      {
        "avg_logprob": -0.1844958422476785,
        "compression_ratio": 1.6615384615384616,
        "end": 1159.02,
        "id": 268,
        "no_speech_prob": 0.002472561551257968,
        "seek": 113402,
        "start": 1155.02,
        "temperature": 0,
        "text": " First of all, let me change this to float.",
        "tokens": [
          51414,
          2386,
          295,
          439,
          11,
          718,
          385,
          1319,
          341,
          281,
          15706,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.1844958422476785,
        "compression_ratio": 1.6615384615384616,
        "end": 1162.02,
        "id": 269,
        "no_speech_prob": 0.002472561551257968,
        "seek": 113402,
        "start": 1159.02,
        "temperature": 0,
        "text": " That's going to cause all sorts of problems.",
        "tokens": [
          51614,
          663,
          311,
          516,
          281,
          3082,
          439,
          7527,
          295,
          2740,
          13,
          51764
        ]
      },
      {
        "avg_logprob": -0.17840741810045743,
        "compression_ratio": 1.6374045801526718,
        "end": 1166.02,
        "id": 270,
        "no_speech_prob": 0.000022474076104117557,
        "seek": 116202,
        "start": 1162.02,
        "temperature": 0,
        "text": " Then this I have to convert to a float because the noise algorithm gives me a double.",
        "tokens": [
          50364,
          1396,
          341,
          286,
          362,
          281,
          7620,
          281,
          257,
          15706,
          570,
          264,
          5658,
          9284,
          2709,
          385,
          257,
          3834,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.17840741810045743,
        "compression_ratio": 1.6374045801526718,
        "end": 1169.02,
        "id": 271,
        "no_speech_prob": 0.000022474076104117557,
        "seek": 116202,
        "start": 1166.02,
        "temperature": 0,
        "text": " It just gives me a decimal number with more precision, but I don't need that.",
        "tokens": [
          50564,
          467,
          445,
          2709,
          385,
          257,
          26601,
          1230,
          365,
          544,
          18356,
          11,
          457,
          286,
          500,
          380,
          643,
          300,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.17840741810045743,
        "compression_ratio": 1.6374045801526718,
        "end": 1172.02,
        "id": 272,
        "no_speech_prob": 0.000022474076104117557,
        "seek": 116202,
        "start": 1169.02,
        "temperature": 0,
        "text": " I can convert it right to a float for using in processing.",
        "tokens": [
          50714,
          286,
          393,
          7620,
          309,
          558,
          281,
          257,
          15706,
          337,
          1228,
          294,
          9007,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.17840741810045743,
        "compression_ratio": 1.6374045801526718,
        "end": 1175.02,
        "id": 273,
        "no_speech_prob": 0.000022474076104117557,
        "seek": 116202,
        "start": 1172.02,
        "temperature": 0,
        "text": " Let's use this casting syntax to convert the output.",
        "tokens": [
          50864,
          961,
          311,
          764,
          341,
          17301,
          28431,
          281,
          7620,
          264,
          5598,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.17840741810045743,
        "compression_ratio": 1.6374045801526718,
        "end": 1177.02,
        "id": 274,
        "no_speech_prob": 0.000022474076104117557,
        "seek": 116202,
        "start": 1175.02,
        "temperature": 0,
        "text": " Let me just check to make sure.",
        "tokens": [
          51014,
          961,
          385,
          445,
          1520,
          281,
          652,
          988,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.17840741810045743,
        "compression_ratio": 1.6374045801526718,
        "end": 1181.02,
        "id": 275,
        "no_speech_prob": 0.000022474076104117557,
        "seek": 116202,
        "start": 1177.02,
        "temperature": 0,
        "text": " Oh my God, the mic has been down here this whole time.",
        "tokens": [
          51114,
          876,
          452,
          1265,
          11,
          264,
          3123,
          575,
          668,
          760,
          510,
          341,
          1379,
          565,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.17840741810045743,
        "compression_ratio": 1.6374045801526718,
        "end": 1189.02,
        "id": 276,
        "no_speech_prob": 0.000022474076104117557,
        "seek": 116202,
        "start": 1181.02,
        "temperature": 0,
        "text": " When I had integers, just zeros and ones, each corner had a value.",
        "tokens": [
          51314,
          1133,
          286,
          632,
          41674,
          11,
          445,
          35193,
          293,
          2306,
          11,
          1184,
          4538,
          632,
          257,
          2158,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.1739943647009181,
        "compression_ratio": 1.7421602787456445,
        "end": 1194.02,
        "id": 277,
        "no_speech_prob": 0.0004173147026449442,
        "seek": 118902,
        "start": 1190.02,
        "temperature": 0,
        "text": " Now each corner has a value, a noise value,",
        "tokens": [
          50414,
          823,
          1184,
          4538,
          575,
          257,
          2158,
          11,
          257,
          5658,
          2158,
          11,
          50614
        ]
      },
      {
        "avg_logprob": -0.1739943647009181,
        "compression_ratio": 1.7421602787456445,
        "end": 1198.02,
        "id": 278,
        "no_speech_prob": 0.0004173147026449442,
        "seek": 118902,
        "start": 1194.02,
        "temperature": 0,
        "text": " and OpenSimplex noise gives me numbers between negative one and one.",
        "tokens": [
          50614,
          293,
          7238,
          39392,
          18945,
          5658,
          2709,
          385,
          3547,
          1296,
          3671,
          472,
          293,
          472,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.1739943647009181,
        "compression_ratio": 1.7421602787456445,
        "end": 1203.02,
        "id": 279,
        "no_speech_prob": 0.0004173147026449442,
        "seek": 118902,
        "start": 1198.02,
        "temperature": 0,
        "text": " I want to keep these values because I might be able to do something more with them",
        "tokens": [
          50814,
          286,
          528,
          281,
          1066,
          613,
          4190,
          570,
          286,
          1062,
          312,
          1075,
          281,
          360,
          746,
          544,
          365,
          552,
          51064
        ]
      },
      {
        "avg_logprob": -0.1739943647009181,
        "compression_ratio": 1.7421602787456445,
        "end": 1207.02,
        "id": 280,
        "no_speech_prob": 0.0004173147026449442,
        "seek": 118902,
        "start": 1203.02,
        "temperature": 0,
        "text": " if they're continuous values later or at least suggest some things that you could try.",
        "tokens": [
          51064,
          498,
          436,
          434,
          10957,
          4190,
          1780,
          420,
          412,
          1935,
          3402,
          512,
          721,
          300,
          291,
          727,
          853,
          13,
          51264
        ]
      },
      {
        "avg_logprob": -0.1739943647009181,
        "compression_ratio": 1.7421602787456445,
        "end": 1212.02,
        "id": 281,
        "no_speech_prob": 0.0004173147026449442,
        "seek": 118902,
        "start": 1207.02,
        "temperature": 0,
        "text": " Basically, I think a solution that it could have is zero being right here in the middle.",
        "tokens": [
          51264,
          8537,
          11,
          286,
          519,
          257,
          3827,
          300,
          309,
          727,
          362,
          307,
          4018,
          885,
          558,
          510,
          294,
          264,
          2808,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.1739943647009181,
        "compression_ratio": 1.7421602787456445,
        "end": 1214.02,
        "id": 282,
        "no_speech_prob": 0.0004173147026449442,
        "seek": 118902,
        "start": 1212.02,
        "temperature": 0,
        "text": " If it's greater than zero, it's a one.",
        "tokens": [
          51514,
          759,
          309,
          311,
          5044,
          813,
          4018,
          11,
          309,
          311,
          257,
          472,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.1739943647009181,
        "compression_ratio": 1.7421602787456445,
        "end": 1218.02,
        "id": 283,
        "no_speech_prob": 0.0004173147026449442,
        "seek": 118902,
        "start": 1214.02,
        "temperature": 0,
        "text": " If it's less than zero, it's a zero in terms of converting it to a binary representation.",
        "tokens": [
          51614,
          759,
          309,
          311,
          1570,
          813,
          4018,
          11,
          309,
          311,
          257,
          4018,
          294,
          2115,
          295,
          29942,
          309,
          281,
          257,
          17434,
          10290,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.17550884858342528,
        "compression_ratio": 1.7491166077738516,
        "end": 1220.02,
        "id": 284,
        "no_speech_prob": 0.0014103467110544443,
        "seek": 121802,
        "start": 1218.02,
        "temperature": 0,
        "text": " I can actually just use the ceiling function.",
        "tokens": [
          50364,
          286,
          393,
          767,
          445,
          764,
          264,
          13655,
          2445,
          13,
          50464
        ]
      },
      {
        "avg_logprob": -0.17550884858342528,
        "compression_ratio": 1.7491166077738516,
        "end": 1224.02,
        "id": 285,
        "no_speech_prob": 0.0014103467110544443,
        "seek": 121802,
        "start": 1220.02,
        "temperature": 0,
        "text": " If I have a number between negative one and one, ceiling raises it up.",
        "tokens": [
          50464,
          759,
          286,
          362,
          257,
          1230,
          1296,
          3671,
          472,
          293,
          472,
          11,
          13655,
          19658,
          309,
          493,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.17550884858342528,
        "compression_ratio": 1.7491166077738516,
        "end": 1227.02,
        "id": 286,
        "no_speech_prob": 0.0014103467110544443,
        "seek": 121802,
        "start": 1224.02,
        "temperature": 0,
        "text": " If it's below zero, it will become zero. If it's above zero, it will become one.",
        "tokens": [
          50664,
          759,
          309,
          311,
          2507,
          4018,
          11,
          309,
          486,
          1813,
          4018,
          13,
          759,
          309,
          311,
          3673,
          4018,
          11,
          309,
          486,
          1813,
          472,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.17550884858342528,
        "compression_ratio": 1.7491166077738516,
        "end": 1232.02,
        "id": 287,
        "no_speech_prob": 0.0014103467110544443,
        "seek": 121802,
        "start": 1227.02,
        "temperature": 0,
        "text": " I think this is going to be a little bit awkward in terms of making this so long,",
        "tokens": [
          50814,
          286,
          519,
          341,
          307,
          516,
          281,
          312,
          257,
          707,
          857,
          11411,
          294,
          2115,
          295,
          1455,
          341,
          370,
          938,
          11,
          51064
        ]
      },
      {
        "avg_logprob": -0.17550884858342528,
        "compression_ratio": 1.7491166077738516,
        "end": 1236.02,
        "id": 288,
        "no_speech_prob": 0.0014103467110544443,
        "seek": 121802,
        "start": 1232.02,
        "temperature": 0,
        "text": " but I can just put ceiling around each of these.",
        "tokens": [
          51064,
          457,
          286,
          393,
          445,
          829,
          13655,
          926,
          1184,
          295,
          613,
          13,
          51264
        ]
      },
      {
        "avg_logprob": -0.17550884858342528,
        "compression_ratio": 1.7491166077738516,
        "end": 1242.02,
        "id": 289,
        "no_speech_prob": 0.0014103467110544443,
        "seek": 121802,
        "start": 1236.02,
        "temperature": 0,
        "text": " All of the values here are all the same because I took the same noise value",
        "tokens": [
          51264,
          1057,
          295,
          264,
          4190,
          510,
          366,
          439,
          264,
          912,
          570,
          286,
          1890,
          264,
          912,
          5658,
          2158,
          51564
        ]
      },
      {
        "avg_logprob": -0.17550884858342528,
        "compression_ratio": 1.7491166077738516,
        "end": 1244.02,
        "id": 290,
        "no_speech_prob": 0.0014103467110544443,
        "seek": 121802,
        "start": 1242.02,
        "temperature": 0,
        "text": " with the same X offset and Y offset.",
        "tokens": [
          51564,
          365,
          264,
          912,
          1783,
          18687,
          293,
          398,
          18687,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.17550884858342528,
        "compression_ratio": 1.7491166077738516,
        "end": 1247.02,
        "id": 291,
        "no_speech_prob": 0.0014103467110544443,
        "seek": 121802,
        "start": 1244.02,
        "temperature": 0,
        "text": " I need to move throughout that two-dimensional space.",
        "tokens": [
          51664,
          286,
          643,
          281,
          1286,
          3710,
          300,
          732,
          12,
          18759,
          1901,
          13,
          51814
        ]
      },
      {
        "avg_logprob": -0.17391549267815154,
        "compression_ratio": 1.6714285714285715,
        "end": 1251.02,
        "id": 292,
        "no_speech_prob": 0.00031015349668450654,
        "seek": 124702,
        "start": 1247.02,
        "temperature": 0,
        "text": " I am going to create a variable called increment.",
        "tokens": [
          50364,
          286,
          669,
          516,
          281,
          1884,
          257,
          7006,
          1219,
          26200,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.17391549267815154,
        "compression_ratio": 1.6714285714285715,
        "end": 1254.02,
        "id": 293,
        "no_speech_prob": 0.00031015349668450654,
        "seek": 124702,
        "start": 1251.02,
        "temperature": 0,
        "text": " I am going to set that to 0.1.",
        "tokens": [
          50564,
          286,
          669,
          516,
          281,
          992,
          300,
          281,
          1958,
          13,
          16,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.17391549267815154,
        "compression_ratio": 1.6714285714285715,
        "end": 1258.02,
        "id": 294,
        "no_speech_prob": 0.00031015349668450654,
        "seek": 124702,
        "start": 1254.02,
        "temperature": 0,
        "text": " For every column, X offset will go up by increment.",
        "tokens": [
          50714,
          1171,
          633,
          7738,
          11,
          1783,
          18687,
          486,
          352,
          493,
          538,
          26200,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.17391549267815154,
        "compression_ratio": 1.6714285714285715,
        "end": 1262.02,
        "id": 295,
        "no_speech_prob": 0.00031015349668450654,
        "seek": 124702,
        "start": 1258.02,
        "temperature": 0,
        "text": " For every row, Y offset will go up by increment.",
        "tokens": [
          50914,
          1171,
          633,
          5386,
          11,
          398,
          18687,
          486,
          352,
          493,
          538,
          26200,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.17391549267815154,
        "compression_ratio": 1.6714285714285715,
        "end": 1264.02,
        "id": 296,
        "no_speech_prob": 0.00031015349668450654,
        "seek": 124702,
        "start": 1262.02,
        "temperature": 0,
        "text": " Now, there we go.",
        "tokens": [
          51114,
          823,
          11,
          456,
          321,
          352,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.17391549267815154,
        "compression_ratio": 1.6714285714285715,
        "end": 1269.02,
        "id": 297,
        "no_speech_prob": 0.00031015349668450654,
        "seek": 124702,
        "start": 1264.02,
        "temperature": 0,
        "text": " We can see this is the noise space and this is drawing a contour around it.",
        "tokens": [
          51214,
          492,
          393,
          536,
          341,
          307,
          264,
          5658,
          1901,
          293,
          341,
          307,
          6316,
          257,
          21234,
          926,
          309,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.17391549267815154,
        "compression_ratio": 1.6714285714285715,
        "end": 1274.02,
        "id": 298,
        "no_speech_prob": 0.00031015349668450654,
        "seek": 124702,
        "start": 1269.02,
        "temperature": 0,
        "text": " Let me lower the resolution a little bit. I think it's time to do that now.",
        "tokens": [
          51464,
          961,
          385,
          3126,
          264,
          8669,
          257,
          707,
          857,
          13,
          286,
          519,
          309,
          311,
          565,
          281,
          360,
          300,
          586,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.18232650430793437,
        "compression_ratio": 1.649056603773585,
        "end": 1277.02,
        "id": 299,
        "no_speech_prob": 0.0004044791858177632,
        "seek": 127402,
        "start": 1274.02,
        "temperature": 0,
        "text": " There we go. We can start to see this terrain.",
        "tokens": [
          50364,
          821,
          321,
          352,
          13,
          492,
          393,
          722,
          281,
          536,
          341,
          17674,
          13,
          50514
        ]
      },
      {
        "avg_logprob": -0.18232650430793437,
        "compression_ratio": 1.649056603773585,
        "end": 1280.02,
        "id": 300,
        "no_speech_prob": 0.0004044791858177632,
        "seek": 127402,
        "start": 1277.02,
        "temperature": 0,
        "text": " It's a terrain-like thing with these contours drawn around it.",
        "tokens": [
          50514,
          467,
          311,
          257,
          17674,
          12,
          4092,
          551,
          365,
          613,
          660,
          5067,
          10117,
          926,
          309,
          13,
          50664
        ]
      },
      {
        "avg_logprob": -0.18232650430793437,
        "compression_ratio": 1.649056603773585,
        "end": 1283.02,
        "id": 301,
        "no_speech_prob": 0.0004044791858177632,
        "seek": 127402,
        "start": 1280.02,
        "temperature": 0,
        "text": " I love this. Let's do something a little bit more.",
        "tokens": [
          50664,
          286,
          959,
          341,
          13,
          961,
          311,
          360,
          746,
          257,
          707,
          857,
          544,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.18232650430793437,
        "compression_ratio": 1.649056603773585,
        "end": 1289.02,
        "id": 302,
        "no_speech_prob": 0.0004044791858177632,
        "seek": 127402,
        "start": 1283.02,
        "temperature": 0,
        "text": " Let me use the fact that OpenSimplexNoise can be calculated in three-dimensional space.",
        "tokens": [
          50814,
          961,
          385,
          764,
          264,
          1186,
          300,
          7238,
          39392,
          18945,
          4540,
          908,
          393,
          312,
          15598,
          294,
          1045,
          12,
          18759,
          1901,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.18232650430793437,
        "compression_ratio": 1.649056603773585,
        "end": 1294.02,
        "id": 303,
        "no_speech_prob": 0.0004044791858177632,
        "seek": 127402,
        "start": 1289.02,
        "temperature": 0,
        "text": " While this really could be something quite exciting if I were rendering in 3D",
        "tokens": [
          51114,
          3987,
          341,
          534,
          727,
          312,
          746,
          1596,
          4670,
          498,
          286,
          645,
          22407,
          294,
          805,
          35,
          51364
        ]
      },
      {
        "avg_logprob": -0.18232650430793437,
        "compression_ratio": 1.649056603773585,
        "end": 1297.02,
        "id": 304,
        "no_speech_prob": 0.0004044791858177632,
        "seek": 127402,
        "start": 1294.02,
        "temperature": 0,
        "text": " and then eventually I could use 4D OpenSimplexNoise,",
        "tokens": [
          51364,
          293,
          550,
          4728,
          286,
          727,
          764,
          1017,
          35,
          7238,
          39392,
          18945,
          4540,
          908,
          11,
          51514
        ]
      },
      {
        "avg_logprob": -0.18232650430793437,
        "compression_ratio": 1.649056603773585,
        "end": 1300.02,
        "id": 305,
        "no_speech_prob": 0.0004044791858177632,
        "seek": 127402,
        "start": 1297.02,
        "temperature": 0,
        "text": " what I am going to do instead is use that third dimension",
        "tokens": [
          51514,
          437,
          286,
          669,
          516,
          281,
          360,
          2602,
          307,
          764,
          300,
          2636,
          10139,
          51664
        ]
      },
      {
        "avg_logprob": -0.25938885710960213,
        "compression_ratio": 1.6962962962962962,
        "end": 1304.02,
        "id": 306,
        "no_speech_prob": 0.0913693904876709,
        "seek": 130002,
        "start": 1300.02,
        "temperature": 0,
        "text": " as thinking of it like time, so frames of animation.",
        "tokens": [
          50364,
          382,
          1953,
          295,
          309,
          411,
          565,
          11,
          370,
          12083,
          295,
          9603,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.25938885710960213,
        "compression_ratio": 1.6962962962962962,
        "end": 1309.02,
        "id": 307,
        "no_speech_prob": 0.0913693904876709,
        "seek": 130002,
        "start": 1304.02,
        "temperature": 0,
        "text": " If I create a global variable called Z offset, set that equal to 0.",
        "tokens": [
          50564,
          759,
          286,
          1884,
          257,
          4338,
          7006,
          1219,
          1176,
          18687,
          11,
          992,
          300,
          2681,
          281,
          1958,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.25938885710960213,
        "compression_ratio": 1.6962962962962962,
        "end": 1312.02,
        "id": 308,
        "no_speech_prob": 0.0913693904876709,
        "seek": 130002,
        "start": 1309.02,
        "temperature": 0,
        "text": " Then, every frame, Z offset goes up.",
        "tokens": [
          50814,
          1396,
          11,
          633,
          3920,
          11,
          1176,
          18687,
          1709,
          493,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.25938885710960213,
        "compression_ratio": 1.6962962962962962,
        "end": 1317.02,
        "id": 309,
        "no_speech_prob": 0.0913693904876709,
        "seek": 130002,
        "start": 1312.02,
        "temperature": 0,
        "text": " I think I might want to control this separately from the X off and Y off incrementation.",
        "tokens": [
          50964,
          286,
          519,
          286,
          1062,
          528,
          281,
          1969,
          341,
          14759,
          490,
          264,
          1783,
          766,
          293,
          398,
          766,
          26200,
          399,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.25938885710960213,
        "compression_ratio": 1.6962962962962962,
        "end": 1320.02,
        "id": 310,
        "no_speech_prob": 0.0913693904876709,
        "seek": 130002,
        "start": 1317.02,
        "temperature": 0,
        "text": " I am just going to hard code this in there. I am going to leave it the same number.",
        "tokens": [
          51214,
          286,
          669,
          445,
          516,
          281,
          1152,
          3089,
          341,
          294,
          456,
          13,
          286,
          669,
          516,
          281,
          1856,
          309,
          264,
          912,
          1230,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.25938885710960213,
        "compression_ratio": 1.6962962962962962,
        "end": 1322.02,
        "id": 311,
        "no_speech_prob": 0.0913693904876709,
        "seek": 130002,
        "start": 1320.02,
        "temperature": 0,
        "text": " I want to be able to have separate control over it.",
        "tokens": [
          51364,
          286,
          528,
          281,
          312,
          1075,
          281,
          362,
          4994,
          1969,
          670,
          309,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.25938885710960213,
        "compression_ratio": 1.6962962962962962,
        "end": 1324.02,
        "id": 312,
        "no_speech_prob": 0.0913693904876709,
        "seek": 130002,
        "start": 1322.02,
        "temperature": 0,
        "text": " Now, hmm.",
        "tokens": [
          51464,
          823,
          11,
          16478,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.25938885710960213,
        "compression_ratio": 1.6962962962962962,
        "end": 1328.02,
        "id": 313,
        "no_speech_prob": 0.0913693904876709,
        "seek": 130002,
        "start": 1324.02,
        "temperature": 0,
        "text": " Oh, well, of course, I need to add that to the noise calculation.",
        "tokens": [
          51564,
          876,
          11,
          731,
          11,
          295,
          1164,
          11,
          286,
          643,
          281,
          909,
          300,
          281,
          264,
          5658,
          17108,
          13,
          51764
        ]
      },
      {
        "avg_logprob": -0.1890524781268576,
        "compression_ratio": 1.5048543689320388,
        "end": 1331.02,
        "id": 314,
        "no_speech_prob": 0.00001260692260984797,
        "seek": 132802,
        "start": 1329.02,
        "temperature": 0,
        "text": " Whoa!",
        "tokens": [
          50414,
          7521,
          0,
          50514
        ]
      },
      {
        "avg_logprob": -0.1890524781268576,
        "compression_ratio": 1.5048543689320388,
        "end": 1334.02,
        "id": 315,
        "no_speech_prob": 0.00001260692260984797,
        "seek": 132802,
        "start": 1331.02,
        "temperature": 0,
        "text": " That is why I want to control it separately",
        "tokens": [
          50514,
          663,
          307,
          983,
          286,
          528,
          281,
          1969,
          309,
          14759,
          50664
        ]
      },
      {
        "avg_logprob": -0.1890524781268576,
        "compression_ratio": 1.5048543689320388,
        "end": 1339.02,
        "id": 316,
        "no_speech_prob": 0.00001260692260984797,
        "seek": 132802,
        "start": 1334.02,
        "temperature": 0,
        "text": " because I want to have it go up much slower.",
        "tokens": [
          50664,
          570,
          286,
          528,
          281,
          362,
          309,
          352,
          493,
          709,
          14009,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.1890524781268576,
        "compression_ratio": 1.5048543689320388,
        "end": 1341.02,
        "id": 317,
        "no_speech_prob": 0.00001260692260984797,
        "seek": 132802,
        "start": 1339.02,
        "temperature": 0,
        "text": " There we go.",
        "tokens": [
          50914,
          821,
          321,
          352,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.1890524781268576,
        "compression_ratio": 1.5048543689320388,
        "end": 1345.02,
        "id": 318,
        "no_speech_prob": 0.00001260692260984797,
        "seek": 132802,
        "start": 1341.02,
        "temperature": 0,
        "text": " Now, you can see this is a very, very fast algorithm.",
        "tokens": [
          51014,
          823,
          11,
          291,
          393,
          536,
          341,
          307,
          257,
          588,
          11,
          588,
          2370,
          9284,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.1890524781268576,
        "compression_ratio": 1.5048543689320388,
        "end": 1348.02,
        "id": 319,
        "no_speech_prob": 0.00001260692260984797,
        "seek": 132802,
        "start": 1345.02,
        "temperature": 0,
        "text": " Some things that might be interesting to try here.",
        "tokens": [
          51214,
          2188,
          721,
          300,
          1062,
          312,
          1880,
          281,
          853,
          510,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.1890524781268576,
        "compression_ratio": 1.5048543689320388,
        "end": 1352.02,
        "id": 320,
        "no_speech_prob": 0.00001260692260984797,
        "seek": 132802,
        "start": 1348.02,
        "temperature": 0,
        "text": " One is I don't know how much value I am getting out of rendering those points.",
        "tokens": [
          51364,
          1485,
          307,
          286,
          500,
          380,
          458,
          577,
          709,
          2158,
          286,
          669,
          1242,
          484,
          295,
          22407,
          729,
          2793,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.1890524781268576,
        "compression_ratio": 1.5048543689320388,
        "end": 1354.02,
        "id": 321,
        "no_speech_prob": 0.00001260692260984797,
        "seek": 132802,
        "start": 1352.02,
        "temperature": 0,
        "text": " It is nice to see.",
        "tokens": [
          51564,
          467,
          307,
          1481,
          281,
          536,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.22020923581897703,
        "compression_ratio": 1.6680161943319838,
        "end": 1358.02,
        "id": 322,
        "no_speech_prob": 0.10667386651039124,
        "seek": 135402,
        "start": 1354.02,
        "temperature": 0,
        "text": " Actually, you know what? A way that I would like to render them, just because I am curious.",
        "tokens": [
          50364,
          5135,
          11,
          291,
          458,
          437,
          30,
          316,
          636,
          300,
          286,
          576,
          411,
          281,
          15529,
          552,
          11,
          445,
          570,
          286,
          669,
          6369,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.22020923581897703,
        "compression_ratio": 1.6680161943319838,
        "end": 1364.02,
        "id": 323,
        "no_speech_prob": 0.10667386651039124,
        "seek": 135402,
        "start": 1358.02,
        "temperature": 0,
        "text": " Let me actually make this fill and no stroke.",
        "tokens": [
          50564,
          961,
          385,
          767,
          652,
          341,
          2836,
          293,
          572,
          12403,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.22020923581897703,
        "compression_ratio": 1.6680161943319838,
        "end": 1366.02,
        "id": 324,
        "no_speech_prob": 0.10667386651039124,
        "seek": 135402,
        "start": 1364.02,
        "temperature": 0,
        "text": " I am just going to draw these as recti.",
        "tokens": [
          50864,
          286,
          669,
          445,
          516,
          281,
          2642,
          613,
          382,
          11048,
          72,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.22020923581897703,
        "compression_ratio": 1.6680161943319838,
        "end": 1369.02,
        "id": 325,
        "no_speech_prob": 0.10667386651039124,
        "seek": 135402,
        "start": 1366.02,
        "temperature": 0,
        "text": " This isn't exactly accurate because the value is the corner.",
        "tokens": [
          50964,
          639,
          1943,
          380,
          2293,
          8559,
          570,
          264,
          2158,
          307,
          264,
          4538,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.22020923581897703,
        "compression_ratio": 1.6680161943319838,
        "end": 1371.02,
        "id": 326,
        "no_speech_prob": 0.10667386651039124,
        "seek": 135402,
        "start": 1369.02,
        "temperature": 0,
        "text": " I am just sort of curious.",
        "tokens": [
          51114,
          286,
          669,
          445,
          1333,
          295,
          6369,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.22020923581897703,
        "compression_ratio": 1.6680161943319838,
        "end": 1373.02,
        "id": 327,
        "no_speech_prob": 0.10667386651039124,
        "seek": 135402,
        "start": 1371.02,
        "temperature": 0,
        "text": " Oh, yeah, that is kind of nice looking.",
        "tokens": [
          51214,
          876,
          11,
          1338,
          11,
          300,
          307,
          733,
          295,
          1481,
          1237,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.22020923581897703,
        "compression_ratio": 1.6680161943319838,
        "end": 1375.02,
        "id": 328,
        "no_speech_prob": 0.10667386651039124,
        "seek": 135402,
        "start": 1373.02,
        "temperature": 0,
        "text": " I sort of like seeing it this way.",
        "tokens": [
          51314,
          286,
          1333,
          295,
          411,
          2577,
          309,
          341,
          636,
          13,
          51414
        ]
      },
      {
        "avg_logprob": -0.22020923581897703,
        "compression_ratio": 1.6680161943319838,
        "end": 1377.02,
        "id": 329,
        "no_speech_prob": 0.10667386651039124,
        "seek": 135402,
        "start": 1375.02,
        "temperature": 0,
        "text": " That is what I was imagining.",
        "tokens": [
          51414,
          663,
          307,
          437,
          286,
          390,
          27798,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.22020923581897703,
        "compression_ratio": 1.6680161943319838,
        "end": 1381.02,
        "id": 330,
        "no_speech_prob": 0.10667386651039124,
        "seek": 135402,
        "start": 1377.02,
        "temperature": 0,
        "text": " I could make the resolution much smaller.",
        "tokens": [
          51514,
          286,
          727,
          652,
          264,
          8669,
          709,
          4356,
          13,
          51714
        ]
      },
      {
        "avg_logprob": -0.27474681242012683,
        "compression_ratio": 1.492537313432836,
        "end": 1383.02,
        "id": 331,
        "no_speech_prob": 0.0010816828580573201,
        "seek": 138102,
        "start": 1381.02,
        "temperature": 0,
        "text": " I could make this full screen.",
        "tokens": [
          50364,
          286,
          727,
          652,
          341,
          1577,
          2568,
          13,
          50464
        ]
      },
      {
        "avg_logprob": -0.27474681242012683,
        "compression_ratio": 1.492537313432836,
        "end": 1388.02,
        "id": 332,
        "no_speech_prob": 0.0010816828580573201,
        "seek": 138102,
        "start": 1383.02,
        "temperature": 0,
        "text": " Very slow.",
        "tokens": [
          50464,
          4372,
          2964,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.27474681242012683,
        "compression_ratio": 1.492537313432836,
        "end": 1397.02,
        "id": 333,
        "no_speech_prob": 0.0010816828580573201,
        "seek": 138102,
        "start": 1388.02,
        "temperature": 0,
        "text": " One thing I could do that might be interesting is just actually not bother drawing this at all.",
        "tokens": [
          50714,
          1485,
          551,
          286,
          727,
          360,
          300,
          1062,
          312,
          1880,
          307,
          445,
          767,
          406,
          8677,
          6316,
          341,
          412,
          439,
          13,
          51164
        ]
      },
      {
        "avg_logprob": -0.27474681242012683,
        "compression_ratio": 1.492537313432836,
        "end": 1399.02,
        "id": 334,
        "no_speech_prob": 0.0010816828580573201,
        "seek": 138102,
        "start": 1397.02,
        "temperature": 0,
        "text": " The rectangles.",
        "tokens": [
          51164,
          440,
          24077,
          904,
          13,
          51264
        ]
      },
      {
        "avg_logprob": -0.27474681242012683,
        "compression_ratio": 1.492537313432836,
        "end": 1401.02,
        "id": 335,
        "no_speech_prob": 0.0010816828580573201,
        "seek": 138102,
        "start": 1399.02,
        "temperature": 0,
        "text": " That will speed things up a little bit.",
        "tokens": [
          51264,
          663,
          486,
          3073,
          721,
          493,
          257,
          707,
          857,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.27474681242012683,
        "compression_ratio": 1.492537313432836,
        "end": 1404.02,
        "id": 336,
        "no_speech_prob": 0.0010816828580573201,
        "seek": 138102,
        "start": 1401.02,
        "temperature": 0,
        "text": " Make the background black.",
        "tokens": [
          51364,
          4387,
          264,
          3678,
          2211,
          13,
          51514
        ]
      },
      {
        "avg_logprob": -0.27474681242012683,
        "compression_ratio": 1.492537313432836,
        "end": 1409.02,
        "id": 337,
        "no_speech_prob": 0.0010816828580573201,
        "seek": 138102,
        "start": 1404.02,
        "temperature": 0,
        "text": " Then I could also probably use the P2D renderer, which is hardware accelerated.",
        "tokens": [
          51514,
          1396,
          286,
          727,
          611,
          1391,
          764,
          264,
          430,
          17,
          35,
          15529,
          260,
          11,
          597,
          307,
          8837,
          29763,
          13,
          51764
        ]
      },
      {
        "avg_logprob": -0.1934200800382174,
        "compression_ratio": 1.6277056277056277,
        "end": 1412.02,
        "id": 338,
        "no_speech_prob": 0.0035935479681938887,
        "seek": 140902,
        "start": 1410.02,
        "temperature": 0,
        "text": " There we go.",
        "tokens": [
          50414,
          821,
          321,
          352,
          13,
          50514
        ]
      },
      {
        "avg_logprob": -0.1934200800382174,
        "compression_ratio": 1.6277056277056277,
        "end": 1414.02,
        "id": 339,
        "no_speech_prob": 0.0035935479681938887,
        "seek": 140902,
        "start": 1412.02,
        "temperature": 0,
        "text": " Look at that.",
        "tokens": [
          50514,
          2053,
          412,
          300,
          13,
          50614
        ]
      },
      {
        "avg_logprob": -0.1934200800382174,
        "compression_ratio": 1.6277056277056277,
        "end": 1416.02,
        "id": 340,
        "no_speech_prob": 0.0035935479681938887,
        "seek": 140902,
        "start": 1414.02,
        "temperature": 0,
        "text": " Here we go.",
        "tokens": [
          50614,
          1692,
          321,
          352,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.1934200800382174,
        "compression_ratio": 1.6277056277056277,
        "end": 1418.02,
        "id": 341,
        "no_speech_prob": 0.0035935479681938887,
        "seek": 140902,
        "start": 1416.02,
        "temperature": 0,
        "text": " This is really the end of this video.",
        "tokens": [
          50714,
          639,
          307,
          534,
          264,
          917,
          295,
          341,
          960,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.1934200800382174,
        "compression_ratio": 1.6277056277056277,
        "end": 1422.02,
        "id": 342,
        "no_speech_prob": 0.0035935479681938887,
        "seek": 140902,
        "start": 1418.02,
        "temperature": 0,
        "text": " It is the marching squares algorithm over a 2D OpenSimplex noise field.",
        "tokens": [
          50814,
          467,
          307,
          264,
          30523,
          19368,
          9284,
          670,
          257,
          568,
          35,
          7238,
          39392,
          18945,
          5658,
          2519,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.1934200800382174,
        "compression_ratio": 1.6277056277056277,
        "end": 1426.02,
        "id": 343,
        "no_speech_prob": 0.0035935479681938887,
        "seek": 140902,
        "start": 1422.02,
        "temperature": 0,
        "text": " I have really only scratched the surface, I think, with the creative possibilities here.",
        "tokens": [
          51014,
          286,
          362,
          534,
          787,
          40513,
          264,
          3753,
          11,
          286,
          519,
          11,
          365,
          264,
          5880,
          12178,
          510,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.1934200800382174,
        "compression_ratio": 1.6277056277056277,
        "end": 1428.02,
        "id": 344,
        "no_speech_prob": 0.0035935479681938887,
        "seek": 140902,
        "start": 1426.02,
        "temperature": 0,
        "text": " I have not explored color.",
        "tokens": [
          51214,
          286,
          362,
          406,
          24016,
          2017,
          13,
          51314
        ]
      },
      {
        "avg_logprob": -0.1934200800382174,
        "compression_ratio": 1.6277056277056277,
        "end": 1431.02,
        "id": 345,
        "no_speech_prob": 0.0035935479681938887,
        "seek": 140902,
        "start": 1428.02,
        "temperature": 0,
        "text": " I am just creating the field of numbers.",
        "tokens": [
          51314,
          286,
          669,
          445,
          4084,
          264,
          2519,
          295,
          3547,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.1934200800382174,
        "compression_ratio": 1.6277056277056277,
        "end": 1435.02,
        "id": 346,
        "no_speech_prob": 0.0035935479681938887,
        "seek": 140902,
        "start": 1431.02,
        "temperature": 0,
        "text": " Just with OpenSimplex noise, there are lots of other noise algorithms.",
        "tokens": [
          51464,
          1449,
          365,
          7238,
          39392,
          18945,
          5658,
          11,
          456,
          366,
          3195,
          295,
          661,
          5658,
          14642,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.20452072143554687,
        "compression_ratio": 1.5968379446640317,
        "end": 1439.02,
        "id": 347,
        "no_speech_prob": 0.08755481243133545,
        "seek": 143502,
        "start": 1435.02,
        "temperature": 0,
        "text": " I could use an image, convert it to grayscale, and have those be the values.",
        "tokens": [
          50364,
          286,
          727,
          764,
          364,
          3256,
          11,
          7620,
          309,
          281,
          677,
          3772,
          37088,
          11,
          293,
          362,
          729,
          312,
          264,
          4190,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.20452072143554687,
        "compression_ratio": 1.5968379446640317,
        "end": 1444.02,
        "id": 348,
        "no_speech_prob": 0.08755481243133545,
        "seek": 143502,
        "start": 1439.02,
        "temperature": 0,
        "text": " I could use my live webcam image.",
        "tokens": [
          50564,
          286,
          727,
          764,
          452,
          1621,
          39490,
          3256,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.20452072143554687,
        "compression_ratio": 1.5968379446640317,
        "end": 1449.02,
        "id": 349,
        "no_speech_prob": 0.08755481243133545,
        "seek": 143502,
        "start": 1444.02,
        "temperature": 0,
        "text": " I could use distance from different circles or other objects floating in the space.",
        "tokens": [
          50814,
          286,
          727,
          764,
          4560,
          490,
          819,
          13040,
          420,
          661,
          6565,
          12607,
          294,
          264,
          1901,
          13,
          51064
        ]
      },
      {
        "avg_logprob": -0.20452072143554687,
        "compression_ratio": 1.5968379446640317,
        "end": 1455.02,
        "id": 350,
        "no_speech_prob": 0.08755481243133545,
        "seek": 143502,
        "start": 1449.02,
        "temperature": 0,
        "text": " This is what is in the Jamie Wong article about using a moving circle to create a metaballs-like pattern.",
        "tokens": [
          51064,
          639,
          307,
          437,
          307,
          294,
          264,
          19309,
          41638,
          7222,
          466,
          1228,
          257,
          2684,
          6329,
          281,
          1884,
          257,
          1131,
          455,
          39655,
          12,
          4092,
          5102,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.20452072143554687,
        "compression_ratio": 1.5968379446640317,
        "end": 1459.02,
        "id": 351,
        "no_speech_prob": 0.08755481243133545,
        "seek": 143502,
        "start": 1455.02,
        "temperature": 0,
        "text": " You can look at what Sebastian Lag did for procedural cave generation.",
        "tokens": [
          51364,
          509,
          393,
          574,
          412,
          437,
          31102,
          24886,
          630,
          337,
          43951,
          11730,
          5125,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.20452072143554687,
        "compression_ratio": 1.5968379446640317,
        "end": 1461.02,
        "id": 352,
        "no_speech_prob": 0.08755481243133545,
        "seek": 143502,
        "start": 1459.02,
        "temperature": 0,
        "text": " There are so many possibilities.",
        "tokens": [
          51564,
          821,
          366,
          370,
          867,
          12178,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.24750171388898576,
        "compression_ratio": 1.539906103286385,
        "end": 1468.02,
        "id": 353,
        "no_speech_prob": 0.03567530959844589,
        "seek": 146102,
        "start": 1461.02,
        "temperature": 0,
        "text": " One thing that I have not explored that you will notice if you look at the Wikipedia page explanation or Jamie Wong's article,",
        "tokens": [
          50364,
          1485,
          551,
          300,
          286,
          362,
          406,
          24016,
          300,
          291,
          486,
          3449,
          498,
          291,
          574,
          412,
          264,
          28999,
          3028,
          10835,
          420,
          19309,
          41638,
          311,
          7222,
          11,
          50714
        ]
      },
      {
        "avg_logprob": -0.24750171388898576,
        "compression_ratio": 1.539906103286385,
        "end": 1473.02,
        "id": 354,
        "no_speech_prob": 0.03567530959844589,
        "seek": 146102,
        "start": 1468.02,
        "temperature": 0,
        "text": " is that I am always drawing the lines from these exact midpoints.",
        "tokens": [
          50714,
          307,
          300,
          286,
          669,
          1009,
          6316,
          264,
          3876,
          490,
          613,
          1900,
          2062,
          20552,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.24750171388898576,
        "compression_ratio": 1.539906103286385,
        "end": 1478.02,
        "id": 355,
        "no_speech_prob": 0.03567530959844589,
        "seek": 146102,
        "start": 1473.02,
        "temperature": 0,
        "text": " However, each one of these corner values now has a floating point number.",
        "tokens": [
          50964,
          2908,
          11,
          1184,
          472,
          295,
          613,
          4538,
          4190,
          586,
          575,
          257,
          12607,
          935,
          1230,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.24750171388898576,
        "compression_ratio": 1.539906103286385,
        "end": 1482.02,
        "id": 356,
        "no_speech_prob": 0.03567530959844589,
        "seek": 146102,
        "start": 1480.02,
        "temperature": 0,
        "text": " What if I had...",
        "tokens": [
          51314,
          708,
          498,
          286,
          632,
          485,
          51414
        ]
      },
      {
        "avg_logprob": -0.24750171388898576,
        "compression_ratio": 1.539906103286385,
        "end": 1487.02,
        "id": 357,
        "no_speech_prob": 0.03567530959844589,
        "seek": 146102,
        "start": 1482.02,
        "temperature": 0,
        "text": " If these are 1s, we know the line goes here.",
        "tokens": [
          51414,
          759,
          613,
          366,
          502,
          82,
          11,
          321,
          458,
          264,
          1622,
          1709,
          510,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.23787085650718376,
        "compression_ratio": 1.4974358974358974,
        "end": 1495.02,
        "id": 358,
        "no_speech_prob": 0.0005614686524495482,
        "seek": 148702,
        "start": 1487.02,
        "temperature": 0,
        "text": " What if the values here were 0.01 and this is 0.99?",
        "tokens": [
          50364,
          708,
          498,
          264,
          4190,
          510,
          645,
          1958,
          13,
          10607,
          293,
          341,
          307,
          1958,
          13,
          8494,
          30,
          50764
        ]
      },
      {
        "avg_logprob": -0.23787085650718376,
        "compression_ratio": 1.4974358974358974,
        "end": 1502.02,
        "id": 359,
        "no_speech_prob": 0.0005614686524495482,
        "seek": 148702,
        "start": 1495.02,
        "temperature": 0,
        "text": " Maybe this should be, for the higher value, much closer to this edge or further away and vice versa for this.",
        "tokens": [
          50764,
          2704,
          341,
          820,
          312,
          11,
          337,
          264,
          2946,
          2158,
          11,
          709,
          4966,
          281,
          341,
          4691,
          420,
          3052,
          1314,
          293,
          11964,
          25650,
          337,
          341,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.23787085650718376,
        "compression_ratio": 1.4974358974358974,
        "end": 1513.02,
        "id": 360,
        "no_speech_prob": 0.0005614686524495482,
        "seek": 148702,
        "start": 1502.02,
        "temperature": 0,
        "text": " This idea of a linear interpolation where the midpoint is actually variable according to the magnitude of the value on the corner.",
        "tokens": [
          51114,
          639,
          1558,
          295,
          257,
          8213,
          44902,
          399,
          689,
          264,
          2062,
          6053,
          307,
          767,
          7006,
          4650,
          281,
          264,
          15668,
          295,
          264,
          2158,
          322,
          264,
          4538,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.31430002053578693,
        "compression_ratio": 1.7466666666666666,
        "end": 1524.02,
        "id": 361,
        "no_speech_prob": 0.01223958283662796,
        "seek": 151302,
        "start": 1514.02,
        "temperature": 0,
        "text": " If I am correct, this would make for much smoother patterns that feel like they are less blocky looking.",
        "tokens": [
          50414,
          759,
          286,
          669,
          3006,
          11,
          341,
          576,
          652,
          337,
          709,
          28640,
          8294,
          300,
          841,
          411,
          436,
          366,
          1570,
          3461,
          88,
          1237,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.31430002053578693,
        "compression_ratio": 1.7466666666666666,
        "end": 1526.02,
        "id": 362,
        "no_speech_prob": 0.01223958283662796,
        "seek": 151302,
        "start": 1524.02,
        "temperature": 0,
        "text": " I rather like this blocky looking.",
        "tokens": [
          50914,
          286,
          2831,
          411,
          341,
          3461,
          88,
          1237,
          13,
          51014
        ]
      },
      {
        "avg_logprob": -0.31430002053578693,
        "compression_ratio": 1.7466666666666666,
        "end": 1528.02,
        "id": 363,
        "no_speech_prob": 0.01223958283662796,
        "seek": 151302,
        "start": 1526.02,
        "temperature": 0,
        "text": " It works for a certain aesthetic.",
        "tokens": [
          51014,
          467,
          1985,
          337,
          257,
          1629,
          20092,
          13,
          51114
        ]
      },
      {
        "avg_logprob": -0.31430002053578693,
        "compression_ratio": 1.7466666666666666,
        "end": 1530.02,
        "id": 364,
        "no_speech_prob": 0.01223958283662796,
        "seek": 151302,
        "start": 1528.02,
        "temperature": 0,
        "text": " That is something that would be worth exploring.",
        "tokens": [
          51114,
          663,
          307,
          746,
          300,
          576,
          312,
          3163,
          12736,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.31430002053578693,
        "compression_ratio": 1.7466666666666666,
        "end": 1537.02,
        "id": 365,
        "no_speech_prob": 0.01223958283662796,
        "seek": 151302,
        "start": 1530.02,
        "temperature": 0,
        "text": " If I am able to do that after this video, you will be seeing a version of this exact example of how it looks.",
        "tokens": [
          51214,
          759,
          286,
          669,
          1075,
          281,
          360,
          300,
          934,
          341,
          960,
          11,
          291,
          486,
          312,
          2577,
          257,
          3037,
          295,
          341,
          1900,
          1365,
          295,
          577,
          309,
          1542,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.31430002053578693,
        "compression_ratio": 1.7466666666666666,
        "end": 1542.02,
        "id": 366,
        "no_speech_prob": 0.01223958283662796,
        "seek": 151302,
        "start": 1537.02,
        "temperature": 0,
        "text": " Thanks for joining me through this little exploration of the",
        "tokens": [
          51564,
          2561,
          337,
          5549,
          385,
          807,
          341,
          707,
          16197,
          295,
          264,
          51814
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1544.02,
        "id": 367,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1542.02,
        "temperature": 0,
        "text": " Marching Squares algorithm.",
        "tokens": [
          50364,
          6129,
          278,
          8683,
          8643,
          9284,
          13,
          50464
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1546.02,
        "id": 368,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1544.02,
        "temperature": 0,
        "text": " I have to find Gloria.",
        "tokens": [
          50464,
          286,
          362,
          281,
          915,
          34288,
          13,
          50564
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1548.02,
        "id": 369,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1546.02,
        "temperature": 0,
        "text": " Pickle, where has she gone?",
        "tokens": [
          50564,
          14129,
          306,
          11,
          689,
          575,
          750,
          2780,
          30,
          50664
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1550.02,
        "id": 370,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1548.02,
        "temperature": 0,
        "text": " She never came back for her water.",
        "tokens": [
          50664,
          1240,
          1128,
          1361,
          646,
          337,
          720,
          1281,
          13,
          50764
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1554.02,
        "id": 371,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1550.02,
        "temperature": 0,
        "text": " I know last time when I made a coding event, I said I was going to water the plants.",
        "tokens": [
          50764,
          286,
          458,
          1036,
          565,
          562,
          286,
          1027,
          257,
          17720,
          308,
          2475,
          11,
          286,
          848,
          286,
          390,
          516,
          281,
          1281,
          264,
          5972,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1556.02,
        "id": 372,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1554.02,
        "temperature": 0,
        "text": " Then, I didn't actually water the plants.",
        "tokens": [
          50964,
          1396,
          11,
          286,
          994,
          380,
          767,
          1281,
          264,
          5972,
          13,
          51064
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1559.02,
        "id": 373,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1556.02,
        "temperature": 0,
        "text": " I might have actually watered the plants, but I didn't show you me watering the plants.",
        "tokens": [
          51064,
          286,
          1062,
          362,
          767,
          1281,
          292,
          264,
          5972,
          11,
          457,
          286,
          994,
          380,
          855,
          291,
          385,
          33028,
          264,
          5972,
          13,
          51214
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1560.02,
        "id": 374,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1559.02,
        "temperature": 0,
        "text": " Who knows what really matters here?",
        "tokens": [
          51214,
          2102,
          3255,
          437,
          534,
          7001,
          510,
          30,
          51264
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1562.02,
        "id": 375,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1560.02,
        "temperature": 0,
        "text": " I need to water the plants. It is very hot.",
        "tokens": [
          51264,
          286,
          643,
          281,
          1281,
          264,
          5972,
          13,
          467,
          307,
          588,
          2368,
          13,
          51364
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1564.02,
        "id": 376,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1562.02,
        "temperature": 0,
        "text": " I am probably a little bit sweaty.",
        "tokens": [
          51364,
          286,
          669,
          1391,
          257,
          707,
          857,
          36044,
          13,
          51464
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1566.02,
        "id": 377,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1564.02,
        "temperature": 0,
        "text": " I need to cool off.",
        "tokens": [
          51464,
          286,
          643,
          281,
          1627,
          766,
          13,
          51564
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1567.02,
        "id": 378,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1566.02,
        "temperature": 0,
        "text": " Water the plants.",
        "tokens": [
          51564,
          8772,
          264,
          5972,
          13,
          51614
        ]
      },
      {
        "avg_logprob": -0.23976342472029322,
        "compression_ratio": 1.8372093023255813,
        "end": 1570.02,
        "id": 379,
        "no_speech_prob": 0.07803377509117126,
        "seek": 154202,
        "start": 1567.02,
        "temperature": 0,
        "text": " Find Pickle and make sure she is okay and has some water and some food.",
        "tokens": [
          51614,
          11809,
          14129,
          306,
          293,
          652,
          988,
          750,
          307,
          1392,
          293,
          575,
          512,
          1281,
          293,
          512,
          1755,
          13,
          51764
        ]
      },
      {
        "avg_logprob": -0.15631285735539027,
        "compression_ratio": 1.0476190476190477,
        "end": 1572.02,
        "id": 380,
        "no_speech_prob": 0.016652576625347137,
        "seek": 157002,
        "start": 1570.02,
        "temperature": 0,
        "text": " She probably needs to go for a walk.",
        "tokens": [
          50364,
          1240,
          1391,
          2203,
          281,
          352,
          337,
          257,
          1792,
          13,
          50464
        ]
      },
      {
        "avg_logprob": -0.15631285735539027,
        "compression_ratio": 1.0476190476190477,
        "end": 1575.02,
        "id": 381,
        "no_speech_prob": 0.016652576625347137,
        "seek": 157002,
        "start": 1572.02,
        "temperature": 0,
        "text": " I will see you in a future Coding the Cabana video.",
        "tokens": [
          50464,
          286,
          486,
          536,
          291,
          294,
          257,
          2027,
          383,
          8616,
          264,
          14704,
          2095,
          960,
          13,
          50614
        ]
      }
    ],
    "transcription": " Good girl. Welcome to another episode of Coding in the Cabana. Today I am going to tackle something called marching squares. The topic of marching squares or marching cubes was originally suggested for the Coding Train on February 18, 2019 by Quinn Sunrise. So I do want to try marching cubes. I suppose that'll either be in a follow-up video, whether it's a Cabana one or a live stream. I'm not so sure just yet. But I'm going to stick with just marching squares for this first video. If you're looking to do some research into this algorithm, the first place to look is the 1987 paper, Marching Cubes, a High Resolution 3D Surface Construction Algorithm by William Lorenzen and Harvey Klein. Sebastian Lag has a wonderful Coding Adventure video about using the marching cubes algorithm to create an endless underwater world, as well as a video using marching squares for 2D to generate procedural cave patterns. Coding Challenge number 28 on the Coding Train is about metaballs, which I've used a pixel based approach to create those patterns. But you can also use marching squares to create a similar effect. And Jamie Wong, Zero Wind Online, documents this process in a wonderful article about metaballs and marching squares from August 2014. I'm going to demonstrate the marching squares algorithm just by using it on a noise space. I'm going to use the OpenSimplex noise algorithm, although you could certainly use a Worley noise or any of the other noise algorithms I've talked about. And then once I finish that up, I'll try to return back to some of these ways that you could expand it further into metaballs and terrain generation and 3D. And then hopefully, you'll make lots of wonderful variations of this. And I'll be able to look at those and show them on a live stream someday. So here's how marching squares is described. A computer graphics algorithm that generates contours for a two dimensional scalar field rectangular array of individual numerical values. What? So let's try to break that down, what that means. So the good news is this is a two dimensional algorithm and it's something that we can visualize in a two dimensional space. So a nice little P5 canvas or processing window. I think I'm going to use processing, which I like to do in these Cabana videos, but always there will be a JavaScript P5.js version released as well that you can find in this video's description. What does this mean? The rectangular array of individual numerical values, a two dimensional scalar field. Well, if I take my processing window and divide it into a two dimensional grid, we could think of each cell of this grid as having a number. That's how we visualize two dimensional Perlin noise or Worley noise or all sorts of other algorithms that I've looked at on this, on the coding train. But in order to make marching squares happen, I need to put a little twist on this. I don't actually want to think of the center of each one of these as having a number. I want to think of these spots here where each square, note the idea of square here, has four corners and each of those four corners represents a number. Now, ultimately it's the same sort of thing. Like it's just a matter of where am I drawing my lines and where am I drawing my dots? But there is a 2D grid of numbers and each one of these spots has a value. So let me first create a processing window that just draws little dots like this and maybe gives each one a random number between zero and one. I think I'll want some type of variable to keep track of what is the resolution, what's the distance between any given dot and the next dot. So if the pixel window is 600 by 400, maybe each dot is separated by 10 pixels. I'll call that res, short for resolution, with a Z. Why not? So once I have a resolution, I want to know how many columns and how many rows. And now I have my two-dimensional array, which is going to keep track of all these values in this scalar field. So let's just write a loop, a nested loop that is, to look at every spot in the array. Oh, and I can just say random one. Then I'm going to do that exact same nested loop in draw to visualize the field. I'm going to visualize it as a stroke color, field times 255, point at i times res, j times res, right? Because there's this many columns spaced out by resolution. And let's see what that looks like. Okay, we can see that here. Now let me make those a little bit bigger. And we can see, here's my two-dimensional scalar field, or rectangular array of numerical values. So the idea of marching squares is, what would be some algorithm to find contours and patterns in this array of numbers? And I think just to make this easier to see, I'm going to just increase the resolution to 20. Let's actually have the stroke weight be the resolution times like 0.2 or something. And actually make that more like 0.4. And there we go. So I just wanted to be able to see this a bit more clearly at higher resolution. So to demonstrate how this works, I think it would be actually easier for me to consider each one of these numerical values as just a 0 or a 1. Later I'm going to describe what you can do once you have a floating point continuous values and how that affects the marching squares algorithm. But it's going to be much simpler to start just with 0s and 1s. So let me actually change that. So I'm going to say floor random 2. And I'm going to change this to an integer. I'm going to come back to floats later, but let's just leave it as an integer right now. Let's let the background be gray so I can see. Whoops, and this has to be integers. So now I can see I have just black and white dot. To figure this out, let's look at just one square. Each one of these corners, we'll call them maybe A, B, C, and D just as a naming device. Each one of these corners has a value of 0 or 1. So let's just say for the sake of argument, this one is 1. And maybe I'll visualize that by filling it in. And this one is 2. Sorry, this one is 0. This one is 0. And this one is 0. So I'm going to just consider, let me draw that again. I'm going to consider just this one particular configuration. Well, it so happens that this particular configuration, the way that I choose to visualize it is by drawing a line here. We can see that all of these are empty, but this one is full. Therefore, the line goes across from the midpoint here to the midpoint here. I could show you another one. Maybe from this, you could guess. This one is full and this one is full, so I want to separate that. So the idea here is that basically whichever ones are on or off, I want to separate the ones that are on from the ones that are off. So for example, if this was full and this was full, and by full, I don't know what full means. I should say this were 1, not 0. Then the line would actually end up here. And now, how many possible scenarios are there? Well, if there are four corners and each corner could be on or off, a 0 or a 1 in each one of these spots, whoops, 000 all the way up to 1111, well, this is like a four-bit number. There are four bits, four 0s or 1s. Two to the fourth power equals what? That's 16. So there are 16 possible configurations. Look at Gloria's water. She seems very thirsty. It's a hot day. It's early-ish. The sun's not beating down in here yet, but it's getting warm. She looks like she could use some water. Come on, Gloria. Let's go get you some water. Okay, so these are all 16 possibilities. Let's put the numbers underneath. 0, 1, 2, 3. And now let me put these. These are called iso lines. So number 10 here, just so I have a fixed version of it here, should be this. Looking at my processing window right now, I realize I'm missing an extra column and an extra row, right? Because the idea is I want to look at each square with e4 corners. And in order to fill the full space down here on the edges, I'm missing the right and bottom corners. So I can fix that very easily just by adding one more column and one more row. And now, see, I'm ready to look at each collection of four corners and figure out which iso line should I draw based on that. If I look at any individual square, these are the important points, right? These midpoints between the corners. Because that's what's going to connect the line, whether it's this or whether it's this or whether it's this. Any of these are what I'm drawing. So I think I'm going to call this one A, B, C, and D. So let me first calculate the positions of each one of those points. I'm going to do this in a separate loop also because I need to stop at minus 1 because the final column doesn't have any neighbors to the right and the final row doesn't have any neighbors to the bottom. A is a P. I'm going to use P vector just to figure out what's P vector A, B, C, and D. The X value is which column I'm on times that resolution. And point A, which is over here, is the X value of this plus half, right, this, the length of each side is my variable res, so half of that, plus res times 0.5. That's X and Y for A is just at the top. So using that same idea, I can figure out B, C, and D. C is Y is all the way at the bottom and X is again in the middle. And then D is X is at its original location of the top left and Y is in the middle. And I forgot to make a variable for Y. And because of the person who I am, which I am just happy to be these days, I must align all of the spacing here. ♪ I don't know whether that makes it better or worse, but I'm very happy with how that looks right now. So if I just wanted to put, let's say, this line at every single spot, I would say line from A.X, A.Y to B.X, B.Y. Let's say stroke 255. Ooh, and let's make these thinner, stroke weight 1. And there we go. So we can see now I've got this line in every single square. But that's not what I want to do. I only want that line if the squares are this particular configuration, configuration number 4. So these, by the way, if I were to say 0000, 0001, 0010, notice that I'm counting in binary. So each one of these maps to the binary representation of the numbers. I don't know if I made that totally clear. So if I take any binary number, I just need to convert this into its base 10 representation, this being 4, and then figure out which one of these it is and draw the appropriate line. So let me write a function. I'm going to call it get state. That gets the base 10 state based on four 0s and 1s. So I'm going to give it four arguments. This is kind of silly because I could actually use some type of built-in Java function to convert from binary to decimal or base 2 to base 10. But I'm just going to do this in a very manual way since I know I only ever have four bits. Return A times 1 plus B times 2 plus C times 4 plus D times 8. And so if I were to now say int state equals get state. Oh, no, no, no. I'm not passing these in. What I'm passing in is the value of each of these corners, which is in my field array. So this is field i, j, field i plus 1, j, i, j, i plus 1, j, i plus 1, j plus 1, i, j plus 1. Okay, it all fits on one line. So that looks good. Looks good to me. Okay, so now if state is for this particular line that I've drawn, that's only if the state is four. Oh, guess what? Here's a really excellent time to use a switch statement. Oh, I hate, I'm so afraid of switch statements, but I'm going to be strong and brave and I'm going to use a switch statement today. And I'm definitely not going to Google syntax for a switch statement in Java. I know it off the top of my head, right? Because I've been programming for 20 years. Of course I know the syntax for a switch statement off the top of my head. So in the switch, the thing that I'm checking is state. And then I'm checking whether it's 0, 1. Oh, let me just add one for 0 since this code that I copy pasted in here already has, starts from 1. Then I'm going all the way up to 15. Now you might be thinking, oh, isn't there some nice elegant way to do this without a separate line of code for each particular state? Probably. I'm so excited for people to watch this video and make all sorts of new and different ways of doing this algorithm with shorter code, more efficient code, more creative code. So please share that with me. But I'm just to get this to work, going to do it based on each state individually. Of course, I actually don't need a case for 0 because in the case of 0 I don't draw anything. So I didn't need to put that in there. I mean, I might want to add those back in if I wanted to do something based on that. But let's just add case 1, which is drawing a line from, and if I remember, this is from a C to D. You know what? I'm going to write my own function. You can do this in Java because you can overload functions. So I'm going to write a function that gets two P vectors, V1, V2. I'm just going to call it line and draws a line between them so I don't have to constantly type out the X and the Y over and over again. So let's do that. That's right, right? X, Y, X, Y. Okay, good. Now I'm going to say line from C to D. And that makes sense. You can see that line appearing every time there's a... It's not right. Oh, the first one is times 8. Oh, boy, this has been in there for a while. My binary number starts on the left and goes to the right. So the left-hand digit, the 0 or 1, is the amount, is the 2 to the 4th. No, 2 to the 3rd, excuse me. 2 to the 3rd, 2 squared, 2 to the 1, 2 to the 0. There we go. Now we're seeing that in the correct place. Case number 2. Now I should be able to do these fairly quickly. Case number 2 is a line between B and C. Case number 3 is a line between A, B, and D. So I'm now going to speed through this, and you'll see if you can see. I'm sure I'm going to make a mistake, but you'll see if I do. ♪♪♪ I think I've put in all the correct line configurations based on every possible values for the four corners. Let's see what this gives me. Hey, look at that! I have now drawn contours around all of the areas of black and white. Let's try putting in a different algorithm now. I'm going to use OpenSimplex Noise. I would refer you to some videos that I made on OpenSimplex Noise. I even worked on a library for processing that incorporates OpenSimplex Noise. It didn't really get finished, so I'm just going to pull in the OpenSimplex Noise code directly from one of my previous examples here. This was developed by Kurt Spencer in 2014. It's a direct Java code without all the processing niceties, so I'm actually going to put it in an OpenSimplexNoise.java tab. Then I should be able to say, OpenSimplexNoise, noise, noise equals new OpenSimplexNoise. Then what I'm going to do is I'm going to calculate in the draw loop new values each time. Let's move this into the draw loop. Instead of a random number, I'm going to say noise.eval. I want two offsets, an x offset and a y offset. Let's have x offset start at zero. This might seem super strange. What are you talking about? X offset, y offset, noise.eval. You'll have to go back and look at some of my videos on Perlin noise and OpenSimplex noise. The short, the gist of it here is I am looking at this two-dimensional space and looking for smooth random values. I'm going to get nice smooth gradients from white to black, nice smooth gradients of gray throughout this space by calling this function. First of all, let me change this to float. That's going to cause all sorts of problems. Then this I have to convert to a float because the noise algorithm gives me a double. It just gives me a decimal number with more precision, but I don't need that. I can convert it right to a float for using in processing. Let's use this casting syntax to convert the output. Let me just check to make sure. Oh my God, the mic has been down here this whole time. When I had integers, just zeros and ones, each corner had a value. Now each corner has a value, a noise value, and OpenSimplex noise gives me numbers between negative one and one. I want to keep these values because I might be able to do something more with them if they're continuous values later or at least suggest some things that you could try. Basically, I think a solution that it could have is zero being right here in the middle. If it's greater than zero, it's a one. If it's less than zero, it's a zero in terms of converting it to a binary representation. I can actually just use the ceiling function. If I have a number between negative one and one, ceiling raises it up. If it's below zero, it will become zero. If it's above zero, it will become one. I think this is going to be a little bit awkward in terms of making this so long, but I can just put ceiling around each of these. All of the values here are all the same because I took the same noise value with the same X offset and Y offset. I need to move throughout that two-dimensional space. I am going to create a variable called increment. I am going to set that to 0.1. For every column, X offset will go up by increment. For every row, Y offset will go up by increment. Now, there we go. We can see this is the noise space and this is drawing a contour around it. Let me lower the resolution a little bit. I think it's time to do that now. There we go. We can start to see this terrain. It's a terrain-like thing with these contours drawn around it. I love this. Let's do something a little bit more. Let me use the fact that OpenSimplexNoise can be calculated in three-dimensional space. While this really could be something quite exciting if I were rendering in 3D and then eventually I could use 4D OpenSimplexNoise, what I am going to do instead is use that third dimension as thinking of it like time, so frames of animation. If I create a global variable called Z offset, set that equal to 0. Then, every frame, Z offset goes up. I think I might want to control this separately from the X off and Y off incrementation. I am just going to hard code this in there. I am going to leave it the same number. I want to be able to have separate control over it. Now, hmm. Oh, well, of course, I need to add that to the noise calculation. Whoa! That is why I want to control it separately because I want to have it go up much slower. There we go. Now, you can see this is a very, very fast algorithm. Some things that might be interesting to try here. One is I don't know how much value I am getting out of rendering those points. It is nice to see. Actually, you know what? A way that I would like to render them, just because I am curious. Let me actually make this fill and no stroke. I am just going to draw these as recti. This isn't exactly accurate because the value is the corner. I am just sort of curious. Oh, yeah, that is kind of nice looking. I sort of like seeing it this way. That is what I was imagining. I could make the resolution much smaller. I could make this full screen. Very slow. One thing I could do that might be interesting is just actually not bother drawing this at all. The rectangles. That will speed things up a little bit. Make the background black. Then I could also probably use the P2D renderer, which is hardware accelerated. There we go. Look at that. Here we go. This is really the end of this video. It is the marching squares algorithm over a 2D OpenSimplex noise field. I have really only scratched the surface, I think, with the creative possibilities here. I have not explored color. I am just creating the field of numbers. Just with OpenSimplex noise, there are lots of other noise algorithms. I could use an image, convert it to grayscale, and have those be the values. I could use my live webcam image. I could use distance from different circles or other objects floating in the space. This is what is in the Jamie Wong article about using a moving circle to create a metaballs-like pattern. You can look at what Sebastian Lag did for procedural cave generation. There are so many possibilities. One thing that I have not explored that you will notice if you look at the Wikipedia page explanation or Jamie Wong's article, is that I am always drawing the lines from these exact midpoints. However, each one of these corner values now has a floating point number. What if I had... If these are 1s, we know the line goes here. What if the values here were 0.01 and this is 0.99? Maybe this should be, for the higher value, much closer to this edge or further away and vice versa for this. This idea of a linear interpolation where the midpoint is actually variable according to the magnitude of the value on the corner. If I am correct, this would make for much smoother patterns that feel like they are less blocky looking. I rather like this blocky looking. It works for a certain aesthetic. That is something that would be worth exploring. If I am able to do that after this video, you will be seeing a version of this exact example of how it looks. Thanks for joining me through this little exploration of the Marching Squares algorithm. I have to find Gloria. Pickle, where has she gone? She never came back for her water. I know last time when I made a coding event, I said I was going to water the plants. Then, I didn't actually water the plants. I might have actually watered the plants, but I didn't show you me watering the plants. Who knows what really matters here? I need to water the plants. It is very hot. I am probably a little bit sweaty. I need to cool off. Water the plants. Find Pickle and make sure she is okay and has some water and some food. She probably needs to go for a walk. I will see you in a future Coding the Cabana video.",
    "translation": null
  },
  "error": null,
  "status": "succeeded",
  "created_at": "2023-09-26T20:41:46.35045Z",
  "started_at": "2023-09-26T20:50:29.134227Z",
  "completed_at": "2023-09-26T20:55:29.371712Z",
  "webhook": "https://83ceaa0b612c.ngrok.app/?video_id=0ZONMNUKTfU",
  "webhook_events_filter": [
    "completed"
  ],
  "metrics": {
    "predict_time": 300.237485
  },
  "urls": {
    "cancel": "https://api.replicate.com/v1/predictions/ag3qsxjbhikre7marybtl437xq/cancel",
    "get": "https://api.replicate.com/v1/predictions/ag3qsxjbhikre7marybtl437xq"
  }
}