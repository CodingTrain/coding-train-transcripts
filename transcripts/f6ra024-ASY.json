{
  "id": "hr7disjbx7ux4fefklivtb446a",
  "version": "91ee9c0c3df30478510ff8c8a3a545add1ad0259ad3a9f78fba57fbc05ee64f7",
  "input": {
    "audio": "https://upcdn.io/FW25b4F/raw/coding-train/f6ra024-ASY.m4a"
  },
  "logs": "Transcribe with large-v2 model\nDetected language: English\n  0%|          | 0/127020 [00:00<?, ?frames/s]\n  2%|▏         | 2832/127020 [00:07<05:27, 378.93frames/s]\n  5%|▍         | 5734/127020 [00:14<05:00, 403.56frames/s]\n  7%|▋         | 8646/127020 [00:21<04:51, 406.36frames/s]\n  9%|▉         | 11290/127020 [00:28<04:45, 405.14frames/s]\n 11%|█         | 14242/127020 [00:35<04:46, 393.47frames/s]\n 14%|█▎        | 17238/127020 [00:43<04:41, 390.41frames/s]\n 16%|█▌        | 20126/127020 [00:50<04:28, 398.50frames/s]\n 18%|█▊        | 23062/127020 [00:56<03:58, 435.21frames/s]\n 20%|██        | 26014/127020 [01:03<03:55, 429.73frames/s]\n 23%|██▎       | 28634/127020 [01:08<03:42, 441.86frames/s]\n 25%|██▍       | 31518/127020 [01:14<03:26, 463.06frames/s]\n 27%|██▋       | 34046/127020 [01:21<03:36, 429.69frames/s]\n 29%|██▉       | 36714/127020 [01:28<03:37, 414.41frames/s]\n 31%|███       | 39462/127020 [01:36<03:43, 391.17frames/s]\n 33%|███▎      | 42238/127020 [01:42<03:28, 406.42frames/s]\n 36%|███▌      | 45206/127020 [01:51<03:34, 381.52frames/s]\n 38%|███▊      | 47726/127020 [01:59<03:42, 356.02frames/s]\n 40%|███▉      | 50554/127020 [02:07<03:33, 357.62frames/s]\n 42%|████▏     | 53394/127020 [02:15<03:25, 357.48frames/s]\n 44%|████▍     | 56358/127020 [02:20<02:54, 404.44frames/s]\n 47%|████▋     | 59310/127020 [02:27<02:42, 415.90frames/s]\n 49%|████▊     | 61750/127020 [02:33<02:43, 400.36frames/s]\n 51%|█████     | 64454/127020 [02:40<02:39, 393.07frames/s]\n 53%|█████▎    | 67230/127020 [02:48<02:35, 384.81frames/s]\n 55%|█████▌    | 69862/127020 [02:55<02:28, 383.84frames/s]\n 57%|█████▋    | 72658/127020 [03:02<02:20, 387.51frames/s]\n 59%|█████▉    | 75522/127020 [03:09<02:12, 388.11frames/s]\n 61%|██████▏   | 78014/127020 [03:15<02:04, 394.95frames/s]\n 63%|██████▎   | 80478/127020 [03:21<01:52, 413.53frames/s]\n 66%|██████▌   | 83282/127020 [03:27<01:42, 427.85frames/s]\n 68%|██████▊   | 85858/127020 [03:31<01:30, 456.36frames/s]\n 70%|██████▉   | 88658/127020 [03:37<01:20, 479.31frames/s]\n 72%|███████▏  | 91462/127020 [03:44<01:21, 435.50frames/s]\n 74%|███████▍  | 94078/127020 [03:50<01:14, 443.32frames/s]\n 76%|███████▋  | 97006/127020 [03:58<01:12, 416.80frames/s]\n 79%|███████▊  | 99910/127020 [04:05<01:05, 413.68frames/s]\n 81%|████████  | 102270/127020 [04:11<01:01, 400.89frames/s]\n 83%|████████▎ | 104934/127020 [04:18<00:54, 405.06frames/s]\n 85%|████████▍ | 107626/127020 [04:25<00:48, 399.51frames/s]\n 87%|████████▋ | 110586/127020 [04:33<00:41, 393.53frames/s]\n 89%|████████▉ | 113262/127020 [04:40<00:35, 384.17frames/s]\n 91%|█████████▏| 116034/127020 [04:48<00:30, 365.27frames/s]\n 93%|█████████▎| 118626/127020 [04:55<00:22, 370.97frames/s]\n 96%|█████████▌| 121462/127020 [05:01<00:14, 395.18frames/s]\n 98%|█████████▊| 124398/127020 [05:09<00:06, 396.53frames/s]\n100%|██████████| 127020/127020 [05:15<00:00, 392.49frames/s]\n100%|██████████| 127020/127020 [05:15<00:00, 402.09frames/s]\n",
  "output": {
    "detected_language": "english",
    "segments": [
      {
        "avg_logprob": -0.35872503662109373,
        "compression_ratio": 1.6290909090909091,
        "end": 6.5600000000000005,
        "id": 0,
        "no_speech_prob": 0.05494736135005951,
        "seek": 0,
        "start": 0,
        "temperature": 0,
        "text": " Welcome, this is the last video in chapter 8 about fractals.",
        "tokens": [
          50364,
          4027,
          11,
          341,
          307,
          264,
          1036,
          960,
          294,
          7187,
          1649,
          466,
          17948,
          1124,
          13,
          50692
        ]
      },
      {
        "avg_logprob": -0.35872503662109373,
        "compression_ratio": 1.6290909090909091,
        "end": 10.120000000000001,
        "id": 1,
        "no_speech_prob": 0.05494736135005951,
        "seek": 0,
        "start": 6.5600000000000005,
        "temperature": 0,
        "text": " And in this video we're going to kind of cap everything off by looking at another way to",
        "tokens": [
          50692,
          400,
          294,
          341,
          960,
          321,
          434,
          516,
          281,
          733,
          295,
          1410,
          1203,
          766,
          538,
          1237,
          412,
          1071,
          636,
          281,
          50870
        ]
      },
      {
        "avg_logprob": -0.35872503662109373,
        "compression_ratio": 1.6290909090909091,
        "end": 11.8,
        "id": 2,
        "no_speech_prob": 0.05494736135005951,
        "seek": 0,
        "start": 10.120000000000001,
        "temperature": 0,
        "text": " generate fractal patterns.",
        "tokens": [
          50870,
          8460,
          17948,
          304,
          8294,
          13,
          50954
        ]
      },
      {
        "avg_logprob": -0.35872503662109373,
        "compression_ratio": 1.6290909090909091,
        "end": 14.32,
        "id": 3,
        "no_speech_prob": 0.05494736135005951,
        "seek": 0,
        "start": 11.8,
        "temperature": 0,
        "text": " And this, we're going to use something called an L-system.",
        "tokens": [
          50954,
          400,
          341,
          11,
          321,
          434,
          516,
          281,
          764,
          746,
          1219,
          364,
          441,
          12,
          28215,
          13,
          51080
        ]
      },
      {
        "avg_logprob": -0.35872503662109373,
        "compression_ratio": 1.6290909090909091,
        "end": 16.56,
        "id": 4,
        "no_speech_prob": 0.05494736135005951,
        "seek": 0,
        "start": 14.32,
        "temperature": 0,
        "text": " Now, what is an L-system?",
        "tokens": [
          51080,
          823,
          11,
          437,
          307,
          364,
          441,
          12,
          28215,
          30,
          51192
        ]
      },
      {
        "avg_logprob": -0.35872503662109373,
        "compression_ratio": 1.6290909090909091,
        "end": 22.32,
        "id": 5,
        "no_speech_prob": 0.05494736135005951,
        "seek": 0,
        "start": 16.56,
        "temperature": 0,
        "text": " L-system is named for the elf or aristid Lindenmayr, a Hungarian botanist who I think in around",
        "tokens": [
          51192,
          441,
          12,
          28215,
          307,
          4926,
          337,
          264,
          35565,
          420,
          594,
          468,
          327,
          441,
          10291,
          10338,
          81,
          11,
          257,
          38034,
          10592,
          282,
          468,
          567,
          286,
          519,
          294,
          926,
          51480
        ]
      },
      {
        "avg_logprob": -0.35872503662109373,
        "compression_ratio": 1.6290909090909091,
        "end": 28.32,
        "id": 6,
        "no_speech_prob": 0.05494736135005951,
        "seek": 0,
        "start": 22.32,
        "temperature": 0,
        "text": " 1968 introduced this idea of an L-system while he was studying plant growth, algae, fungi,",
        "tokens": [
          51480,
          29930,
          7268,
          341,
          1558,
          295,
          364,
          441,
          12,
          28215,
          1339,
          415,
          390,
          7601,
          3709,
          4599,
          11,
          32658,
          11,
          48772,
          11,
          51780
        ]
      },
      {
        "avg_logprob": -0.2393942123804337,
        "compression_ratio": 1.68562874251497,
        "end": 32.2,
        "id": 7,
        "no_speech_prob": 0.0038235443644225597,
        "seek": 2832,
        "start": 28.32,
        "temperature": 0,
        "text": " how do these sort of cellular systems, how do all that stuff grow and get attached to",
        "tokens": [
          50364,
          577,
          360,
          613,
          1333,
          295,
          29267,
          3652,
          11,
          577,
          360,
          439,
          300,
          1507,
          1852,
          293,
          483,
          8570,
          281,
          50558
        ]
      },
      {
        "avg_logprob": -0.2393942123804337,
        "compression_ratio": 1.68562874251497,
        "end": 33.2,
        "id": 8,
        "no_speech_prob": 0.0038235443644225597,
        "seek": 2832,
        "start": 32.2,
        "temperature": 0,
        "text": " itself.",
        "tokens": [
          50558,
          2564,
          13,
          50608
        ]
      },
      {
        "avg_logprob": -0.2393942123804337,
        "compression_ratio": 1.68562874251497,
        "end": 36.84,
        "id": 9,
        "no_speech_prob": 0.0038235443644225597,
        "seek": 2832,
        "start": 33.2,
        "temperature": 0,
        "text": " So there's a wonderful book, I believe it's out of print, but I will show it to you right",
        "tokens": [
          50608,
          407,
          456,
          311,
          257,
          3715,
          1446,
          11,
          286,
          1697,
          309,
          311,
          484,
          295,
          4482,
          11,
          457,
          286,
          486,
          855,
          309,
          281,
          291,
          558,
          50790
        ]
      },
      {
        "avg_logprob": -0.2393942123804337,
        "compression_ratio": 1.68562874251497,
        "end": 38.64,
        "id": 10,
        "no_speech_prob": 0.0038235443644225597,
        "seek": 2832,
        "start": 36.84,
        "temperature": 0,
        "text": " here called The Algorithmic Beauty of Plants.",
        "tokens": [
          50790,
          510,
          1219,
          440,
          35014,
          6819,
          13195,
          21450,
          295,
          2149,
          1719,
          13,
          50880
        ]
      },
      {
        "avg_logprob": -0.2393942123804337,
        "compression_ratio": 1.68562874251497,
        "end": 41.24,
        "id": 11,
        "no_speech_prob": 0.0038235443644225597,
        "seek": 2832,
        "start": 38.64,
        "temperature": 0,
        "text": " If you're interested in this stuff, you must get this.",
        "tokens": [
          50880,
          759,
          291,
          434,
          3102,
          294,
          341,
          1507,
          11,
          291,
          1633,
          483,
          341,
          13,
          51010
        ]
      },
      {
        "avg_logprob": -0.2393942123804337,
        "compression_ratio": 1.68562874251497,
        "end": 42.24,
        "id": 12,
        "no_speech_prob": 0.0038235443644225597,
        "seek": 2832,
        "start": 41.24,
        "temperature": 0,
        "text": " But you don't even need to buy it.",
        "tokens": [
          51010,
          583,
          291,
          500,
          380,
          754,
          643,
          281,
          2256,
          309,
          13,
          51060
        ]
      },
      {
        "avg_logprob": -0.2393942123804337,
        "compression_ratio": 1.68562874251497,
        "end": 47.08,
        "id": 13,
        "no_speech_prob": 0.0038235443644225597,
        "seek": 2832,
        "start": 42.24,
        "temperature": 0,
        "text": " I should point out that this book in its entirety is available online for free.",
        "tokens": [
          51060,
          286,
          820,
          935,
          484,
          300,
          341,
          1446,
          294,
          1080,
          31557,
          307,
          2435,
          2950,
          337,
          1737,
          13,
          51302
        ]
      },
      {
        "avg_logprob": -0.2393942123804337,
        "compression_ratio": 1.68562874251497,
        "end": 48.8,
        "id": 14,
        "no_speech_prob": 0.0038235443644225597,
        "seek": 2832,
        "start": 47.08,
        "temperature": 0,
        "text": " So I will include a link to that below.",
        "tokens": [
          51302,
          407,
          286,
          486,
          4090,
          257,
          2113,
          281,
          300,
          2507,
          13,
          51388
        ]
      },
      {
        "avg_logprob": -0.2393942123804337,
        "compression_ratio": 1.68562874251497,
        "end": 55.44,
        "id": 15,
        "no_speech_prob": 0.0038235443644225597,
        "seek": 2832,
        "start": 48.8,
        "temperature": 0,
        "text": " But we're going to, so this is a very rich topic in the sense that there are tons of",
        "tokens": [
          51388,
          583,
          321,
          434,
          516,
          281,
          11,
          370,
          341,
          307,
          257,
          588,
          4593,
          4829,
          294,
          264,
          2020,
          300,
          456,
          366,
          9131,
          295,
          51720
        ]
      },
      {
        "avg_logprob": -0.2393942123804337,
        "compression_ratio": 1.68562874251497,
        "end": 57.34,
        "id": 16,
        "no_speech_prob": 0.0038235443644225597,
        "seek": 2832,
        "start": 55.44,
        "temperature": 0,
        "text": " different L-systems that you can make.",
        "tokens": [
          51720,
          819,
          441,
          12,
          28215,
          82,
          300,
          291,
          393,
          652,
          13,
          51815
        ]
      },
      {
        "avg_logprob": -0.220983206336178,
        "compression_ratio": 1.6872964169381108,
        "end": 62.34,
        "id": 17,
        "no_speech_prob": 0.019717631861567497,
        "seek": 5734,
        "start": 57.36000000000001,
        "temperature": 0,
        "text": " But we're going to just look at the core elements of an L-system, what is it, how does it work,",
        "tokens": [
          50365,
          583,
          321,
          434,
          516,
          281,
          445,
          574,
          412,
          264,
          4965,
          4959,
          295,
          364,
          441,
          12,
          28215,
          11,
          437,
          307,
          309,
          11,
          577,
          775,
          309,
          589,
          11,
          50614
        ]
      },
      {
        "avg_logprob": -0.220983206336178,
        "compression_ratio": 1.6872964169381108,
        "end": 64.5,
        "id": 18,
        "no_speech_prob": 0.019717631861567497,
        "seek": 5734,
        "start": 62.34,
        "temperature": 0,
        "text": " and a couple examples in processing.",
        "tokens": [
          50614,
          293,
          257,
          1916,
          5110,
          294,
          9007,
          13,
          50722
        ]
      },
      {
        "avg_logprob": -0.220983206336178,
        "compression_ratio": 1.6872964169381108,
        "end": 69.18,
        "id": 19,
        "no_speech_prob": 0.019717631861567497,
        "seek": 5734,
        "start": 64.5,
        "temperature": 0,
        "text": " And from there, that might launch you into all sorts of different possibilities.",
        "tokens": [
          50722,
          400,
          490,
          456,
          11,
          300,
          1062,
          4025,
          291,
          666,
          439,
          7527,
          295,
          819,
          12178,
          13,
          50956
        ]
      },
      {
        "avg_logprob": -0.220983206336178,
        "compression_ratio": 1.6872964169381108,
        "end": 73.34,
        "id": 20,
        "no_speech_prob": 0.019717631861567497,
        "seek": 5734,
        "start": 69.18,
        "temperature": 0,
        "text": " So one of the things that's super interesting about L-systems in terms of what we're doing",
        "tokens": [
          50956,
          407,
          472,
          295,
          264,
          721,
          300,
          311,
          1687,
          1880,
          466,
          441,
          12,
          28215,
          82,
          294,
          2115,
          295,
          437,
          321,
          434,
          884,
          51164
        ]
      },
      {
        "avg_logprob": -0.220983206336178,
        "compression_ratio": 1.6872964169381108,
        "end": 76.9,
        "id": 21,
        "no_speech_prob": 0.019717631861567497,
        "seek": 5734,
        "start": 73.34,
        "temperature": 0,
        "text": " is they in many ways have nothing to do with computer graphics whatsoever.",
        "tokens": [
          51164,
          307,
          436,
          294,
          867,
          2098,
          362,
          1825,
          281,
          360,
          365,
          3820,
          11837,
          17076,
          13,
          51342
        ]
      },
      {
        "avg_logprob": -0.220983206336178,
        "compression_ratio": 1.6872964169381108,
        "end": 83.82000000000001,
        "id": 22,
        "no_speech_prob": 0.019717631861567497,
        "seek": 5734,
        "start": 76.9,
        "temperature": 0,
        "text": " We're going to use them to generate instructions for drawing, but at their core, an L-system",
        "tokens": [
          51342,
          492,
          434,
          516,
          281,
          764,
          552,
          281,
          8460,
          9415,
          337,
          6316,
          11,
          457,
          412,
          641,
          4965,
          11,
          364,
          441,
          12,
          28215,
          51688
        ]
      },
      {
        "avg_logprob": -0.220983206336178,
        "compression_ratio": 1.6872964169381108,
        "end": 85.10000000000001,
        "id": 23,
        "no_speech_prob": 0.019717631861567497,
        "seek": 5734,
        "start": 83.82000000000001,
        "temperature": 0,
        "text": " is really a grammar.",
        "tokens": [
          51688,
          307,
          534,
          257,
          22317,
          13,
          51752
        ]
      },
      {
        "avg_logprob": -0.220983206336178,
        "compression_ratio": 1.6872964169381108,
        "end": 86.46000000000001,
        "id": 24,
        "no_speech_prob": 0.019717631861567497,
        "seek": 5734,
        "start": 85.10000000000001,
        "temperature": 0,
        "text": " It's a rewriting system.",
        "tokens": [
          51752,
          467,
          311,
          257,
          319,
          19868,
          1185,
          13,
          51820
        ]
      },
      {
        "avg_logprob": -0.24532110197050078,
        "compression_ratio": 1.7322175732217573,
        "end": 90.53999999999999,
        "id": 25,
        "no_speech_prob": 0.03258797526359558,
        "seek": 8646,
        "start": 86.58,
        "temperature": 0,
        "text": " It's a way of looking at strings of characters and rewriting those strings of characters",
        "tokens": [
          50370,
          467,
          311,
          257,
          636,
          295,
          1237,
          412,
          13985,
          295,
          4342,
          293,
          319,
          19868,
          729,
          13985,
          295,
          4342,
          50568
        ]
      },
      {
        "avg_logprob": -0.24532110197050078,
        "compression_ratio": 1.7322175732217573,
        "end": 95.46,
        "id": 26,
        "no_speech_prob": 0.03258797526359558,
        "seek": 8646,
        "start": 90.53999999999999,
        "temperature": 0,
        "text": " over and over again in a, wait for it, recursive way.",
        "tokens": [
          50568,
          670,
          293,
          670,
          797,
          294,
          257,
          11,
          1699,
          337,
          309,
          11,
          20560,
          488,
          636,
          13,
          50814
        ]
      },
      {
        "avg_logprob": -0.24532110197050078,
        "compression_ratio": 1.7322175732217573,
        "end": 99.97999999999999,
        "id": 27,
        "no_speech_prob": 0.03258797526359558,
        "seek": 8646,
        "start": 95.46,
        "temperature": 0,
        "text": " We're going to apply recursion to text, which by the way, if you're interested in things",
        "tokens": [
          50814,
          492,
          434,
          516,
          281,
          3079,
          20560,
          313,
          281,
          2487,
          11,
          597,
          538,
          264,
          636,
          11,
          498,
          291,
          434,
          3102,
          294,
          721,
          51040
        ]
      },
      {
        "avg_logprob": -0.24532110197050078,
        "compression_ratio": 1.7322175732217573,
        "end": 103.69999999999999,
        "id": 28,
        "no_speech_prob": 0.03258797526359558,
        "seek": 8646,
        "start": 99.97999999999999,
        "temperature": 0,
        "text": " other than computer graphics and algorithmic text, this is an interesting thing for you",
        "tokens": [
          51040,
          661,
          813,
          3820,
          11837,
          293,
          9284,
          299,
          2487,
          11,
          341,
          307,
          364,
          1880,
          551,
          337,
          291,
          51226
        ]
      },
      {
        "avg_logprob": -0.24532110197050078,
        "compression_ratio": 1.7322175732217573,
        "end": 104.69999999999999,
        "id": 29,
        "no_speech_prob": 0.03258797526359558,
        "seek": 8646,
        "start": 103.69999999999999,
        "temperature": 0,
        "text": " to look at as well.",
        "tokens": [
          51226,
          281,
          574,
          412,
          382,
          731,
          13,
          51276
        ]
      },
      {
        "avg_logprob": -0.24532110197050078,
        "compression_ratio": 1.7322175732217573,
        "end": 111.1,
        "id": 30,
        "no_speech_prob": 0.03258797526359558,
        "seek": 8646,
        "start": 104.69999999999999,
        "temperature": 0,
        "text": " So an L-system has an alphabet.",
        "tokens": [
          51276,
          407,
          364,
          441,
          12,
          28215,
          575,
          364,
          23339,
          13,
          51596
        ]
      },
      {
        "avg_logprob": -0.24532110197050078,
        "compression_ratio": 1.7322175732217573,
        "end": 112.89999999999999,
        "id": 31,
        "no_speech_prob": 0.03258797526359558,
        "seek": 8646,
        "start": 111.1,
        "temperature": 0,
        "text": " So we're going to start with a simple one.",
        "tokens": [
          51596,
          407,
          321,
          434,
          516,
          281,
          722,
          365,
          257,
          2199,
          472,
          13,
          51686
        ]
      },
      {
        "avg_logprob": -0.2607076082298224,
        "compression_ratio": 1.9256505576208178,
        "end": 117.86,
        "id": 32,
        "no_speech_prob": 0.046719931066036224,
        "seek": 11290,
        "start": 112.9,
        "temperature": 0,
        "text": " An alphabet is what are the characters that are allowed in this particular L-system.",
        "tokens": [
          50364,
          1107,
          23339,
          307,
          437,
          366,
          264,
          4342,
          300,
          366,
          4350,
          294,
          341,
          1729,
          441,
          12,
          28215,
          13,
          50612
        ]
      },
      {
        "avg_logprob": -0.2607076082298224,
        "compression_ratio": 1.9256505576208178,
        "end": 121.74000000000001,
        "id": 33,
        "no_speech_prob": 0.046719931066036224,
        "seek": 11290,
        "start": 117.86,
        "temperature": 0,
        "text": " And we'll start with a very simple one with just A and B.",
        "tokens": [
          50612,
          400,
          321,
          603,
          722,
          365,
          257,
          588,
          2199,
          472,
          365,
          445,
          316,
          293,
          363,
          13,
          50806
        ]
      },
      {
        "avg_logprob": -0.2607076082298224,
        "compression_ratio": 1.9256505576208178,
        "end": 129.46,
        "id": 34,
        "no_speech_prob": 0.046719931066036224,
        "seek": 11290,
        "start": 121.74000000000001,
        "temperature": 0,
        "text": " It also has an axiom, which is what is the original, what is the generation zero sentence",
        "tokens": [
          50806,
          467,
          611,
          575,
          364,
          6360,
          72,
          298,
          11,
          597,
          307,
          437,
          307,
          264,
          3380,
          11,
          437,
          307,
          264,
          5125,
          4018,
          8174,
          51192
        ]
      },
      {
        "avg_logprob": -0.2607076082298224,
        "compression_ratio": 1.9256505576208178,
        "end": 130.86,
        "id": 35,
        "no_speech_prob": 0.046719931066036224,
        "seek": 11290,
        "start": 129.46,
        "temperature": 0,
        "text": " that we're going to start with?",
        "tokens": [
          51192,
          300,
          321,
          434,
          516,
          281,
          722,
          365,
          30,
          51262
        ]
      },
      {
        "avg_logprob": -0.2607076082298224,
        "compression_ratio": 1.9256505576208178,
        "end": 135.06,
        "id": 36,
        "no_speech_prob": 0.046719931066036224,
        "seek": 11290,
        "start": 130.86,
        "temperature": 0,
        "text": " We're going to recursively make sentence after sentence from generation to generation, just",
        "tokens": [
          51262,
          492,
          434,
          516,
          281,
          20560,
          3413,
          652,
          8174,
          934,
          8174,
          490,
          5125,
          281,
          5125,
          11,
          445,
          51472
        ]
      },
      {
        "avg_logprob": -0.2607076082298224,
        "compression_ratio": 1.9256505576208178,
        "end": 136.66,
        "id": 37,
        "no_speech_prob": 0.046719931066036224,
        "seek": 11290,
        "start": 135.06,
        "temperature": 0,
        "text": " like we've done with all these drawing things.",
        "tokens": [
          51472,
          411,
          321,
          600,
          1096,
          365,
          439,
          613,
          6316,
          721,
          13,
          51552
        ]
      },
      {
        "avg_logprob": -0.2607076082298224,
        "compression_ratio": 1.9256505576208178,
        "end": 138.12,
        "id": 38,
        "no_speech_prob": 0.046719931066036224,
        "seek": 11290,
        "start": 136.66,
        "temperature": 0,
        "text": " We're going to do it with text.",
        "tokens": [
          51552,
          492,
          434,
          516,
          281,
          360,
          309,
          365,
          2487,
          13,
          51625
        ]
      },
      {
        "avg_logprob": -0.2607076082298224,
        "compression_ratio": 1.9256505576208178,
        "end": 139.12,
        "id": 39,
        "no_speech_prob": 0.046719931066036224,
        "seek": 11290,
        "start": 138.12,
        "temperature": 0,
        "text": " So what do we start with?",
        "tokens": [
          51625,
          407,
          437,
          360,
          321,
          722,
          365,
          30,
          51675
        ]
      },
      {
        "avg_logprob": -0.2607076082298224,
        "compression_ratio": 1.9256505576208178,
        "end": 142.42000000000002,
        "id": 40,
        "no_speech_prob": 0.046719931066036224,
        "seek": 11290,
        "start": 139.12,
        "temperature": 0,
        "text": " We're going to start with A. And then it has a rule set.",
        "tokens": [
          51675,
          492,
          434,
          516,
          281,
          722,
          365,
          316,
          13,
          400,
          550,
          309,
          575,
          257,
          4978,
          992,
          13,
          51840
        ]
      },
      {
        "avg_logprob": -0.24560803086010377,
        "compression_ratio": 1.803088803088803,
        "end": 148.66,
        "id": 41,
        "no_speech_prob": 0.002934920834377408,
        "seek": 14242,
        "start": 142.94,
        "temperature": 0,
        "text": " Just like when we did the cantor set, the tree, the Koch curve, we had these production",
        "tokens": [
          50390,
          1449,
          411,
          562,
          321,
          630,
          264,
          11223,
          284,
          992,
          11,
          264,
          4230,
          11,
          264,
          40401,
          7605,
          11,
          321,
          632,
          613,
          4265,
          50676
        ]
      },
      {
        "avg_logprob": -0.24560803086010377,
        "compression_ratio": 1.803088803088803,
        "end": 149.66,
        "id": 42,
        "no_speech_prob": 0.002934920834377408,
        "seek": 14242,
        "start": 148.66,
        "temperature": 0,
        "text": " rules.",
        "tokens": [
          50676,
          4474,
          13,
          50726
        ]
      },
      {
        "avg_logprob": -0.24560803086010377,
        "compression_ratio": 1.803088803088803,
        "end": 152.1,
        "id": 43,
        "no_speech_prob": 0.002934920834377408,
        "seek": 14242,
        "start": 149.66,
        "temperature": 0,
        "text": " A line has two lines attached to the end.",
        "tokens": [
          50726,
          316,
          1622,
          575,
          732,
          3876,
          8570,
          281,
          264,
          917,
          13,
          50848
        ]
      },
      {
        "avg_logprob": -0.24560803086010377,
        "compression_ratio": 1.803088803088803,
        "end": 153.89999999999998,
        "id": 44,
        "no_speech_prob": 0.002934920834377408,
        "seek": 14242,
        "start": 152.1,
        "temperature": 0,
        "text": " Those lines have two lines attached to the end.",
        "tokens": [
          50848,
          3950,
          3876,
          362,
          732,
          3876,
          8570,
          281,
          264,
          917,
          13,
          50938
        ]
      },
      {
        "avg_logprob": -0.24560803086010377,
        "compression_ratio": 1.803088803088803,
        "end": 157.66,
        "id": 45,
        "no_speech_prob": 0.002934920834377408,
        "seek": 14242,
        "start": 153.89999999999998,
        "temperature": 0,
        "text": " We're going to have the same production rules, but for text.",
        "tokens": [
          50938,
          492,
          434,
          516,
          281,
          362,
          264,
          912,
          4265,
          4474,
          11,
          457,
          337,
          2487,
          13,
          51126
        ]
      },
      {
        "avg_logprob": -0.24560803086010377,
        "compression_ratio": 1.803088803088803,
        "end": 159.76,
        "id": 46,
        "no_speech_prob": 0.002934920834377408,
        "seek": 14242,
        "start": 157.66,
        "temperature": 0,
        "text": " So what are some rules?",
        "tokens": [
          51126,
          407,
          437,
          366,
          512,
          4474,
          30,
          51231
        ]
      },
      {
        "avg_logprob": -0.24560803086010377,
        "compression_ratio": 1.803088803088803,
        "end": 165.82,
        "id": 47,
        "no_speech_prob": 0.002934920834377408,
        "seek": 14242,
        "start": 159.76,
        "temperature": 0,
        "text": " We're going to say, hey, the character A should turn into ABA.",
        "tokens": [
          51231,
          492,
          434,
          516,
          281,
          584,
          11,
          4177,
          11,
          264,
          2517,
          316,
          820,
          1261,
          666,
          316,
          9295,
          13,
          51534
        ]
      },
      {
        "avg_logprob": -0.24560803086010377,
        "compression_ratio": 1.803088803088803,
        "end": 167.73999999999998,
        "id": 48,
        "no_speech_prob": 0.002934920834377408,
        "seek": 14242,
        "start": 165.82,
        "temperature": 0,
        "text": " And we can have one or more rules.",
        "tokens": [
          51534,
          400,
          321,
          393,
          362,
          472,
          420,
          544,
          4474,
          13,
          51630
        ]
      },
      {
        "avg_logprob": -0.24560803086010377,
        "compression_ratio": 1.803088803088803,
        "end": 171.38,
        "id": 49,
        "no_speech_prob": 0.002934920834377408,
        "seek": 14242,
        "start": 167.73999999999998,
        "temperature": 0,
        "text": " I'm going to do a slightly complicated one for dramatic effect, as you're going to see",
        "tokens": [
          51630,
          286,
          478,
          516,
          281,
          360,
          257,
          4748,
          6179,
          472,
          337,
          12023,
          1802,
          11,
          382,
          291,
          434,
          516,
          281,
          536,
          51812
        ]
      },
      {
        "avg_logprob": -0.24560803086010377,
        "compression_ratio": 1.803088803088803,
        "end": 172.38,
        "id": 50,
        "no_speech_prob": 0.002934920834377408,
        "seek": 14242,
        "start": 171.38,
        "temperature": 0,
        "text": " in a moment.",
        "tokens": [
          51812,
          294,
          257,
          1623,
          13,
          51862
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 177.54,
        "id": 51,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 173.34,
        "temperature": 0,
        "text": " We could say the character B should become BBB.",
        "tokens": [
          50412,
          492,
          727,
          584,
          264,
          2517,
          363,
          820,
          1813,
          19168,
          33,
          13,
          50622
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 183.7,
        "id": 52,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 177.54,
        "temperature": 0,
        "text": " So let's look at what happens when we start with A. So A is generation zero.",
        "tokens": [
          50622,
          407,
          718,
          311,
          574,
          412,
          437,
          2314,
          562,
          321,
          722,
          365,
          316,
          13,
          407,
          316,
          307,
          5125,
          4018,
          13,
          50930
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 185.29999999999998,
        "id": 53,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 183.7,
        "temperature": 0,
        "text": " Now we're going to do this once.",
        "tokens": [
          50930,
          823,
          321,
          434,
          516,
          281,
          360,
          341,
          1564,
          13,
          51010
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 186.74,
        "id": 54,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 185.29999999999998,
        "temperature": 0,
        "text": " Generation one.",
        "tokens": [
          51010,
          23898,
          472,
          13,
          51082
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 189.34,
        "id": 55,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 186.74,
        "temperature": 0,
        "text": " A becomes, that doesn't look like a one.",
        "tokens": [
          51082,
          316,
          3643,
          11,
          300,
          1177,
          380,
          574,
          411,
          257,
          472,
          13,
          51212
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 190.9,
        "id": 56,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 189.34,
        "temperature": 0,
        "text": " A becomes ABA.",
        "tokens": [
          51212,
          316,
          3643,
          316,
          9295,
          13,
          51290
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 193.42,
        "id": 57,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 190.9,
        "temperature": 0,
        "text": " Are you, are you, are we on?",
        "tokens": [
          51290,
          2014,
          291,
          11,
          366,
          291,
          11,
          366,
          321,
          322,
          30,
          51416
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 194.42,
        "id": 58,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 193.42,
        "temperature": 0,
        "text": " We're on, okay.",
        "tokens": [
          51416,
          492,
          434,
          322,
          11,
          1392,
          13,
          51466
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 195.42,
        "id": 59,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 194.42,
        "temperature": 0,
        "text": " A becomes ABA.",
        "tokens": [
          51466,
          316,
          3643,
          316,
          9295,
          13,
          51516
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 196.42,
        "id": 60,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 195.42,
        "temperature": 0,
        "text": " ABA.",
        "tokens": [
          51516,
          316,
          9295,
          13,
          51566
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 200.26,
        "id": 61,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 196.42,
        "temperature": 0,
        "text": " Now, we're going to do generation two.",
        "tokens": [
          51566,
          823,
          11,
          321,
          434,
          516,
          281,
          360,
          5125,
          732,
          13,
          51758
        ]
      },
      {
        "avg_logprob": -0.33695529301961263,
        "compression_ratio": 1.7121212121212122,
        "end": 201.26,
        "id": 62,
        "no_speech_prob": 0.028006592765450478,
        "seek": 17238,
        "start": 200.26,
        "temperature": 0,
        "text": " Okay.",
        "tokens": [
          51758,
          1033,
          13,
          51808
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 204.14,
        "id": 63,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 201.73999999999998,
        "temperature": 0,
        "text": " B, A becomes ABA.",
        "tokens": [
          50388,
          363,
          11,
          316,
          3643,
          316,
          9295,
          13,
          50508
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 205.14,
        "id": 64,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 204.14,
        "temperature": 0,
        "text": " Right?",
        "tokens": [
          50508,
          1779,
          30,
          50558
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 208.29999999999998,
        "id": 65,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 205.14,
        "temperature": 0,
        "text": " This, this is that.",
        "tokens": [
          50558,
          639,
          11,
          341,
          307,
          300,
          13,
          50716
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 211.78,
        "id": 66,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 208.29999999999998,
        "temperature": 0,
        "text": " B becomes BBB.",
        "tokens": [
          50716,
          363,
          3643,
          19168,
          33,
          13,
          50890
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 213.26,
        "id": 67,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 211.78,
        "temperature": 0,
        "text": " And A becomes ABA.",
        "tokens": [
          50890,
          400,
          316,
          3643,
          316,
          9295,
          13,
          50964
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 215.45999999999998,
        "id": 68,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 213.26,
        "temperature": 0,
        "text": " Oh, come on.",
        "tokens": [
          50964,
          876,
          11,
          808,
          322,
          13,
          51074
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 218.57999999999998,
        "id": 69,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 215.45999999999998,
        "temperature": 0,
        "text": " Let's do it one more time.",
        "tokens": [
          51074,
          961,
          311,
          360,
          309,
          472,
          544,
          565,
          13,
          51230
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 219.57999999999998,
        "id": 70,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 218.57999999999998,
        "temperature": 0,
        "text": " Generation three.",
        "tokens": [
          51230,
          23898,
          1045,
          13,
          51280
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 220.57999999999998,
        "id": 71,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 219.57999999999998,
        "temperature": 0,
        "text": " Let's start over here.",
        "tokens": [
          51280,
          961,
          311,
          722,
          670,
          510,
          13,
          51330
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 222.78,
        "id": 72,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 220.57999999999998,
        "temperature": 0,
        "text": " A becomes ABA.",
        "tokens": [
          51330,
          316,
          3643,
          316,
          9295,
          13,
          51440
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 225.14,
        "id": 73,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 222.78,
        "temperature": 0,
        "text": " B becomes BBB.",
        "tokens": [
          51440,
          363,
          3643,
          19168,
          33,
          13,
          51558
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 226.14,
        "id": 74,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 225.14,
        "temperature": 0,
        "text": " A becomes ABA.",
        "tokens": [
          51558,
          316,
          3643,
          316,
          9295,
          13,
          51608
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 227.62,
        "id": 75,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 226.14,
        "temperature": 0,
        "text": " Oh my goodness.",
        "tokens": [
          51608,
          876,
          452,
          8387,
          13,
          51682
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 228.62,
        "id": 76,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 227.62,
        "temperature": 0,
        "text": " B becomes BB.",
        "tokens": [
          51682,
          363,
          3643,
          19168,
          13,
          51732
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 229.62,
        "id": 77,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 228.62,
        "temperature": 0,
        "text": " I can do this.",
        "tokens": [
          51732,
          286,
          393,
          360,
          341,
          13,
          51782
        ]
      },
      {
        "avg_logprob": -0.3324863599694293,
        "compression_ratio": 1.8206896551724139,
        "end": 230.62,
        "id": 78,
        "no_speech_prob": 0.0021489285863935947,
        "seek": 20126,
        "start": 229.62,
        "temperature": 0,
        "text": " I can do this.",
        "tokens": [
          51782,
          286,
          393,
          360,
          341,
          13,
          51832
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 231.98000000000002,
        "id": 79,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 230.98000000000002,
        "temperature": 0,
        "text": " Right?",
        "tokens": [
          50382,
          1779,
          30,
          50432
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 234.98000000000002,
        "id": 80,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 231.98000000000002,
        "temperature": 0,
        "text": " I've got nine B's and then ABA.",
        "tokens": [
          50432,
          286,
          600,
          658,
          4949,
          363,
          311,
          293,
          550,
          316,
          9295,
          13,
          50582
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 235.98000000000002,
        "id": 81,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 234.98000000000002,
        "temperature": 0,
        "text": " BBB.",
        "tokens": [
          50582,
          363,
          30366,
          13,
          50632
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 238.70000000000002,
        "id": 82,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 235.98000000000002,
        "temperature": 0,
        "text": " I probably, I ran out of space.",
        "tokens": [
          50632,
          286,
          1391,
          11,
          286,
          5872,
          484,
          295,
          1901,
          13,
          50768
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 239.70000000000002,
        "id": 83,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 238.70000000000002,
        "temperature": 0,
        "text": " You can't see me anymore.",
        "tokens": [
          50768,
          509,
          393,
          380,
          536,
          385,
          3602,
          13,
          50818
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 241.26,
        "id": 84,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 239.70000000000002,
        "temperature": 0,
        "text": " But look, we can see what we're doing.",
        "tokens": [
          50818,
          583,
          574,
          11,
          321,
          393,
          536,
          437,
          321,
          434,
          884,
          13,
          50896
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 245.3,
        "id": 85,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 241.26,
        "temperature": 0,
        "text": " And this is not, I mean, sometimes it can be fun.",
        "tokens": [
          50896,
          400,
          341,
          307,
          406,
          11,
          286,
          914,
          11,
          2171,
          309,
          393,
          312,
          1019,
          13,
          51098
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 248.34,
        "id": 86,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 245.3,
        "temperature": 0,
        "text": " Like, for me, this is fun to do with a marker.",
        "tokens": [
          51098,
          1743,
          11,
          337,
          385,
          11,
          341,
          307,
          1019,
          281,
          360,
          365,
          257,
          15247,
          13,
          51250
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 253.34,
        "id": 87,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 248.34,
        "temperature": 0,
        "text": " But you can see here how a computer program that's going to work with strings and make",
        "tokens": [
          51250,
          583,
          291,
          393,
          536,
          510,
          577,
          257,
          3820,
          1461,
          300,
          311,
          516,
          281,
          589,
          365,
          13985,
          293,
          652,
          51500
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 256.62,
        "id": 88,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 253.34,
        "temperature": 0,
        "text": " new strings from generation to generation is going to be much more effective.",
        "tokens": [
          51500,
          777,
          13985,
          490,
          5125,
          281,
          5125,
          307,
          516,
          281,
          312,
          709,
          544,
          4942,
          13,
          51664
        ]
      },
      {
        "avg_logprob": -0.31511757843685845,
        "compression_ratio": 1.6380597014925373,
        "end": 260.14,
        "id": 89,
        "no_speech_prob": 0.0024343037512153387,
        "seek": 23062,
        "start": 256.62,
        "temperature": 0,
        "text": " But I just want to say for a moment.",
        "tokens": [
          51664,
          583,
          286,
          445,
          528,
          281,
          584,
          337,
          257,
          1623,
          13,
          51840
        ]
      },
      {
        "avg_logprob": -0.25638754995245683,
        "compression_ratio": 1.6375545851528384,
        "end": 264.82,
        "id": 90,
        "no_speech_prob": 0.08035355806350708,
        "seek": 26014,
        "start": 260.65999999999997,
        "temperature": 0,
        "text": " Remember, we're, you know, as much as there are tons of applications of this, we are looking",
        "tokens": [
          50390,
          5459,
          11,
          321,
          434,
          11,
          291,
          458,
          11,
          382,
          709,
          382,
          456,
          366,
          9131,
          295,
          5821,
          295,
          341,
          11,
          321,
          366,
          1237,
          50598
        ]
      },
      {
        "avg_logprob": -0.25638754995245683,
        "compression_ratio": 1.6375545851528384,
        "end": 269.21999999999997,
        "id": 91,
        "no_speech_prob": 0.08035355806350708,
        "seek": 26014,
        "start": 264.82,
        "temperature": 0,
        "text": " at this in particular for drawing patterns in our processing window.",
        "tokens": [
          50598,
          412,
          341,
          294,
          1729,
          337,
          6316,
          8294,
          294,
          527,
          9007,
          4910,
          13,
          50818
        ]
      },
      {
        "avg_logprob": -0.25638754995245683,
        "compression_ratio": 1.6375545851528384,
        "end": 272.2,
        "id": 92,
        "no_speech_prob": 0.08035355806350708,
        "seek": 26014,
        "start": 269.21999999999997,
        "temperature": 0,
        "text": " So what, how are we going to get a pattern from all of this text?",
        "tokens": [
          50818,
          407,
          437,
          11,
          577,
          366,
          321,
          516,
          281,
          483,
          257,
          5102,
          490,
          439,
          295,
          341,
          2487,
          30,
          50967
        ]
      },
      {
        "avg_logprob": -0.25638754995245683,
        "compression_ratio": 1.6375545851528384,
        "end": 277.7,
        "id": 93,
        "no_speech_prob": 0.08035355806350708,
        "seek": 26014,
        "start": 272.2,
        "temperature": 0,
        "text": " The thing we need to think about is what if these characters were instructions for drawing?",
        "tokens": [
          50967,
          440,
          551,
          321,
          643,
          281,
          519,
          466,
          307,
          437,
          498,
          613,
          4342,
          645,
          9415,
          337,
          6316,
          30,
          51242
        ]
      },
      {
        "avg_logprob": -0.25638754995245683,
        "compression_ratio": 1.6375545851528384,
        "end": 286.34,
        "id": 94,
        "no_speech_prob": 0.08035355806350708,
        "seek": 26014,
        "start": 277.7,
        "temperature": 0,
        "text": " For example, what if I said to you A means draw a line.",
        "tokens": [
          51242,
          1171,
          1365,
          11,
          437,
          498,
          286,
          848,
          281,
          291,
          316,
          1355,
          2642,
          257,
          1622,
          13,
          51674
        ]
      },
      {
        "avg_logprob": -0.3504810739070811,
        "compression_ratio": 2.051948051948052,
        "end": 296.06,
        "id": 95,
        "no_speech_prob": 0.002216957276687026,
        "seek": 28634,
        "start": 287.34,
        "temperature": 0,
        "text": " And what if I said B means move forward without drawing.",
        "tokens": [
          50414,
          400,
          437,
          498,
          286,
          848,
          363,
          1355,
          1286,
          2128,
          1553,
          6316,
          13,
          50850
        ]
      },
      {
        "avg_logprob": -0.3504810739070811,
        "compression_ratio": 2.051948051948052,
        "end": 298.09999999999997,
        "id": 96,
        "no_speech_prob": 0.002216957276687026,
        "seek": 28634,
        "start": 296.06,
        "temperature": 0,
        "text": " So let's look at what this is.",
        "tokens": [
          50850,
          407,
          718,
          311,
          574,
          412,
          437,
          341,
          307,
          13,
          50952
        ]
      },
      {
        "avg_logprob": -0.3504810739070811,
        "compression_ratio": 2.051948051948052,
        "end": 300.34,
        "id": 97,
        "no_speech_prob": 0.002216957276687026,
        "seek": 28634,
        "start": 298.09999999999997,
        "temperature": 0,
        "text": " A translates to this.",
        "tokens": [
          50952,
          316,
          28468,
          281,
          341,
          13,
          51064
        ]
      },
      {
        "avg_logprob": -0.3504810739070811,
        "compression_ratio": 2.051948051948052,
        "end": 302.97999999999996,
        "id": 98,
        "no_speech_prob": 0.002216957276687026,
        "seek": 28634,
        "start": 300.34,
        "temperature": 0,
        "text": " ABA translates to this.",
        "tokens": [
          51064,
          316,
          9295,
          28468,
          281,
          341,
          13,
          51196
        ]
      },
      {
        "avg_logprob": -0.3504810739070811,
        "compression_ratio": 2.051948051948052,
        "end": 309.82,
        "id": 99,
        "no_speech_prob": 0.002216957276687026,
        "seek": 28634,
        "start": 302.97999999999996,
        "temperature": 0,
        "text": " ABA BBBBB ABA translates to, I really didn't need to go to the third generation.",
        "tokens": [
          51196,
          316,
          9295,
          19168,
          30366,
          33,
          316,
          9295,
          28468,
          281,
          11,
          286,
          534,
          994,
          380,
          643,
          281,
          352,
          281,
          264,
          2636,
          5125,
          13,
          51538
        ]
      },
      {
        "avg_logprob": -0.3504810739070811,
        "compression_ratio": 2.051948051948052,
        "end": 314.17999999999995,
        "id": 100,
        "no_speech_prob": 0.002216957276687026,
        "seek": 28634,
        "start": 309.82,
        "temperature": 0,
        "text": " Line, move forward, line, move forward, move forward, move forward, line, move forward,",
        "tokens": [
          51538,
          14670,
          11,
          1286,
          2128,
          11,
          1622,
          11,
          1286,
          2128,
          11,
          1286,
          2128,
          11,
          1286,
          2128,
          11,
          1622,
          11,
          1286,
          2128,
          11,
          51756
        ]
      },
      {
        "avg_logprob": -0.3504810739070811,
        "compression_ratio": 2.051948051948052,
        "end": 315.17999999999995,
        "id": 101,
        "no_speech_prob": 0.002216957276687026,
        "seek": 28634,
        "start": 314.17999999999995,
        "temperature": 0,
        "text": " move forward.",
        "tokens": [
          51756,
          1286,
          2128,
          13,
          51806
        ]
      },
      {
        "avg_logprob": -0.23600589622885493,
        "compression_ratio": 1.9757281553398058,
        "end": 318.98,
        "id": 102,
        "no_speech_prob": 0.023328516632318497,
        "seek": 31518,
        "start": 315.18,
        "temperature": 0,
        "text": " Line, line, line, line, line, line, line, line, line.",
        "tokens": [
          50364,
          14670,
          11,
          1622,
          11,
          1622,
          11,
          1622,
          11,
          1622,
          11,
          1622,
          11,
          1622,
          11,
          1622,
          11,
          1622,
          13,
          50554
        ]
      },
      {
        "avg_logprob": -0.23600589622885493,
        "compression_ratio": 1.9757281553398058,
        "end": 321.5,
        "id": 103,
        "no_speech_prob": 0.023328516632318497,
        "seek": 31518,
        "start": 318.98,
        "temperature": 0,
        "text": " Does this look familiar to you?",
        "tokens": [
          50554,
          4402,
          341,
          574,
          4963,
          281,
          291,
          30,
          50680
        ]
      },
      {
        "avg_logprob": -0.23600589622885493,
        "compression_ratio": 1.9757281553398058,
        "end": 326.54,
        "id": 104,
        "no_speech_prob": 0.023328516632318497,
        "seek": 31518,
        "start": 321.5,
        "temperature": 0,
        "text": " This is generation three, this is generation two, this is generation one, right?",
        "tokens": [
          50680,
          639,
          307,
          5125,
          1045,
          11,
          341,
          307,
          5125,
          732,
          11,
          341,
          307,
          5125,
          472,
          11,
          558,
          30,
          50932
        ]
      },
      {
        "avg_logprob": -0.23600589622885493,
        "compression_ratio": 1.9757281553398058,
        "end": 327.86,
        "id": 105,
        "no_speech_prob": 0.023328516632318497,
        "seek": 31518,
        "start": 326.54,
        "temperature": 0,
        "text": " Does this look familiar to you?",
        "tokens": [
          50932,
          4402,
          341,
          574,
          4963,
          281,
          291,
          30,
          50998
        ]
      },
      {
        "avg_logprob": -0.23600589622885493,
        "compression_ratio": 1.9757281553398058,
        "end": 328.94,
        "id": 106,
        "no_speech_prob": 0.023328516632318497,
        "seek": 31518,
        "start": 327.86,
        "temperature": 0,
        "text": " It should.",
        "tokens": [
          50998,
          467,
          820,
          13,
          51052
        ]
      },
      {
        "avg_logprob": -0.23600589622885493,
        "compression_ratio": 1.9757281553398058,
        "end": 331.22,
        "id": 107,
        "no_speech_prob": 0.023328516632318497,
        "seek": 31518,
        "start": 328.94,
        "temperature": 0,
        "text": " What we are doing is making the canter set.",
        "tokens": [
          51052,
          708,
          321,
          366,
          884,
          307,
          1455,
          264,
          393,
          391,
          992,
          13,
          51166
        ]
      },
      {
        "avg_logprob": -0.23600589622885493,
        "compression_ratio": 1.9757281553398058,
        "end": 335.18,
        "id": 108,
        "no_speech_prob": 0.023328516632318497,
        "seek": 31518,
        "start": 331.22,
        "temperature": 0,
        "text": " So we can actually, I'm sorry if that was kind of roundabout, but what we did is we",
        "tokens": [
          51166,
          407,
          321,
          393,
          767,
          11,
          286,
          478,
          2597,
          498,
          300,
          390,
          733,
          295,
          3098,
          21970,
          11,
          457,
          437,
          321,
          630,
          307,
          321,
          51364
        ]
      },
      {
        "avg_logprob": -0.23600589622885493,
        "compression_ratio": 1.9757281553398058,
        "end": 340.46000000000004,
        "id": 109,
        "no_speech_prob": 0.023328516632318497,
        "seek": 31518,
        "start": 335.18,
        "temperature": 0,
        "text": " just defined the canter set in terms of strings of characters, right?",
        "tokens": [
          51364,
          445,
          7642,
          264,
          393,
          391,
          992,
          294,
          2115,
          295,
          13985,
          295,
          4342,
          11,
          558,
          30,
          51628
        ]
      },
      {
        "avg_logprob": -0.2515760216831176,
        "compression_ratio": 1.7765567765567765,
        "end": 346.26,
        "id": 110,
        "no_speech_prob": 0.048851534724235535,
        "seek": 34046,
        "start": 340.46,
        "temperature": 0,
        "text": " You can see these strings of characters exhibit the pattern that the canter set exhibit whenever",
        "tokens": [
          50364,
          509,
          393,
          536,
          613,
          13985,
          295,
          4342,
          20487,
          264,
          5102,
          300,
          264,
          393,
          391,
          992,
          20487,
          5699,
          50654
        ]
      },
      {
        "avg_logprob": -0.2515760216831176,
        "compression_ratio": 1.7765567765567765,
        "end": 348.9,
        "id": 111,
        "no_speech_prob": 0.048851534724235535,
        "seek": 34046,
        "start": 346.26,
        "temperature": 0,
        "text": " A is a line and B is a blank space.",
        "tokens": [
          50654,
          316,
          307,
          257,
          1622,
          293,
          363,
          307,
          257,
          8247,
          1901,
          13,
          50786
        ]
      },
      {
        "avg_logprob": -0.2515760216831176,
        "compression_ratio": 1.7765567765567765,
        "end": 351.14,
        "id": 112,
        "no_speech_prob": 0.048851534724235535,
        "seek": 34046,
        "start": 348.9,
        "temperature": 0,
        "text": " And I didn't necessarily draw this to scale perfectly.",
        "tokens": [
          50786,
          400,
          286,
          994,
          380,
          4725,
          2642,
          341,
          281,
          4373,
          6239,
          13,
          50898
        ]
      },
      {
        "avg_logprob": -0.2515760216831176,
        "compression_ratio": 1.7765567765567765,
        "end": 354.84,
        "id": 113,
        "no_speech_prob": 0.048851534724235535,
        "seek": 34046,
        "start": 351.14,
        "temperature": 0,
        "text": " One of the things in L-Systems that we're going to see is if we're using these instructions",
        "tokens": [
          50898,
          1485,
          295,
          264,
          721,
          294,
          441,
          12,
          50,
          9321,
          82,
          300,
          321,
          434,
          516,
          281,
          536,
          307,
          498,
          321,
          434,
          1228,
          613,
          9415,
          51083
        ]
      },
      {
        "avg_logprob": -0.2515760216831176,
        "compression_ratio": 1.7765567765567765,
        "end": 359.78,
        "id": 114,
        "no_speech_prob": 0.048851534724235535,
        "seek": 34046,
        "start": 354.84,
        "temperature": 0,
        "text": " for drawing, from generation to generation, each line segment needs to get a little bit",
        "tokens": [
          51083,
          337,
          6316,
          11,
          490,
          5125,
          281,
          5125,
          11,
          1184,
          1622,
          9469,
          2203,
          281,
          483,
          257,
          707,
          857,
          51330
        ]
      },
      {
        "avg_logprob": -0.2515760216831176,
        "compression_ratio": 1.7765567765567765,
        "end": 361.17999999999995,
        "id": 115,
        "no_speech_prob": 0.048851534724235535,
        "seek": 34046,
        "start": 359.78,
        "temperature": 0,
        "text": " shorter, right?",
        "tokens": [
          51330,
          11639,
          11,
          558,
          30,
          51400
        ]
      },
      {
        "avg_logprob": -0.2515760216831176,
        "compression_ratio": 1.7765567765567765,
        "end": 362.17999999999995,
        "id": 116,
        "no_speech_prob": 0.048851534724235535,
        "seek": 34046,
        "start": 361.17999999999995,
        "temperature": 0,
        "text": " So we have this.",
        "tokens": [
          51400,
          407,
          321,
          362,
          341,
          13,
          51450
        ]
      },
      {
        "avg_logprob": -0.2515760216831176,
        "compression_ratio": 1.7765567765567765,
        "end": 367.14,
        "id": 117,
        "no_speech_prob": 0.048851534724235535,
        "seek": 34046,
        "start": 362.17999999999995,
        "temperature": 0,
        "text": " You can see how the line segments are getting shorter from generation to generation.",
        "tokens": [
          51450,
          509,
          393,
          536,
          577,
          264,
          1622,
          19904,
          366,
          1242,
          11639,
          490,
          5125,
          281,
          5125,
          13,
          51698
        ]
      },
      {
        "avg_logprob": -0.2579612731933594,
        "compression_ratio": 1.7194719471947195,
        "end": 371.58,
        "id": 118,
        "no_speech_prob": 0.38854578137397766,
        "seek": 36714,
        "start": 367.14,
        "temperature": 0,
        "text": " If this is really, if I were to kind of have done this slightly better, so if I, this is",
        "tokens": [
          50364,
          759,
          341,
          307,
          534,
          11,
          498,
          286,
          645,
          281,
          733,
          295,
          362,
          1096,
          341,
          4748,
          1101,
          11,
          370,
          498,
          286,
          11,
          341,
          307,
          50586
        ]
      },
      {
        "avg_logprob": -0.2579612731933594,
        "compression_ratio": 1.7194719471947195,
        "end": 375.06,
        "id": 119,
        "no_speech_prob": 0.38854578137397766,
        "seek": 36714,
        "start": 371.58,
        "temperature": 0,
        "text": " where I think to myself, I'll just start this video over and I'll make it more perfectly",
        "tokens": [
          50586,
          689,
          286,
          519,
          281,
          2059,
          11,
          286,
          603,
          445,
          722,
          341,
          960,
          670,
          293,
          286,
          603,
          652,
          309,
          544,
          6239,
          50760
        ]
      },
      {
        "avg_logprob": -0.2579612731933594,
        "compression_ratio": 1.7194719471947195,
        "end": 376.06,
        "id": 120,
        "no_speech_prob": 0.38854578137397766,
        "seek": 36714,
        "start": 375.06,
        "temperature": 0,
        "text": " aligned on the board.",
        "tokens": [
          50760,
          17962,
          322,
          264,
          3150,
          13,
          50810
        ]
      },
      {
        "avg_logprob": -0.2579612731933594,
        "compression_ratio": 1.7194719471947195,
        "end": 377.86,
        "id": 121,
        "no_speech_prob": 0.38854578137397766,
        "seek": 36714,
        "start": 376.06,
        "temperature": 0,
        "text": " But I think you get the idea, right?",
        "tokens": [
          50810,
          583,
          286,
          519,
          291,
          483,
          264,
          1558,
          11,
          558,
          30,
          50900
        ]
      },
      {
        "avg_logprob": -0.2579612731933594,
        "compression_ratio": 1.7194719471947195,
        "end": 380.15999999999997,
        "id": 122,
        "no_speech_prob": 0.38854578137397766,
        "seek": 36714,
        "start": 377.86,
        "temperature": 0,
        "text": " So what, this is pretty exciting.",
        "tokens": [
          50900,
          407,
          437,
          11,
          341,
          307,
          1238,
          4670,
          13,
          51015
        ]
      },
      {
        "avg_logprob": -0.2579612731933594,
        "compression_ratio": 1.7194719471947195,
        "end": 385.18,
        "id": 123,
        "no_speech_prob": 0.38854578137397766,
        "seek": 36714,
        "start": 380.15999999999997,
        "temperature": 0,
        "text": " We now have an L-System, which is these strings of characters, which we can translate these",
        "tokens": [
          51015,
          492,
          586,
          362,
          364,
          441,
          12,
          50,
          9321,
          11,
          597,
          307,
          613,
          13985,
          295,
          4342,
          11,
          597,
          321,
          393,
          13799,
          613,
          51266
        ]
      },
      {
        "avg_logprob": -0.2579612731933594,
        "compression_ratio": 1.7194719471947195,
        "end": 389.53999999999996,
        "id": 124,
        "no_speech_prob": 0.38854578137397766,
        "seek": 36714,
        "start": 385.18,
        "temperature": 0,
        "text": " characters into instructions for drawing and generate these patterns.",
        "tokens": [
          51266,
          4342,
          666,
          9415,
          337,
          6316,
          293,
          8460,
          613,
          8294,
          13,
          51484
        ]
      },
      {
        "avg_logprob": -0.2579612731933594,
        "compression_ratio": 1.7194719471947195,
        "end": 391.78,
        "id": 125,
        "no_speech_prob": 0.38854578137397766,
        "seek": 36714,
        "start": 389.53999999999996,
        "temperature": 0,
        "text": " Now this isn't accidental.",
        "tokens": [
          51484,
          823,
          341,
          1943,
          380,
          38094,
          13,
          51596
        ]
      },
      {
        "avg_logprob": -0.2579612731933594,
        "compression_ratio": 1.7194719471947195,
        "end": 394.62,
        "id": 126,
        "no_speech_prob": 0.38854578137397766,
        "seek": 36714,
        "start": 391.78,
        "temperature": 0,
        "text": " This, you know, this was designed to generate the canter set.",
        "tokens": [
          51596,
          639,
          11,
          291,
          458,
          11,
          341,
          390,
          4761,
          281,
          8460,
          264,
          393,
          391,
          992,
          13,
          51738
        ]
      },
      {
        "avg_logprob": -0.24137128074214143,
        "compression_ratio": 1.6048387096774193,
        "end": 399.1,
        "id": 127,
        "no_speech_prob": 0.02368704229593277,
        "seek": 39462,
        "start": 394.62,
        "temperature": 0,
        "text": " You can come up with all sorts of random alphabets and random axioms and random rule",
        "tokens": [
          50364,
          509,
          393,
          808,
          493,
          365,
          439,
          7527,
          295,
          4974,
          419,
          950,
          455,
          1385,
          293,
          4974,
          6360,
          72,
          4785,
          293,
          4974,
          4978,
          50588
        ]
      },
      {
        "avg_logprob": -0.24137128074214143,
        "compression_ratio": 1.6048387096774193,
        "end": 401.5,
        "id": 128,
        "no_speech_prob": 0.02368704229593277,
        "seek": 39462,
        "start": 399.1,
        "temperature": 0,
        "text": " sets and see what results you get.",
        "tokens": [
          50588,
          6352,
          293,
          536,
          437,
          3542,
          291,
          483,
          13,
          50708
        ]
      },
      {
        "avg_logprob": -0.24137128074214143,
        "compression_ratio": 1.6048387096774193,
        "end": 408.46,
        "id": 129,
        "no_speech_prob": 0.02368704229593277,
        "seek": 39462,
        "start": 401.5,
        "temperature": 0,
        "text": " But what I'm going to show you are some particularly, some known L-Systems that will give you fractal",
        "tokens": [
          50708,
          583,
          437,
          286,
          478,
          516,
          281,
          855,
          291,
          366,
          512,
          4098,
          11,
          512,
          2570,
          441,
          12,
          50,
          9321,
          82,
          300,
          486,
          976,
          291,
          17948,
          304,
          51056
        ]
      },
      {
        "avg_logprob": -0.24137128074214143,
        "compression_ratio": 1.6048387096774193,
        "end": 409.46,
        "id": 130,
        "no_speech_prob": 0.02368704229593277,
        "seek": 39462,
        "start": 408.46,
        "temperature": 0,
        "text": " patterns.",
        "tokens": [
          51056,
          8294,
          13,
          51106
        ]
      },
      {
        "avg_logprob": -0.24137128074214143,
        "compression_ratio": 1.6048387096774193,
        "end": 417.5,
        "id": 131,
        "no_speech_prob": 0.02368704229593277,
        "seek": 39462,
        "start": 409.46,
        "temperature": 0,
        "text": " So let's briefly talk about how the code implementation for this needs to work.",
        "tokens": [
          51106,
          407,
          718,
          311,
          10515,
          751,
          466,
          577,
          264,
          3089,
          11420,
          337,
          341,
          2203,
          281,
          589,
          13,
          51508
        ]
      },
      {
        "avg_logprob": -0.24137128074214143,
        "compression_ratio": 1.6048387096774193,
        "end": 422.38,
        "id": 132,
        "no_speech_prob": 0.02368704229593277,
        "seek": 39462,
        "start": 417.5,
        "temperature": 0,
        "text": " I don't know if you remember, if you watched a couple videos ago, we talked about this",
        "tokens": [
          51508,
          286,
          500,
          380,
          458,
          498,
          291,
          1604,
          11,
          498,
          291,
          6337,
          257,
          1916,
          2145,
          2057,
          11,
          321,
          2825,
          466,
          341,
          51752
        ]
      },
      {
        "avg_logprob": -0.25302484873178843,
        "compression_ratio": 1.920863309352518,
        "end": 427.3,
        "id": 133,
        "no_speech_prob": 0.6405317783355713,
        "seek": 42238,
        "start": 422.38,
        "temperature": 0,
        "text": " ArrayList technique, where we kind of put an object in the ArrayList and then we iterate",
        "tokens": [
          50364,
          1587,
          3458,
          43,
          468,
          6532,
          11,
          689,
          321,
          733,
          295,
          829,
          364,
          2657,
          294,
          264,
          1587,
          3458,
          43,
          468,
          293,
          550,
          321,
          44497,
          50610
        ]
      },
      {
        "avg_logprob": -0.25302484873178843,
        "compression_ratio": 1.920863309352518,
        "end": 431.3,
        "id": 134,
        "no_speech_prob": 0.6405317783355713,
        "seek": 42238,
        "start": 427.3,
        "temperature": 0,
        "text": " through any objects that are in the ArrayList and create new objects that go in that same",
        "tokens": [
          50610,
          807,
          604,
          6565,
          300,
          366,
          294,
          264,
          1587,
          3458,
          43,
          468,
          293,
          1884,
          777,
          6565,
          300,
          352,
          294,
          300,
          912,
          50810
        ]
      },
      {
        "avg_logprob": -0.25302484873178843,
        "compression_ratio": 1.920863309352518,
        "end": 434.06,
        "id": 135,
        "no_speech_prob": 0.6405317783355713,
        "seek": 42238,
        "start": 431.3,
        "temperature": 0,
        "text": " ArrayList or go into a new ArrayList and then it gets replaced, right?",
        "tokens": [
          50810,
          1587,
          3458,
          43,
          468,
          420,
          352,
          666,
          257,
          777,
          1587,
          3458,
          43,
          468,
          293,
          550,
          309,
          2170,
          10772,
          11,
          558,
          30,
          50948
        ]
      },
      {
        "avg_logprob": -0.25302484873178843,
        "compression_ratio": 1.920863309352518,
        "end": 439.94,
        "id": 136,
        "no_speech_prob": 0.6405317783355713,
        "seek": 42238,
        "start": 434.06,
        "temperature": 0,
        "text": " This idea of recursively iterating through a list of things that make more things into",
        "tokens": [
          50948,
          639,
          1558,
          295,
          20560,
          3413,
          17138,
          990,
          807,
          257,
          1329,
          295,
          721,
          300,
          652,
          544,
          721,
          666,
          51242
        ]
      },
      {
        "avg_logprob": -0.25302484873178843,
        "compression_ratio": 1.920863309352518,
        "end": 440.94,
        "id": 137,
        "no_speech_prob": 0.6405317783355713,
        "seek": 42238,
        "start": 439.94,
        "temperature": 0,
        "text": " the same list.",
        "tokens": [
          51242,
          264,
          912,
          1329,
          13,
          51292
        ]
      },
      {
        "avg_logprob": -0.25302484873178843,
        "compression_ratio": 1.920863309352518,
        "end": 441.94,
        "id": 138,
        "no_speech_prob": 0.6405317783355713,
        "seek": 42238,
        "start": 440.94,
        "temperature": 0,
        "text": " Okay?",
        "tokens": [
          51292,
          1033,
          30,
          51342
        ]
      },
      {
        "avg_logprob": -0.25302484873178843,
        "compression_ratio": 1.920863309352518,
        "end": 443.94,
        "id": 139,
        "no_speech_prob": 0.6405317783355713,
        "seek": 42238,
        "start": 441.94,
        "temperature": 0,
        "text": " So, that's what we did before.",
        "tokens": [
          51342,
          407,
          11,
          300,
          311,
          437,
          321,
          630,
          949,
          13,
          51442
        ]
      },
      {
        "avg_logprob": -0.25302484873178843,
        "compression_ratio": 1.920863309352518,
        "end": 446.1,
        "id": 140,
        "no_speech_prob": 0.6405317783355713,
        "seek": 42238,
        "start": 443.94,
        "temperature": 0,
        "text": " We're going to do the same thing with strings, right?",
        "tokens": [
          51442,
          492,
          434,
          516,
          281,
          360,
          264,
          912,
          551,
          365,
          13985,
          11,
          558,
          30,
          51550
        ]
      },
      {
        "avg_logprob": -0.25302484873178843,
        "compression_ratio": 1.920863309352518,
        "end": 452.06,
        "id": 141,
        "no_speech_prob": 0.6405317783355713,
        "seek": 42238,
        "start": 446.1,
        "temperature": 0,
        "text": " We have some ArrayList essentially that has one character in it and now the next generation",
        "tokens": [
          51550,
          492,
          362,
          512,
          1587,
          3458,
          43,
          468,
          4476,
          300,
          575,
          472,
          2517,
          294,
          309,
          293,
          586,
          264,
          958,
          5125,
          51848
        ]
      },
      {
        "avg_logprob": -0.282886367907627,
        "compression_ratio": 2.183673469387755,
        "end": 457.74,
        "id": 142,
        "no_speech_prob": 0.00781556498259306,
        "seek": 45206,
        "start": 452.74,
        "temperature": 0,
        "text": " we need to say, hey, there's one character in it, let's put these three characters in it.",
        "tokens": [
          50398,
          321,
          643,
          281,
          584,
          11,
          4177,
          11,
          456,
          311,
          472,
          2517,
          294,
          309,
          11,
          718,
          311,
          829,
          613,
          1045,
          4342,
          294,
          309,
          13,
          50648
        ]
      },
      {
        "avg_logprob": -0.282886367907627,
        "compression_ratio": 2.183673469387755,
        "end": 461.62,
        "id": 143,
        "no_speech_prob": 0.00781556498259306,
        "seek": 45206,
        "start": 457.74,
        "temperature": 0,
        "text": " Oh, then what we need to do is say for this one we're going to put those three characters",
        "tokens": [
          50648,
          876,
          11,
          550,
          437,
          321,
          643,
          281,
          360,
          307,
          584,
          337,
          341,
          472,
          321,
          434,
          516,
          281,
          829,
          729,
          1045,
          4342,
          50842
        ]
      },
      {
        "avg_logprob": -0.282886367907627,
        "compression_ratio": 2.183673469387755,
        "end": 465.42,
        "id": 144,
        "no_speech_prob": 0.00781556498259306,
        "seek": 45206,
        "start": 461.62,
        "temperature": 0,
        "text": " in it, for this one we're going to put those three characters in it, and for this one we're",
        "tokens": [
          50842,
          294,
          309,
          11,
          337,
          341,
          472,
          321,
          434,
          516,
          281,
          829,
          729,
          1045,
          4342,
          294,
          309,
          11,
          293,
          337,
          341,
          472,
          321,
          434,
          51032
        ]
      },
      {
        "avg_logprob": -0.282886367907627,
        "compression_ratio": 2.183673469387755,
        "end": 467.22,
        "id": 145,
        "no_speech_prob": 0.00781556498259306,
        "seek": 45206,
        "start": 465.42,
        "temperature": 0,
        "text": " going to put these three characters in it.",
        "tokens": [
          51032,
          516,
          281,
          829,
          613,
          1045,
          4342,
          294,
          309,
          13,
          51122
        ]
      },
      {
        "avg_logprob": -0.282886367907627,
        "compression_ratio": 2.183673469387755,
        "end": 471.66,
        "id": 146,
        "no_speech_prob": 0.00781556498259306,
        "seek": 45206,
        "start": 467.22,
        "temperature": 0,
        "text": " So the couple, the things that I should note is the order of the characters actually matters,",
        "tokens": [
          51122,
          407,
          264,
          1916,
          11,
          264,
          721,
          300,
          286,
          820,
          3637,
          307,
          264,
          1668,
          295,
          264,
          4342,
          767,
          7001,
          11,
          51344
        ]
      },
      {
        "avg_logprob": -0.282886367907627,
        "compression_ratio": 2.183673469387755,
        "end": 472.66,
        "id": 147,
        "no_speech_prob": 0.00781556498259306,
        "seek": 45206,
        "start": 471.66,
        "temperature": 0,
        "text": " right?",
        "tokens": [
          51344,
          558,
          30,
          51394
        ]
      },
      {
        "avg_logprob": -0.282886367907627,
        "compression_ratio": 2.183673469387755,
        "end": 474.36,
        "id": 148,
        "no_speech_prob": 0.00781556498259306,
        "seek": 45206,
        "start": 472.66,
        "temperature": 0,
        "text": " Because these are ultimately going to be instructions for drawing.",
        "tokens": [
          51394,
          1436,
          613,
          366,
          6284,
          516,
          281,
          312,
          9415,
          337,
          6316,
          13,
          51479
        ]
      },
      {
        "avg_logprob": -0.282886367907627,
        "compression_ratio": 2.183673469387755,
        "end": 477.26,
        "id": 149,
        "no_speech_prob": 0.00781556498259306,
        "seek": 45206,
        "start": 474.36,
        "temperature": 0,
        "text": " But it's just, we're using the same exact technique.",
        "tokens": [
          51479,
          583,
          309,
          311,
          445,
          11,
          321,
          434,
          1228,
          264,
          912,
          1900,
          6532,
          13,
          51624
        ]
      },
      {
        "avg_logprob": -0.244349867105484,
        "compression_ratio": 1.7793103448275862,
        "end": 481.82,
        "id": 150,
        "no_speech_prob": 0.4842601716518402,
        "seek": 47726,
        "start": 477.26,
        "temperature": 0,
        "text": " This list with information and each piece of information kind of gives birth to new",
        "tokens": [
          50364,
          639,
          1329,
          365,
          1589,
          293,
          1184,
          2522,
          295,
          1589,
          733,
          295,
          2709,
          3965,
          281,
          777,
          50592
        ]
      },
      {
        "avg_logprob": -0.244349867105484,
        "compression_ratio": 1.7793103448275862,
        "end": 486.02,
        "id": 151,
        "no_speech_prob": 0.4842601716518402,
        "seek": 47726,
        "start": 481.82,
        "temperature": 0,
        "text": " pieces of information and the ArrayList grows and grows and grows.",
        "tokens": [
          50592,
          3755,
          295,
          1589,
          293,
          264,
          1587,
          3458,
          43,
          468,
          13156,
          293,
          13156,
          293,
          13156,
          13,
          50802
        ]
      },
      {
        "avg_logprob": -0.244349867105484,
        "compression_ratio": 1.7793103448275862,
        "end": 490.09999999999997,
        "id": 152,
        "no_speech_prob": 0.4842601716518402,
        "seek": 47726,
        "start": 486.02,
        "temperature": 0,
        "text": " But instead of using an ArrayList, we're going to actually use something called a string",
        "tokens": [
          50802,
          583,
          2602,
          295,
          1228,
          364,
          1587,
          3458,
          43,
          468,
          11,
          321,
          434,
          516,
          281,
          767,
          764,
          746,
          1219,
          257,
          6798,
          51006
        ]
      },
      {
        "avg_logprob": -0.244349867105484,
        "compression_ratio": 1.7793103448275862,
        "end": 491.94,
        "id": 153,
        "no_speech_prob": 0.4842601716518402,
        "seek": 47726,
        "start": 490.09999999999997,
        "temperature": 0,
        "text": " buffer.",
        "tokens": [
          51006,
          21762,
          13,
          51098
        ]
      },
      {
        "avg_logprob": -0.244349867105484,
        "compression_ratio": 1.7793103448275862,
        "end": 497.3,
        "id": 154,
        "no_speech_prob": 0.4842601716518402,
        "seek": 47726,
        "start": 491.94,
        "temperature": 0,
        "text": " Now in truth, you know, this probably merits me pointing towards a video and there's a",
        "tokens": [
          51098,
          823,
          294,
          3494,
          11,
          291,
          458,
          11,
          341,
          1391,
          40923,
          385,
          12166,
          3030,
          257,
          960,
          293,
          456,
          311,
          257,
          51366
        ]
      },
      {
        "avg_logprob": -0.244349867105484,
        "compression_ratio": 1.7793103448275862,
        "end": 500.65999999999997,
        "id": 155,
        "no_speech_prob": 0.4842601716518402,
        "seek": 47726,
        "start": 497.3,
        "temperature": 0,
        "text": " tutorial on the Processing website that I'll try to link to about how to work with strings",
        "tokens": [
          51366,
          7073,
          322,
          264,
          31093,
          278,
          3144,
          300,
          286,
          603,
          853,
          281,
          2113,
          281,
          466,
          577,
          281,
          589,
          365,
          13985,
          51534
        ]
      },
      {
        "avg_logprob": -0.244349867105484,
        "compression_ratio": 1.7793103448275862,
        "end": 502.3,
        "id": 156,
        "no_speech_prob": 0.4842601716518402,
        "seek": 47726,
        "start": 500.65999999999997,
        "temperature": 0,
        "text": " in processing.",
        "tokens": [
          51534,
          294,
          9007,
          13,
          51616
        ]
      },
      {
        "avg_logprob": -0.244349867105484,
        "compression_ratio": 1.7793103448275862,
        "end": 505.53999999999996,
        "id": 157,
        "no_speech_prob": 0.4842601716518402,
        "seek": 47726,
        "start": 502.3,
        "temperature": 0,
        "text": " You don't really need a string buffer, you could just use a regular string.",
        "tokens": [
          51616,
          509,
          500,
          380,
          534,
          643,
          257,
          6798,
          21762,
          11,
          291,
          727,
          445,
          764,
          257,
          3890,
          6798,
          13,
          51778
        ]
      },
      {
        "avg_logprob": -0.2779168281846374,
        "compression_ratio": 1.838187702265372,
        "end": 508.98,
        "id": 158,
        "no_speech_prob": 0.1008695662021637,
        "seek": 50554,
        "start": 505.54,
        "temperature": 0,
        "text": " A string is an object to describe an array of characters.",
        "tokens": [
          50364,
          316,
          6798,
          307,
          364,
          2657,
          281,
          6786,
          364,
          10225,
          295,
          4342,
          13,
          50536
        ]
      },
      {
        "avg_logprob": -0.2779168281846374,
        "compression_ratio": 1.838187702265372,
        "end": 514.1800000000001,
        "id": 159,
        "no_speech_prob": 0.1008695662021637,
        "seek": 50554,
        "start": 508.98,
        "temperature": 0,
        "text": " But this is a moment in time where using a string buffer could, makes good sense because",
        "tokens": [
          50536,
          583,
          341,
          307,
          257,
          1623,
          294,
          565,
          689,
          1228,
          257,
          6798,
          21762,
          727,
          11,
          1669,
          665,
          2020,
          570,
          50796
        ]
      },
      {
        "avg_logprob": -0.2779168281846374,
        "compression_ratio": 1.838187702265372,
        "end": 518.0600000000001,
        "id": 160,
        "no_speech_prob": 0.1008695662021637,
        "seek": 50554,
        "start": 514.1800000000001,
        "temperature": 0,
        "text": " even though as we do this on the board, our string might only have like 50 characters",
        "tokens": [
          50796,
          754,
          1673,
          382,
          321,
          360,
          341,
          322,
          264,
          3150,
          11,
          527,
          6798,
          1062,
          787,
          362,
          411,
          2625,
          4342,
          50990
        ]
      },
      {
        "avg_logprob": -0.2779168281846374,
        "compression_ratio": 1.838187702265372,
        "end": 521.4200000000001,
        "id": 161,
        "no_speech_prob": 0.1008695662021637,
        "seek": 50554,
        "start": 518.0600000000001,
        "temperature": 0,
        "text": " in it, as soon as we go and run the processing sketch, you're going to see the string could",
        "tokens": [
          50990,
          294,
          309,
          11,
          382,
          2321,
          382,
          321,
          352,
          293,
          1190,
          264,
          9007,
          12325,
          11,
          291,
          434,
          516,
          281,
          536,
          264,
          6798,
          727,
          51158
        ]
      },
      {
        "avg_logprob": -0.2779168281846374,
        "compression_ratio": 1.838187702265372,
        "end": 525.46,
        "id": 162,
        "no_speech_prob": 0.1008695662021637,
        "seek": 50554,
        "start": 521.4200000000001,
        "temperature": 0,
        "text": " have thousands and thousands, up to hundreds of thousands of characters in it potentially",
        "tokens": [
          51158,
          362,
          5383,
          293,
          5383,
          11,
          493,
          281,
          6779,
          295,
          5383,
          295,
          4342,
          294,
          309,
          7263,
          51360
        ]
      },
      {
        "avg_logprob": -0.2779168281846374,
        "compression_ratio": 1.838187702265372,
        "end": 528.4200000000001,
        "id": 163,
        "no_speech_prob": 0.1008695662021637,
        "seek": 50554,
        "start": 525.46,
        "temperature": 0,
        "text": " if it's a very elaborate drawing, instead of drawing instructions.",
        "tokens": [
          51360,
          498,
          309,
          311,
          257,
          588,
          20945,
          6316,
          11,
          2602,
          295,
          6316,
          9415,
          13,
          51508
        ]
      },
      {
        "avg_logprob": -0.2779168281846374,
        "compression_ratio": 1.838187702265372,
        "end": 533.94,
        "id": 164,
        "no_speech_prob": 0.1008695662021637,
        "seek": 50554,
        "start": 528.4200000000001,
        "temperature": 0,
        "text": " A string buffer is very, very efficient for manipulating strings and what it has in it",
        "tokens": [
          51508,
          316,
          6798,
          21762,
          307,
          588,
          11,
          588,
          7148,
          337,
          40805,
          13985,
          293,
          437,
          309,
          575,
          294,
          309,
          51784
        ]
      },
      {
        "avg_logprob": -0.23860318085242962,
        "compression_ratio": 1.8669527896995708,
        "end": 540.6600000000001,
        "id": 165,
        "no_speech_prob": 0.1441369503736496,
        "seek": 53394,
        "start": 534.1,
        "temperature": 0,
        "text": " is it has a method called append, which is kind of going to be like adding to an ArrayList.",
        "tokens": [
          50372,
          307,
          309,
          575,
          257,
          3170,
          1219,
          34116,
          11,
          597,
          307,
          733,
          295,
          516,
          281,
          312,
          411,
          5127,
          281,
          364,
          1587,
          3458,
          43,
          468,
          13,
          50700
        ]
      },
      {
        "avg_logprob": -0.23860318085242962,
        "compression_ratio": 1.8669527896995708,
        "end": 545.4200000000001,
        "id": 166,
        "no_speech_prob": 0.1441369503736496,
        "seek": 53394,
        "start": 540.6600000000001,
        "temperature": 0,
        "text": " So we'll start, we have a string, we create a new string buffer for every string, for",
        "tokens": [
          50700,
          407,
          321,
          603,
          722,
          11,
          321,
          362,
          257,
          6798,
          11,
          321,
          1884,
          257,
          777,
          6798,
          21762,
          337,
          633,
          6798,
          11,
          337,
          50938
        ]
      },
      {
        "avg_logprob": -0.23860318085242962,
        "compression_ratio": 1.8669527896995708,
        "end": 549.58,
        "id": 167,
        "no_speech_prob": 0.1441369503736496,
        "seek": 53394,
        "start": 545.4200000000001,
        "temperature": 0,
        "text": " every character in our original string, we start appending to that string buffer new",
        "tokens": [
          50938,
          633,
          2517,
          294,
          527,
          3380,
          6798,
          11,
          321,
          722,
          724,
          2029,
          281,
          300,
          6798,
          21762,
          777,
          51146
        ]
      },
      {
        "avg_logprob": -0.23860318085242962,
        "compression_ratio": 1.8669527896995708,
        "end": 551.1,
        "id": 168,
        "no_speech_prob": 0.1441369503736496,
        "seek": 53394,
        "start": 549.58,
        "temperature": 0,
        "text": " strings of characters.",
        "tokens": [
          51146,
          13985,
          295,
          4342,
          13,
          51222
        ]
      },
      {
        "avg_logprob": -0.23860318085242962,
        "compression_ratio": 1.8669527896995708,
        "end": 555.5,
        "id": 169,
        "no_speech_prob": 0.1441369503736496,
        "seek": 53394,
        "start": 551.1,
        "temperature": 0,
        "text": " So let's take a look at how this actually works in code.",
        "tokens": [
          51222,
          407,
          718,
          311,
          747,
          257,
          574,
          412,
          577,
          341,
          767,
          1985,
          294,
          3089,
          13,
          51442
        ]
      },
      {
        "avg_logprob": -0.23860318085242962,
        "compression_ratio": 1.8669527896995708,
        "end": 563.58,
        "id": 170,
        "no_speech_prob": 0.1441369503736496,
        "seek": 53394,
        "start": 555.5,
        "temperature": 0,
        "text": " So here I have that method, by the way, which is that we start with, we start with a current",
        "tokens": [
          51442,
          407,
          510,
          286,
          362,
          300,
          3170,
          11,
          538,
          264,
          636,
          11,
          597,
          307,
          300,
          321,
          722,
          365,
          11,
          321,
          722,
          365,
          257,
          2190,
          51846
        ]
      },
      {
        "avg_logprob": -0.23435025337414864,
        "compression_ratio": 1.796551724137931,
        "end": 564.82,
        "id": 171,
        "no_speech_prob": 0.021614035591483116,
        "seek": 56358,
        "start": 563.62,
        "temperature": 0,
        "text": " string, right?",
        "tokens": [
          50366,
          6798,
          11,
          558,
          30,
          50426
        ]
      },
      {
        "avg_logprob": -0.23435025337414864,
        "compression_ratio": 1.796551724137931,
        "end": 569.4200000000001,
        "id": 172,
        "no_speech_prob": 0.021614035591483116,
        "seek": 56358,
        "start": 564.82,
        "temperature": 0,
        "text": " We have a current string A. This is exactly, if you look at all of our previous examples,",
        "tokens": [
          50426,
          492,
          362,
          257,
          2190,
          6798,
          316,
          13,
          639,
          307,
          2293,
          11,
          498,
          291,
          574,
          412,
          439,
          295,
          527,
          3894,
          5110,
          11,
          50656
        ]
      },
      {
        "avg_logprob": -0.23435025337414864,
        "compression_ratio": 1.796551724137931,
        "end": 573.1800000000001,
        "id": 173,
        "no_speech_prob": 0.021614035591483116,
        "seek": 56358,
        "start": 569.4200000000001,
        "temperature": 0,
        "text": " we had an ArrayList current for all of the cotch lines and then we made an ArrayList",
        "tokens": [
          50656,
          321,
          632,
          364,
          1587,
          3458,
          43,
          468,
          2190,
          337,
          439,
          295,
          264,
          269,
          32785,
          3876,
          293,
          550,
          321,
          1027,
          364,
          1587,
          3458,
          43,
          468,
          50844
        ]
      },
      {
        "avg_logprob": -0.23435025337414864,
        "compression_ratio": 1.796551724137931,
        "end": 575.7,
        "id": 174,
        "no_speech_prob": 0.021614035591483116,
        "seek": 56358,
        "start": 573.1800000000001,
        "temperature": 0,
        "text": " next for the next generation of cotch lines.",
        "tokens": [
          50844,
          958,
          337,
          264,
          958,
          5125,
          295,
          269,
          32785,
          3876,
          13,
          50970
        ]
      },
      {
        "avg_logprob": -0.23435025337414864,
        "compression_ratio": 1.796551724137931,
        "end": 577.24,
        "id": 175,
        "no_speech_prob": 0.021614035591483116,
        "seek": 56358,
        "start": 575.7,
        "temperature": 0,
        "text": " We're doing the same thing here.",
        "tokens": [
          50970,
          492,
          434,
          884,
          264,
          912,
          551,
          510,
          13,
          51047
        ]
      },
      {
        "avg_logprob": -0.23435025337414864,
        "compression_ratio": 1.796551724137931,
        "end": 582.14,
        "id": 176,
        "no_speech_prob": 0.021614035591483116,
        "seek": 56358,
        "start": 577.24,
        "temperature": 0,
        "text": " The difference is, the thing that's next is a string buffer.",
        "tokens": [
          51047,
          440,
          2649,
          307,
          11,
          264,
          551,
          300,
          311,
          958,
          307,
          257,
          6798,
          21762,
          13,
          51292
        ]
      },
      {
        "avg_logprob": -0.23435025337414864,
        "compression_ratio": 1.796551724137931,
        "end": 586.22,
        "id": 177,
        "no_speech_prob": 0.021614035591483116,
        "seek": 56358,
        "start": 582.14,
        "temperature": 0,
        "text": " So as we go through the current string, we say, hey, did we find an A?",
        "tokens": [
          51292,
          407,
          382,
          321,
          352,
          807,
          264,
          2190,
          6798,
          11,
          321,
          584,
          11,
          4177,
          11,
          630,
          321,
          915,
          364,
          316,
          30,
          51496
        ]
      },
      {
        "avg_logprob": -0.23435025337414864,
        "compression_ratio": 1.796551724137931,
        "end": 587.5,
        "id": 178,
        "no_speech_prob": 0.021614035591483116,
        "seek": 56358,
        "start": 586.22,
        "temperature": 0,
        "text": " Give us an AB.",
        "tokens": [
          51496,
          5303,
          505,
          364,
          13838,
          13,
          51560
        ]
      },
      {
        "avg_logprob": -0.23435025337414864,
        "compression_ratio": 1.796551724137931,
        "end": 589.4200000000001,
        "id": 179,
        "no_speech_prob": 0.021614035591483116,
        "seek": 56358,
        "start": 587.5,
        "temperature": 0,
        "text": " Did we find a B?",
        "tokens": [
          51560,
          2589,
          321,
          915,
          257,
          363,
          30,
          51656
        ]
      },
      {
        "avg_logprob": -0.23435025337414864,
        "compression_ratio": 1.796551724137931,
        "end": 593.1,
        "id": 180,
        "no_speech_prob": 0.021614035591483116,
        "seek": 56358,
        "start": 589.4200000000001,
        "temperature": 0,
        "text": " Give us an A. And you know, I should probably make this the same thing we just did on the",
        "tokens": [
          51656,
          5303,
          505,
          364,
          316,
          13,
          400,
          291,
          458,
          11,
          286,
          820,
          1391,
          652,
          341,
          264,
          912,
          551,
          321,
          445,
          630,
          322,
          264,
          51840
        ]
      },
      {
        "avg_logprob": -0.22743201924261647,
        "compression_ratio": 1.7320574162679425,
        "end": 596.02,
        "id": 181,
        "no_speech_prob": 0.005384752061218023,
        "seek": 59310,
        "start": 593.1,
        "temperature": 0,
        "text": " board, right?",
        "tokens": [
          50364,
          3150,
          11,
          558,
          30,
          50510
        ]
      },
      {
        "avg_logprob": -0.22743201924261647,
        "compression_ratio": 1.7320574162679425,
        "end": 598.8000000000001,
        "id": 182,
        "no_speech_prob": 0.005384752061218023,
        "seek": 59310,
        "start": 596.02,
        "temperature": 0,
        "text": " If we find an A, give us an AB.",
        "tokens": [
          50510,
          759,
          321,
          915,
          364,
          316,
          11,
          976,
          505,
          364,
          13838,
          13,
          50649
        ]
      },
      {
        "avg_logprob": -0.22743201924261647,
        "compression_ratio": 1.7320574162679425,
        "end": 601.46,
        "id": 183,
        "no_speech_prob": 0.005384752061218023,
        "seek": 59310,
        "start": 598.8000000000001,
        "temperature": 0,
        "text": " If we find a B, give us a BBB, right?",
        "tokens": [
          50649,
          759,
          321,
          915,
          257,
          363,
          11,
          976,
          505,
          257,
          19168,
          33,
          11,
          558,
          30,
          50782
        ]
      },
      {
        "avg_logprob": -0.22743201924261647,
        "compression_ratio": 1.7320574162679425,
        "end": 608.34,
        "id": 184,
        "no_speech_prob": 0.005384752061218023,
        "seek": 59310,
        "start": 601.46,
        "temperature": 0,
        "text": " And then at the very, very end when we're done, current becomes that next string buffer.",
        "tokens": [
          50782,
          400,
          550,
          412,
          264,
          588,
          11,
          588,
          917,
          562,
          321,
          434,
          1096,
          11,
          2190,
          3643,
          300,
          958,
          6798,
          21762,
          13,
          51126
        ]
      },
      {
        "avg_logprob": -0.22743201924261647,
        "compression_ratio": 1.7320574162679425,
        "end": 612.82,
        "id": 185,
        "no_speech_prob": 0.005384752061218023,
        "seek": 59310,
        "start": 608.34,
        "temperature": 0,
        "text": " So the string buffer, to convert it back to a regular old go-to-fashion string, we just",
        "tokens": [
          51126,
          407,
          264,
          6798,
          21762,
          11,
          281,
          7620,
          309,
          646,
          281,
          257,
          3890,
          1331,
          352,
          12,
          1353,
          12,
          34636,
          6798,
          11,
          321,
          445,
          51350
        ]
      },
      {
        "avg_logprob": -0.22743201924261647,
        "compression_ratio": 1.7320574162679425,
        "end": 616.3000000000001,
        "id": 186,
        "no_speech_prob": 0.005384752061218023,
        "seek": 59310,
        "start": 612.82,
        "temperature": 0,
        "text": " say the string buffer dot to string and we set that as current and increase the count",
        "tokens": [
          51350,
          584,
          264,
          6798,
          21762,
          5893,
          281,
          6798,
          293,
          321,
          992,
          300,
          382,
          2190,
          293,
          3488,
          264,
          1207,
          51524
        ]
      },
      {
        "avg_logprob": -0.22743201924261647,
        "compression_ratio": 1.7320574162679425,
        "end": 617.5,
        "id": 187,
        "no_speech_prob": 0.005384752061218023,
        "seek": 59310,
        "start": 616.3000000000001,
        "temperature": 0,
        "text": " of generations.",
        "tokens": [
          51524,
          295,
          10593,
          13,
          51584
        ]
      },
      {
        "avg_logprob": -0.2674694241217847,
        "compression_ratio": 1.662037037037037,
        "end": 621.06,
        "id": 188,
        "no_speech_prob": 0.4300243556499481,
        "seek": 61750,
        "start": 617.5,
        "temperature": 0,
        "text": " So if I run this, I'm going to scroll down.",
        "tokens": [
          50364,
          407,
          498,
          286,
          1190,
          341,
          11,
          286,
          478,
          516,
          281,
          11369,
          760,
          13,
          50542
        ]
      },
      {
        "avg_logprob": -0.2674694241217847,
        "compression_ratio": 1.662037037037037,
        "end": 626.54,
        "id": 189,
        "no_speech_prob": 0.4300243556499481,
        "seek": 61750,
        "start": 621.06,
        "temperature": 0,
        "text": " This only does stuff in the console, but we can see here, let me zoom way more in on this",
        "tokens": [
          50542,
          639,
          787,
          775,
          1507,
          294,
          264,
          11076,
          11,
          457,
          321,
          393,
          536,
          510,
          11,
          718,
          385,
          8863,
          636,
          544,
          294,
          322,
          341,
          50816
        ]
      },
      {
        "avg_logprob": -0.2674694241217847,
        "compression_ratio": 1.662037037037037,
        "end": 628.82,
        "id": 190,
        "no_speech_prob": 0.4300243556499481,
        "seek": 61750,
        "start": 626.54,
        "temperature": 0,
        "text": " so you can see it.",
        "tokens": [
          50816,
          370,
          291,
          393,
          536,
          309,
          13,
          50930
        ]
      },
      {
        "avg_logprob": -0.2674694241217847,
        "compression_ratio": 1.662037037037037,
        "end": 633.38,
        "id": 191,
        "no_speech_prob": 0.4300243556499481,
        "seek": 61750,
        "start": 628.82,
        "temperature": 0,
        "text": " You can see here generation 0 is A. I'm going to stand over here and I'm going to click.",
        "tokens": [
          50930,
          509,
          393,
          536,
          510,
          5125,
          1958,
          307,
          316,
          13,
          286,
          478,
          516,
          281,
          1463,
          670,
          510,
          293,
          286,
          478,
          516,
          281,
          2052,
          13,
          51158
        ]
      },
      {
        "avg_logprob": -0.2674694241217847,
        "compression_ratio": 1.662037037037037,
        "end": 635.62,
        "id": 192,
        "no_speech_prob": 0.4300243556499481,
        "seek": 61750,
        "start": 633.38,
        "temperature": 0,
        "text": " Generation 1 is ABA.",
        "tokens": [
          51158,
          23898,
          502,
          307,
          316,
          9295,
          13,
          51270
        ]
      },
      {
        "avg_logprob": -0.2674694241217847,
        "compression_ratio": 1.662037037037037,
        "end": 644.54,
        "id": 193,
        "no_speech_prob": 0.4300243556499481,
        "seek": 61750,
        "start": 635.62,
        "temperature": 0,
        "text": " Then we have that and we can see very quickly, you know, these are massively huge, long strings.",
        "tokens": [
          51270,
          1396,
          321,
          362,
          300,
          293,
          321,
          393,
          536,
          588,
          2661,
          11,
          291,
          458,
          11,
          613,
          366,
          29379,
          2603,
          11,
          938,
          13985,
          13,
          51716
        ]
      },
      {
        "avg_logprob": -0.3008414477836795,
        "compression_ratio": 1.67595818815331,
        "end": 648.4599999999999,
        "id": 194,
        "no_speech_prob": 0.005060096736997366,
        "seek": 64454,
        "start": 644.54,
        "temperature": 0,
        "text": " So the point of this isn't necessarily what we're doing is to use the text, although you",
        "tokens": [
          50364,
          407,
          264,
          935,
          295,
          341,
          1943,
          380,
          4725,
          437,
          321,
          434,
          884,
          307,
          281,
          764,
          264,
          2487,
          11,
          4878,
          291,
          50560
        ]
      },
      {
        "avg_logprob": -0.3008414477836795,
        "compression_ratio": 1.67595818815331,
        "end": 655.24,
        "id": 195,
        "no_speech_prob": 0.005060096736997366,
        "seek": 64454,
        "start": 648.4599999999999,
        "temperature": 0,
        "text": " could really imagine, are you constructing some type of kind of poetic-like text or some",
        "tokens": [
          50560,
          727,
          534,
          3811,
          11,
          366,
          291,
          39969,
          512,
          2010,
          295,
          733,
          295,
          41080,
          12,
          4092,
          2487,
          420,
          512,
          50899
        ]
      },
      {
        "avg_logprob": -0.3008414477836795,
        "compression_ratio": 1.67595818815331,
        "end": 657.5799999999999,
        "id": 196,
        "no_speech_prob": 0.005060096736997366,
        "seek": 64454,
        "start": 655.24,
        "temperature": 0,
        "text": " algorithmic text through some sort of logic?",
        "tokens": [
          50899,
          9284,
          299,
          2487,
          807,
          512,
          1333,
          295,
          9952,
          30,
          51016
        ]
      },
      {
        "avg_logprob": -0.3008414477836795,
        "compression_ratio": 1.67595818815331,
        "end": 664.2199999999999,
        "id": 197,
        "no_speech_prob": 0.005060096736997366,
        "seek": 64454,
        "start": 657.5799999999999,
        "temperature": 0,
        "text": " Are the characters, is the L system a series of words instead of characters?",
        "tokens": [
          51016,
          2014,
          264,
          4342,
          11,
          307,
          264,
          441,
          1185,
          257,
          2638,
          295,
          2283,
          2602,
          295,
          4342,
          30,
          51348
        ]
      },
      {
        "avg_logprob": -0.3008414477836795,
        "compression_ratio": 1.67595818815331,
        "end": 666.02,
        "id": 198,
        "no_speech_prob": 0.005060096736997366,
        "seek": 64454,
        "start": 664.2199999999999,
        "temperature": 0,
        "text": " Could you use iconography in some type of way?",
        "tokens": [
          51348,
          7497,
          291,
          764,
          6528,
          5820,
          294,
          512,
          2010,
          295,
          636,
          30,
          51438
        ]
      },
      {
        "avg_logprob": -0.3008414477836795,
        "compression_ratio": 1.67595818815331,
        "end": 667.8199999999999,
        "id": 199,
        "no_speech_prob": 0.005060096736997366,
        "seek": 64454,
        "start": 666.02,
        "temperature": 0,
        "text": " There's so much you could do with L systems.",
        "tokens": [
          51438,
          821,
          311,
          370,
          709,
          291,
          727,
          360,
          365,
          441,
          3652,
          13,
          51528
        ]
      },
      {
        "avg_logprob": -0.3008414477836795,
        "compression_ratio": 1.67595818815331,
        "end": 670.66,
        "id": 200,
        "no_speech_prob": 0.005060096736997366,
        "seek": 64454,
        "start": 667.8199999999999,
        "temperature": 0,
        "text": " But again, we want these to be instructions for drawing.",
        "tokens": [
          51528,
          583,
          797,
          11,
          321,
          528,
          613,
          281,
          312,
          9415,
          337,
          6316,
          13,
          51670
        ]
      },
      {
        "avg_logprob": -0.3008414477836795,
        "compression_ratio": 1.67595818815331,
        "end": 672.3,
        "id": 201,
        "no_speech_prob": 0.005060096736997366,
        "seek": 64454,
        "start": 670.66,
        "temperature": 0,
        "text": " So I haven't taken this further.",
        "tokens": [
          51670,
          407,
          286,
          2378,
          380,
          2726,
          341,
          3052,
          13,
          51752
        ]
      },
      {
        "avg_logprob": -0.2734950628036108,
        "compression_ratio": 1.8122448979591836,
        "end": 676.42,
        "id": 202,
        "no_speech_prob": 0.6512075662612915,
        "seek": 67230,
        "start": 672.3,
        "temperature": 0,
        "text": " An exercise you might take upon yourself is actually render the Cantor set from these",
        "tokens": [
          50364,
          1107,
          5380,
          291,
          1062,
          747,
          3564,
          1803,
          307,
          767,
          15529,
          264,
          26697,
          284,
          992,
          490,
          613,
          50570
        ]
      },
      {
        "avg_logprob": -0.2734950628036108,
        "compression_ratio": 1.8122448979591836,
        "end": 679.74,
        "id": 203,
        "no_speech_prob": 0.6512075662612915,
        "seek": 67230,
        "start": 676.42,
        "temperature": 0,
        "text": " L systems if the character is A, draw a line.",
        "tokens": [
          50570,
          441,
          3652,
          498,
          264,
          2517,
          307,
          316,
          11,
          2642,
          257,
          1622,
          13,
          50736
        ]
      },
      {
        "avg_logprob": -0.2734950628036108,
        "compression_ratio": 1.8122448979591836,
        "end": 681.9799999999999,
        "id": 204,
        "no_speech_prob": 0.6512075662612915,
        "seek": 67230,
        "start": 679.74,
        "temperature": 0,
        "text": " If it's B, move forward without drawing a line.",
        "tokens": [
          50736,
          759,
          309,
          311,
          363,
          11,
          1286,
          2128,
          1553,
          6316,
          257,
          1622,
          13,
          50848
        ]
      },
      {
        "avg_logprob": -0.2734950628036108,
        "compression_ratio": 1.8122448979591836,
        "end": 684.2199999999999,
        "id": 205,
        "no_speech_prob": 0.6512075662612915,
        "seek": 67230,
        "start": 681.9799999999999,
        "temperature": 0,
        "text": " But we have to ask ourselves a question.",
        "tokens": [
          50848,
          583,
          321,
          362,
          281,
          1029,
          4175,
          257,
          1168,
          13,
          50960
        ]
      },
      {
        "avg_logprob": -0.2734950628036108,
        "compression_ratio": 1.8122448979591836,
        "end": 688.9799999999999,
        "id": 206,
        "no_speech_prob": 0.6512075662612915,
        "seek": 67230,
        "start": 684.2199999999999,
        "temperature": 0,
        "text": " What do we mean by draw a line or move forward without drawing a line?",
        "tokens": [
          50960,
          708,
          360,
          321,
          914,
          538,
          2642,
          257,
          1622,
          420,
          1286,
          2128,
          1553,
          6316,
          257,
          1622,
          30,
          51198
        ]
      },
      {
        "avg_logprob": -0.2734950628036108,
        "compression_ratio": 1.8122448979591836,
        "end": 692.9799999999999,
        "id": 207,
        "no_speech_prob": 0.6512075662612915,
        "seek": 67230,
        "start": 688.9799999999999,
        "temperature": 0,
        "text": " Turns out that a lot of the L systems have this type of language.",
        "tokens": [
          51198,
          29524,
          484,
          300,
          257,
          688,
          295,
          264,
          441,
          3652,
          362,
          341,
          2010,
          295,
          2856,
          13,
          51398
        ]
      },
      {
        "avg_logprob": -0.2734950628036108,
        "compression_ratio": 1.8122448979591836,
        "end": 695.3399999999999,
        "id": 208,
        "no_speech_prob": 0.6512075662612915,
        "seek": 67230,
        "start": 692.9799999999999,
        "temperature": 0,
        "text": " Draw a line, move forward, turn.",
        "tokens": [
          51398,
          20386,
          257,
          1622,
          11,
          1286,
          2128,
          11,
          1261,
          13,
          51516
        ]
      },
      {
        "avg_logprob": -0.2734950628036108,
        "compression_ratio": 1.8122448979591836,
        "end": 698.62,
        "id": 209,
        "no_speech_prob": 0.6512075662612915,
        "seek": 67230,
        "start": 695.3399999999999,
        "temperature": 0,
        "text": " The turtle graphics, the language of turtle graphics.",
        "tokens": [
          51516,
          440,
          22866,
          11837,
          11,
          264,
          2856,
          295,
          22866,
          11837,
          13,
          51680
        ]
      },
      {
        "avg_logprob": -0.25325945218404133,
        "compression_ratio": 1.6446886446886446,
        "end": 703.26,
        "id": 210,
        "no_speech_prob": 0.034097131341695786,
        "seek": 69862,
        "start": 698.62,
        "temperature": 0,
        "text": " So let's take a moment to talk about that and see how that works in an L system.",
        "tokens": [
          50364,
          407,
          718,
          311,
          747,
          257,
          1623,
          281,
          751,
          466,
          300,
          293,
          536,
          577,
          300,
          1985,
          294,
          364,
          441,
          1185,
          13,
          50596
        ]
      },
      {
        "avg_logprob": -0.25325945218404133,
        "compression_ratio": 1.6446886446886446,
        "end": 708.32,
        "id": 211,
        "no_speech_prob": 0.034097131341695786,
        "seek": 69862,
        "start": 703.26,
        "temperature": 0,
        "text": " So OK, so let's not use A and B anymore.",
        "tokens": [
          50596,
          407,
          2264,
          11,
          370,
          718,
          311,
          406,
          764,
          316,
          293,
          363,
          3602,
          13,
          50849
        ]
      },
      {
        "avg_logprob": -0.25325945218404133,
        "compression_ratio": 1.6446886446886446,
        "end": 712.58,
        "id": 212,
        "no_speech_prob": 0.034097131341695786,
        "seek": 69862,
        "start": 708.32,
        "temperature": 0,
        "text": " So let's remember back to a time, which I don't know that I ever actually did this.",
        "tokens": [
          50849,
          407,
          718,
          311,
          1604,
          646,
          281,
          257,
          565,
          11,
          597,
          286,
          500,
          380,
          458,
          300,
          286,
          1562,
          767,
          630,
          341,
          13,
          51062
        ]
      },
      {
        "avg_logprob": -0.25325945218404133,
        "compression_ratio": 1.6446886446886446,
        "end": 714.38,
        "id": 213,
        "no_speech_prob": 0.034097131341695786,
        "seek": 69862,
        "start": 712.58,
        "temperature": 0,
        "text": " I remember learning like basic.",
        "tokens": [
          51062,
          286,
          1604,
          2539,
          411,
          3875,
          13,
          51152
        ]
      },
      {
        "avg_logprob": -0.25325945218404133,
        "compression_ratio": 1.6446886446886446,
        "end": 716.54,
        "id": 214,
        "no_speech_prob": 0.034097131341695786,
        "seek": 69862,
        "start": 714.38,
        "temperature": 0,
        "text": " I did a lot of basic programming when I was a kid.",
        "tokens": [
          51152,
          286,
          630,
          257,
          688,
          295,
          3875,
          9410,
          562,
          286,
          390,
          257,
          1636,
          13,
          51260
        ]
      },
      {
        "avg_logprob": -0.25325945218404133,
        "compression_ratio": 1.6446886446886446,
        "end": 721.62,
        "id": 215,
        "no_speech_prob": 0.034097131341695786,
        "seek": 69862,
        "start": 716.54,
        "temperature": 0,
        "text": " But you or somebody in the world definitely used the logo programming language and moved",
        "tokens": [
          51260,
          583,
          291,
          420,
          2618,
          294,
          264,
          1002,
          2138,
          1143,
          264,
          9699,
          9410,
          2856,
          293,
          4259,
          51514
        ]
      },
      {
        "avg_logprob": -0.25325945218404133,
        "compression_ratio": 1.6446886446886446,
        "end": 722.98,
        "id": 216,
        "no_speech_prob": 0.034097131341695786,
        "seek": 69862,
        "start": 721.62,
        "temperature": 0,
        "text": " turtles around the screen.",
        "tokens": [
          51514,
          32422,
          926,
          264,
          2568,
          13,
          51582
        ]
      },
      {
        "avg_logprob": -0.25325945218404133,
        "compression_ratio": 1.6446886446886446,
        "end": 726.58,
        "id": 217,
        "no_speech_prob": 0.034097131341695786,
        "seek": 69862,
        "start": 722.98,
        "temperature": 0,
        "text": " What were some things that turtles could do?",
        "tokens": [
          51582,
          708,
          645,
          512,
          721,
          300,
          32422,
          727,
          360,
          30,
          51762
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 729.62,
        "id": 218,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 726.58,
        "temperature": 0,
        "text": " Turtles could draw a line.",
        "tokens": [
          50364,
          5712,
          23995,
          727,
          2642,
          257,
          1622,
          13,
          50516
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 733.5400000000001,
        "id": 219,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 729.62,
        "temperature": 0,
        "text": " So if this is the window, what that means is here's my, I can't draw a turtle, here's",
        "tokens": [
          50516,
          407,
          498,
          341,
          307,
          264,
          4910,
          11,
          437,
          300,
          1355,
          307,
          510,
          311,
          452,
          11,
          286,
          393,
          380,
          2642,
          257,
          22866,
          11,
          510,
          311,
          50712
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 734.96,
        "id": 220,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 733.5400000000001,
        "temperature": 0,
        "text": " my turtle.",
        "tokens": [
          50712,
          452,
          22866,
          13,
          50783
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 738.26,
        "id": 221,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 734.96,
        "temperature": 0,
        "text": " It might move forward and draw this line while it's moving forward.",
        "tokens": [
          50783,
          467,
          1062,
          1286,
          2128,
          293,
          2642,
          341,
          1622,
          1339,
          309,
          311,
          2684,
          2128,
          13,
          50948
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 740.48,
        "id": 222,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 738.26,
        "temperature": 0,
        "text": " And now it's here.",
        "tokens": [
          50948,
          400,
          586,
          309,
          311,
          510,
          13,
          51059
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 746.94,
        "id": 223,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 740.48,
        "temperature": 0,
        "text": " Turtles could also just move forward, which means they move forward but don't actually",
        "tokens": [
          51059,
          5712,
          23995,
          727,
          611,
          445,
          1286,
          2128,
          11,
          597,
          1355,
          436,
          1286,
          2128,
          457,
          500,
          380,
          767,
          51382
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 748.1,
        "id": 224,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 746.94,
        "temperature": 0,
        "text": " draw a line.",
        "tokens": [
          51382,
          2642,
          257,
          1622,
          13,
          51440
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 750.5,
        "id": 225,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 748.1,
        "temperature": 0,
        "text": " So you can imagine that as just moving forward.",
        "tokens": [
          51440,
          407,
          291,
          393,
          3811,
          300,
          382,
          445,
          2684,
          2128,
          13,
          51560
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 751.86,
        "id": 226,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 750.5,
        "temperature": 0,
        "text": " And now the turtle's here.",
        "tokens": [
          51560,
          400,
          586,
          264,
          22866,
          311,
          510,
          13,
          51628
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 754.22,
        "id": 227,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 751.86,
        "temperature": 0,
        "text": " So the line was drawn here.",
        "tokens": [
          51628,
          407,
          264,
          1622,
          390,
          10117,
          510,
          13,
          51746
        ]
      },
      {
        "avg_logprob": -0.26045887864480805,
        "compression_ratio": 1.9770642201834863,
        "end": 755.22,
        "id": 228,
        "no_speech_prob": 0.09267771989107132,
        "seek": 72658,
        "start": 754.22,
        "temperature": 0,
        "text": " Now move forward.",
        "tokens": [
          51746,
          823,
          1286,
          2128,
          13,
          51796
        ]
      },
      {
        "avg_logprob": -0.2745507495238049,
        "compression_ratio": 1.8047619047619048,
        "end": 762.5400000000001,
        "id": 229,
        "no_speech_prob": 0.28455039858818054,
        "seek": 75522,
        "start": 755.22,
        "temperature": 0,
        "text": " So one of the things they can do is they can turn right or they could turn left.",
        "tokens": [
          50364,
          407,
          472,
          295,
          264,
          721,
          436,
          393,
          360,
          307,
          436,
          393,
          1261,
          558,
          420,
          436,
          727,
          1261,
          1411,
          13,
          50730
        ]
      },
      {
        "avg_logprob": -0.2745507495238049,
        "compression_ratio": 1.8047619047619048,
        "end": 766.22,
        "id": 230,
        "no_speech_prob": 0.28455039858818054,
        "seek": 75522,
        "start": 762.5400000000001,
        "temperature": 0,
        "text": " So turning right would mean go this way, turn left would mean go this way.",
        "tokens": [
          50730,
          407,
          6246,
          558,
          576,
          914,
          352,
          341,
          636,
          11,
          1261,
          1411,
          576,
          914,
          352,
          341,
          636,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.2745507495238049,
        "compression_ratio": 1.8047619047619048,
        "end": 770.1,
        "id": 231,
        "no_speech_prob": 0.28455039858818054,
        "seek": 75522,
        "start": 766.22,
        "temperature": 0,
        "text": " That turn right could be at an angle, a 90 degree angle, 45 degree angle, et cetera.",
        "tokens": [
          50914,
          663,
          1261,
          558,
          727,
          312,
          412,
          364,
          5802,
          11,
          257,
          4289,
          4314,
          5802,
          11,
          6905,
          4314,
          5802,
          11,
          1030,
          11458,
          13,
          51108
        ]
      },
      {
        "avg_logprob": -0.2745507495238049,
        "compression_ratio": 1.8047619047619048,
        "end": 774.34,
        "id": 232,
        "no_speech_prob": 0.28455039858818054,
        "seek": 75522,
        "start": 770.1,
        "temperature": 0,
        "text": " So these are the basic elements of turtle graphics.",
        "tokens": [
          51108,
          407,
          613,
          366,
          264,
          3875,
          4959,
          295,
          22866,
          11837,
          13,
          51320
        ]
      },
      {
        "avg_logprob": -0.2745507495238049,
        "compression_ratio": 1.8047619047619048,
        "end": 780.14,
        "id": 233,
        "no_speech_prob": 0.28455039858818054,
        "seek": 75522,
        "start": 774.34,
        "temperature": 0,
        "text": " An L system could have as its alphabet an F, which means draw a line, a G, which means",
        "tokens": [
          51320,
          1107,
          441,
          1185,
          727,
          362,
          382,
          1080,
          23339,
          364,
          479,
          11,
          597,
          1355,
          2642,
          257,
          1622,
          11,
          257,
          460,
          11,
          597,
          1355,
          51610
        ]
      },
      {
        "avg_logprob": -0.22539450327555338,
        "compression_ratio": 1.6476190476190475,
        "end": 785.86,
        "id": 234,
        "no_speech_prob": 0.1581653654575348,
        "seek": 78014,
        "start": 780.14,
        "temperature": 0,
        "text": " move forward without drawing a line, a plus, which means turn right, a minus, which means",
        "tokens": [
          50364,
          1286,
          2128,
          1553,
          6316,
          257,
          1622,
          11,
          257,
          1804,
          11,
          597,
          1355,
          1261,
          558,
          11,
          257,
          3175,
          11,
          597,
          1355,
          50650
        ]
      },
      {
        "avg_logprob": -0.22539450327555338,
        "compression_ratio": 1.6476190476190475,
        "end": 787.14,
        "id": 235,
        "no_speech_prob": 0.1581653654575348,
        "seek": 78014,
        "start": 785.86,
        "temperature": 0,
        "text": " turn left.",
        "tokens": [
          50650,
          1261,
          1411,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.22539450327555338,
        "compression_ratio": 1.6476190476190475,
        "end": 790.6999999999999,
        "id": 236,
        "no_speech_prob": 0.1581653654575348,
        "seek": 78014,
        "start": 787.14,
        "temperature": 0,
        "text": " We could use these as the characters in our L system.",
        "tokens": [
          50714,
          492,
          727,
          764,
          613,
          382,
          264,
          4342,
          294,
          527,
          441,
          1185,
          13,
          50892
        ]
      },
      {
        "avg_logprob": -0.22539450327555338,
        "compression_ratio": 1.6476190476190475,
        "end": 795.42,
        "id": 237,
        "no_speech_prob": 0.1581653654575348,
        "seek": 78014,
        "start": 790.6999999999999,
        "temperature": 0,
        "text": " And we could create rules that generate various patterns that a turtle could draw that are",
        "tokens": [
          50892,
          400,
          321,
          727,
          1884,
          4474,
          300,
          8460,
          3683,
          8294,
          300,
          257,
          22866,
          727,
          2642,
          300,
          366,
          51128
        ]
      },
      {
        "avg_logprob": -0.22539450327555338,
        "compression_ratio": 1.6476190476190475,
        "end": 796.42,
        "id": 238,
        "no_speech_prob": 0.1581653654575348,
        "seek": 78014,
        "start": 795.42,
        "temperature": 0,
        "text": " fractal.",
        "tokens": [
          51128,
          17948,
          304,
          13,
          51178
        ]
      },
      {
        "avg_logprob": -0.22539450327555338,
        "compression_ratio": 1.6476190476190475,
        "end": 804.78,
        "id": 239,
        "no_speech_prob": 0.1581653654575348,
        "seek": 78014,
        "start": 796.42,
        "temperature": 0,
        "text": " But this is like a basic turtle graphics engine, but it would be nice to be able to, if you",
        "tokens": [
          51178,
          583,
          341,
          307,
          411,
          257,
          3875,
          22866,
          11837,
          2848,
          11,
          457,
          309,
          576,
          312,
          1481,
          281,
          312,
          1075,
          281,
          11,
          498,
          291,
          51596
        ]
      },
      {
        "avg_logprob": -0.1948712494996217,
        "compression_ratio": 1.7551867219917012,
        "end": 815.3399999999999,
        "id": 240,
        "no_speech_prob": 0.19679856300354004,
        "seek": 80478,
        "start": 804.78,
        "temperature": 0,
        "text": " imagine for a second, a turtle taking this path, to be able to maybe remember various",
        "tokens": [
          50364,
          3811,
          337,
          257,
          1150,
          11,
          257,
          22866,
          1940,
          341,
          3100,
          11,
          281,
          312,
          1075,
          281,
          1310,
          1604,
          3683,
          50892
        ]
      },
      {
        "avg_logprob": -0.1948712494996217,
        "compression_ratio": 1.7551867219917012,
        "end": 817.3399999999999,
        "id": 241,
        "no_speech_prob": 0.19679856300354004,
        "seek": 80478,
        "start": 815.3399999999999,
        "temperature": 0,
        "text": " points along the path.",
        "tokens": [
          50892,
          2793,
          2051,
          264,
          3100,
          13,
          50992
        ]
      },
      {
        "avg_logprob": -0.1948712494996217,
        "compression_ratio": 1.7551867219917012,
        "end": 822.6999999999999,
        "id": 242,
        "no_speech_prob": 0.19679856300354004,
        "seek": 80478,
        "start": 817.3399999999999,
        "temperature": 0,
        "text": " And if it's over here, it could then pop back to here and start going in this direction.",
        "tokens": [
          50992,
          400,
          498,
          309,
          311,
          670,
          510,
          11,
          309,
          727,
          550,
          1665,
          646,
          281,
          510,
          293,
          722,
          516,
          294,
          341,
          3513,
          13,
          51260
        ]
      },
      {
        "avg_logprob": -0.1948712494996217,
        "compression_ratio": 1.7551867219917012,
        "end": 826.42,
        "id": 243,
        "no_speech_prob": 0.19679856300354004,
        "seek": 80478,
        "start": 822.6999999999999,
        "temperature": 0,
        "text": " So a turtle as it's going could save where it was, draw a little bit further, then come",
        "tokens": [
          51260,
          407,
          257,
          22866,
          382,
          309,
          311,
          516,
          727,
          3155,
          689,
          309,
          390,
          11,
          2642,
          257,
          707,
          857,
          3052,
          11,
          550,
          808,
          51446
        ]
      },
      {
        "avg_logprob": -0.1948712494996217,
        "compression_ratio": 1.7551867219917012,
        "end": 828.8199999999999,
        "id": 244,
        "no_speech_prob": 0.19679856300354004,
        "seek": 80478,
        "start": 826.42,
        "temperature": 0,
        "text": " back and draw a little bit further the other way.",
        "tokens": [
          51446,
          646,
          293,
          2642,
          257,
          707,
          857,
          3052,
          264,
          661,
          636,
          13,
          51566
        ]
      },
      {
        "avg_logprob": -0.1948712494996217,
        "compression_ratio": 1.7551867219917012,
        "end": 832.8199999999999,
        "id": 245,
        "no_speech_prob": 0.19679856300354004,
        "seek": 80478,
        "start": 828.8199999999999,
        "temperature": 0,
        "text": " After all, if we're going to draw some type of fractal pattern, we might need to branch",
        "tokens": [
          51566,
          2381,
          439,
          11,
          498,
          321,
          434,
          516,
          281,
          2642,
          512,
          2010,
          295,
          17948,
          304,
          5102,
          11,
          321,
          1062,
          643,
          281,
          9819,
          51766
        ]
      },
      {
        "avg_logprob": -0.24712866828555152,
        "compression_ratio": 1.6328502415458936,
        "end": 834.98,
        "id": 246,
        "no_speech_prob": 0.31402072310447693,
        "seek": 83282,
        "start": 832.82,
        "temperature": 0,
        "text": " off one way, come back, branch the other way.",
        "tokens": [
          50364,
          766,
          472,
          636,
          11,
          808,
          646,
          11,
          9819,
          264,
          661,
          636,
          13,
          50472
        ]
      },
      {
        "avg_logprob": -0.24712866828555152,
        "compression_ratio": 1.6328502415458936,
        "end": 840.34,
        "id": 247,
        "no_speech_prob": 0.31402072310447693,
        "seek": 83282,
        "start": 834.98,
        "temperature": 0,
        "text": " This is exactly what we did with our tree example previously.",
        "tokens": [
          50472,
          639,
          307,
          2293,
          437,
          321,
          630,
          365,
          527,
          4230,
          1365,
          8046,
          13,
          50740
        ]
      },
      {
        "avg_logprob": -0.24712866828555152,
        "compression_ratio": 1.6328502415458936,
        "end": 847.0600000000001,
        "id": 248,
        "no_speech_prob": 0.31402072310447693,
        "seek": 83282,
        "start": 840.34,
        "temperature": 0,
        "text": " So we might like to introduce this character, which means push matrix.",
        "tokens": [
          50740,
          407,
          321,
          1062,
          411,
          281,
          5366,
          341,
          2517,
          11,
          597,
          1355,
          2944,
          8141,
          13,
          51076
        ]
      },
      {
        "avg_logprob": -0.24712866828555152,
        "compression_ratio": 1.6328502415458936,
        "end": 852.82,
        "id": 249,
        "no_speech_prob": 0.31402072310447693,
        "seek": 83282,
        "start": 847.0600000000001,
        "temperature": 0,
        "text": " Or really, I kind of like changed the language here, which means save where you are, save",
        "tokens": [
          51076,
          1610,
          534,
          11,
          286,
          733,
          295,
          411,
          3105,
          264,
          2856,
          510,
          11,
          597,
          1355,
          3155,
          689,
          291,
          366,
          11,
          3155,
          51364
        ]
      },
      {
        "avg_logprob": -0.24712866828555152,
        "compression_ratio": 1.6328502415458936,
        "end": 858.58,
        "id": 250,
        "no_speech_prob": 0.31402072310447693,
        "seek": 83282,
        "start": 852.82,
        "temperature": 0,
        "text": " state, which means where you are and what direction are you pointing.",
        "tokens": [
          51364,
          1785,
          11,
          597,
          1355,
          689,
          291,
          366,
          293,
          437,
          3513,
          366,
          291,
          12166,
          13,
          51652
        ]
      },
      {
        "avg_logprob": -0.23666587742892178,
        "compression_ratio": 1.7355769230769231,
        "end": 865.3000000000001,
        "id": 251,
        "no_speech_prob": 0.15002058446407318,
        "seek": 85858,
        "start": 858.58,
        "temperature": 0,
        "text": " And this character could mean restore state.",
        "tokens": [
          50364,
          400,
          341,
          2517,
          727,
          914,
          15227,
          1785,
          13,
          50700
        ]
      },
      {
        "avg_logprob": -0.23666587742892178,
        "compression_ratio": 1.7355769230769231,
        "end": 871.4200000000001,
        "id": 252,
        "no_speech_prob": 0.15002058446407318,
        "seek": 85858,
        "start": 865.3000000000001,
        "temperature": 0,
        "text": " So now, if these are the characters in our L system, if these are the members of the",
        "tokens": [
          50700,
          407,
          586,
          11,
          498,
          613,
          366,
          264,
          4342,
          294,
          527,
          441,
          1185,
          11,
          498,
          613,
          366,
          264,
          2679,
          295,
          264,
          51006
        ]
      },
      {
        "avg_logprob": -0.23666587742892178,
        "compression_ratio": 1.7355769230769231,
        "end": 877.4200000000001,
        "id": 253,
        "no_speech_prob": 0.15002058446407318,
        "seek": 85858,
        "start": 871.4200000000001,
        "temperature": 0,
        "text": " alphabet of our L system, we need to write a turtle object that can parse a string and",
        "tokens": [
          51006,
          23339,
          295,
          527,
          441,
          1185,
          11,
          321,
          643,
          281,
          2464,
          257,
          22866,
          2657,
          300,
          393,
          48377,
          257,
          6798,
          293,
          51306
        ]
      },
      {
        "avg_logprob": -0.23666587742892178,
        "compression_ratio": 1.7355769230769231,
        "end": 881.1800000000001,
        "id": 254,
        "no_speech_prob": 0.15002058446407318,
        "seek": 85858,
        "start": 877.4200000000001,
        "temperature": 0,
        "text": " call the right processing functionality to do each one of these things.",
        "tokens": [
          51306,
          818,
          264,
          558,
          9007,
          14980,
          281,
          360,
          1184,
          472,
          295,
          613,
          721,
          13,
          51494
        ]
      },
      {
        "avg_logprob": -0.23666587742892178,
        "compression_ratio": 1.7355769230769231,
        "end": 884.94,
        "id": 255,
        "no_speech_prob": 0.15002058446407318,
        "seek": 85858,
        "start": 881.1800000000001,
        "temperature": 0,
        "text": " This would call line and translate.",
        "tokens": [
          51494,
          639,
          576,
          818,
          1622,
          293,
          13799,
          13,
          51682
        ]
      },
      {
        "avg_logprob": -0.23666587742892178,
        "compression_ratio": 1.7355769230769231,
        "end": 886.58,
        "id": 256,
        "no_speech_prob": 0.15002058446407318,
        "seek": 85858,
        "start": 884.94,
        "temperature": 0,
        "text": " This would also just call translate.",
        "tokens": [
          51682,
          639,
          576,
          611,
          445,
          818,
          13799,
          13,
          51764
        ]
      },
      {
        "avg_logprob": -0.22744500376012203,
        "compression_ratio": 1.69140625,
        "end": 889.7800000000001,
        "id": 257,
        "no_speech_prob": 0.204306498169899,
        "seek": 88658,
        "start": 886.58,
        "temperature": 0,
        "text": " This would call rotate, rotate, push matrix, pop matrix.",
        "tokens": [
          50364,
          639,
          576,
          818,
          13121,
          11,
          13121,
          11,
          2944,
          8141,
          11,
          1665,
          8141,
          13,
          50524
        ]
      },
      {
        "avg_logprob": -0.22744500376012203,
        "compression_ratio": 1.69140625,
        "end": 892.3000000000001,
        "id": 258,
        "no_speech_prob": 0.204306498169899,
        "seek": 88658,
        "start": 889.7800000000001,
        "temperature": 0,
        "text": " Let's take a look at that.",
        "tokens": [
          50524,
          961,
          311,
          747,
          257,
          574,
          412,
          300,
          13,
          50650
        ]
      },
      {
        "avg_logprob": -0.22744500376012203,
        "compression_ratio": 1.69140625,
        "end": 893.58,
        "id": 259,
        "no_speech_prob": 0.204306498169899,
        "seek": 88658,
        "start": 892.3000000000001,
        "temperature": 0,
        "text": " So I'm back over here.",
        "tokens": [
          50650,
          407,
          286,
          478,
          646,
          670,
          510,
          13,
          50714
        ]
      },
      {
        "avg_logprob": -0.22744500376012203,
        "compression_ratio": 1.69140625,
        "end": 896.86,
        "id": 260,
        "no_speech_prob": 0.204306498169899,
        "seek": 88658,
        "start": 893.58,
        "temperature": 0,
        "text": " And now, this, by the way, was example 8.8.",
        "tokens": [
          50714,
          400,
          586,
          11,
          341,
          11,
          538,
          264,
          636,
          11,
          390,
          1365,
          1649,
          13,
          23,
          13,
          50878
        ]
      },
      {
        "avg_logprob": -0.22744500376012203,
        "compression_ratio": 1.69140625,
        "end": 900.38,
        "id": 261,
        "no_speech_prob": 0.204306498169899,
        "seek": 88658,
        "start": 896.86,
        "temperature": 0,
        "text": " And now I'm going to example 8.9, which is already open.",
        "tokens": [
          50878,
          400,
          586,
          286,
          478,
          516,
          281,
          1365,
          1649,
          13,
          24,
          11,
          597,
          307,
          1217,
          1269,
          13,
          51054
        ]
      },
      {
        "avg_logprob": -0.22744500376012203,
        "compression_ratio": 1.69140625,
        "end": 902.74,
        "id": 262,
        "no_speech_prob": 0.204306498169899,
        "seek": 88658,
        "start": 900.38,
        "temperature": 0,
        "text": " And I'm just going to go to the turtle class.",
        "tokens": [
          51054,
          400,
          286,
          478,
          445,
          516,
          281,
          352,
          281,
          264,
          22866,
          1508,
          13,
          51172
        ]
      },
      {
        "avg_logprob": -0.22744500376012203,
        "compression_ratio": 1.69140625,
        "end": 906.94,
        "id": 263,
        "no_speech_prob": 0.204306498169899,
        "seek": 88658,
        "start": 902.74,
        "temperature": 0,
        "text": " And what I want to look at is this set of code.",
        "tokens": [
          51172,
          400,
          437,
          286,
          528,
          281,
          574,
          412,
          307,
          341,
          992,
          295,
          3089,
          13,
          51382
        ]
      },
      {
        "avg_logprob": -0.22744500376012203,
        "compression_ratio": 1.69140625,
        "end": 910.14,
        "id": 264,
        "no_speech_prob": 0.204306498169899,
        "seek": 88658,
        "start": 906.94,
        "temperature": 0,
        "text": " There is a string called to do dot length.",
        "tokens": [
          51382,
          821,
          307,
          257,
          6798,
          1219,
          281,
          360,
          5893,
          4641,
          13,
          51542
        ]
      },
      {
        "avg_logprob": -0.22744500376012203,
        "compression_ratio": 1.69140625,
        "end": 912.4200000000001,
        "id": 265,
        "no_speech_prob": 0.204306498169899,
        "seek": 88658,
        "start": 910.14,
        "temperature": 0,
        "text": " Let's look at every character in the string.",
        "tokens": [
          51542,
          961,
          311,
          574,
          412,
          633,
          2517,
          294,
          264,
          6798,
          13,
          51656
        ]
      },
      {
        "avg_logprob": -0.22744500376012203,
        "compression_ratio": 1.69140625,
        "end": 914.62,
        "id": 266,
        "no_speech_prob": 0.204306498169899,
        "seek": 88658,
        "start": 912.4200000000001,
        "temperature": 0,
        "text": " And I guess I didn't do this correctly now.",
        "tokens": [
          51656,
          400,
          286,
          2041,
          286,
          994,
          380,
          360,
          341,
          8944,
          586,
          13,
          51766
        ]
      },
      {
        "avg_logprob": -0.2845309207313939,
        "compression_ratio": 1.5327102803738317,
        "end": 916.7,
        "id": 267,
        "no_speech_prob": 0.5349565148353577,
        "seek": 91462,
        "start": 914.62,
        "temperature": 0,
        "text": " I'm going to have to fix this example.",
        "tokens": [
          50364,
          286,
          478,
          516,
          281,
          362,
          281,
          3191,
          341,
          1365,
          13,
          50468
        ]
      },
      {
        "avg_logprob": -0.2845309207313939,
        "compression_ratio": 1.5327102803738317,
        "end": 921.38,
        "id": 268,
        "no_speech_prob": 0.5349565148353577,
        "seek": 91462,
        "start": 916.7,
        "temperature": 0,
        "text": " If that character is an F, in my scenario, if it's an F or a G, it's drawing a line and",
        "tokens": [
          50468,
          759,
          300,
          2517,
          307,
          364,
          479,
          11,
          294,
          452,
          9005,
          11,
          498,
          309,
          311,
          364,
          479,
          420,
          257,
          460,
          11,
          309,
          311,
          6316,
          257,
          1622,
          293,
          50702
        ]
      },
      {
        "avg_logprob": -0.2845309207313939,
        "compression_ratio": 1.5327102803738317,
        "end": 922.54,
        "id": 269,
        "no_speech_prob": 0.5349565148353577,
        "seek": 91462,
        "start": 921.38,
        "temperature": 0,
        "text": " moving forward.",
        "tokens": [
          50702,
          2684,
          2128,
          13,
          50760
        ]
      },
      {
        "avg_logprob": -0.2845309207313939,
        "compression_ratio": 1.5327102803738317,
        "end": 927.46,
        "id": 270,
        "no_speech_prob": 0.5349565148353577,
        "seek": 91462,
        "start": 922.54,
        "temperature": 0,
        "text": " So technically speaking, if I want it to be accurate according to what I just did on the",
        "tokens": [
          50760,
          407,
          12120,
          4124,
          11,
          498,
          286,
          528,
          309,
          281,
          312,
          8559,
          4650,
          281,
          437,
          286,
          445,
          630,
          322,
          264,
          51006
        ]
      },
      {
        "avg_logprob": -0.2845309207313939,
        "compression_ratio": 1.5327102803738317,
        "end": 937.14,
        "id": 271,
        "no_speech_prob": 0.5349565148353577,
        "seek": 91462,
        "start": 927.46,
        "temperature": 0,
        "text": " board over there, else if C equals G, move without drawing the line.",
        "tokens": [
          51006,
          3150,
          670,
          456,
          11,
          1646,
          498,
          383,
          6915,
          460,
          11,
          1286,
          1553,
          6316,
          264,
          1622,
          13,
          51490
        ]
      },
      {
        "avg_logprob": -0.2845309207313939,
        "compression_ratio": 1.5327102803738317,
        "end": 940.78,
        "id": 272,
        "no_speech_prob": 0.5349565148353577,
        "seek": 91462,
        "start": 937.14,
        "temperature": 0,
        "text": " And that needs to go there.",
        "tokens": [
          51490,
          400,
          300,
          2203,
          281,
          352,
          456,
          13,
          51672
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 944.98,
        "id": 273,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 940.78,
        "temperature": 0,
        "text": " So F means draw a line and move to the end of the line.",
        "tokens": [
          50364,
          407,
          479,
          1355,
          2642,
          257,
          1622,
          293,
          1286,
          281,
          264,
          917,
          295,
          264,
          1622,
          13,
          50574
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 947.02,
        "id": 274,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 944.98,
        "temperature": 0,
        "text": " G means just move that length.",
        "tokens": [
          50574,
          460,
          1355,
          445,
          1286,
          300,
          4641,
          13,
          50676
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 948.62,
        "id": 275,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 947.02,
        "temperature": 0,
        "text": " C is rotate minus.",
        "tokens": [
          50676,
          383,
          307,
          13121,
          3175,
          13,
          50756
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 950.78,
        "id": 276,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 948.62,
        "temperature": 0,
        "text": " Sorry, plus is rotate.",
        "tokens": [
          50756,
          4919,
          11,
          1804,
          307,
          13121,
          13,
          50864
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 952.54,
        "id": 277,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 950.78,
        "temperature": 0,
        "text": " Minus is rotate the other direction.",
        "tokens": [
          50864,
          2829,
          301,
          307,
          13121,
          264,
          661,
          3513,
          13,
          50952
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 956.88,
        "id": 278,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 952.54,
        "temperature": 0,
        "text": " And open square bracket, push matrix, close square bracket is pop matrix.",
        "tokens": [
          50952,
          400,
          1269,
          3732,
          16904,
          11,
          2944,
          8141,
          11,
          1998,
          3732,
          16904,
          307,
          1665,
          8141,
          13,
          51169
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 957.88,
        "id": 279,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 956.88,
        "temperature": 0,
        "text": " So you can see this.",
        "tokens": [
          51169,
          407,
          291,
          393,
          536,
          341,
          13,
          51219
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 961.3399999999999,
        "id": 280,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 957.88,
        "temperature": 0,
        "text": " And you could probably make the argument that this should be a switch statement, which is",
        "tokens": [
          51219,
          400,
          291,
          727,
          1391,
          652,
          264,
          6770,
          300,
          341,
          820,
          312,
          257,
          3679,
          5629,
          11,
          597,
          307,
          51392
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 964.22,
        "id": 281,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 961.3399999999999,
        "temperature": 0,
        "text": " another type of syntax for a conditional statement.",
        "tokens": [
          51392,
          1071,
          2010,
          295,
          28431,
          337,
          257,
          27708,
          5629,
          13,
          51536
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 968.22,
        "id": 282,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 964.22,
        "temperature": 0,
        "text": " But just to kind of keep these examples very basic, I'm just using if else if.",
        "tokens": [
          51536,
          583,
          445,
          281,
          733,
          295,
          1066,
          613,
          5110,
          588,
          3875,
          11,
          286,
          478,
          445,
          1228,
          498,
          1646,
          498,
          13,
          51736
        ]
      },
      {
        "avg_logprob": -0.22547489962131856,
        "compression_ratio": 1.7389830508474575,
        "end": 970.06,
        "id": 283,
        "no_speech_prob": 0.19191868603229523,
        "seek": 94078,
        "start": 968.22,
        "temperature": 0,
        "text": " So this is parsing that string.",
        "tokens": [
          51736,
          407,
          341,
          307,
          21156,
          278,
          300,
          6798,
          13,
          51828
        ]
      },
      {
        "avg_logprob": -0.2567617492675781,
        "compression_ratio": 1.7737226277372262,
        "end": 974.26,
        "id": 284,
        "no_speech_prob": 0.47260022163391113,
        "seek": 97006,
        "start": 970.06,
        "temperature": 0,
        "text": " I'm just taking a look at all of the characters and calling the correct piece of drawing functionality.",
        "tokens": [
          50364,
          286,
          478,
          445,
          1940,
          257,
          574,
          412,
          439,
          295,
          264,
          4342,
          293,
          5141,
          264,
          3006,
          2522,
          295,
          6316,
          14980,
          13,
          50574
        ]
      },
      {
        "avg_logprob": -0.2567617492675781,
        "compression_ratio": 1.7737226277372262,
        "end": 980.18,
        "id": 285,
        "no_speech_prob": 0.47260022163391113,
        "seek": 97006,
        "start": 974.26,
        "temperature": 0,
        "text": " So this example is essentially the previous example, which makes those else system strings,",
        "tokens": [
          50574,
          407,
          341,
          1365,
          307,
          4476,
          264,
          3894,
          1365,
          11,
          597,
          1669,
          729,
          1646,
          1185,
          13985,
          11,
          50870
        ]
      },
      {
        "avg_logprob": -0.2567617492675781,
        "compression_ratio": 1.7737226277372262,
        "end": 981.6999999999999,
        "id": 286,
        "no_speech_prob": 0.47260022163391113,
        "seek": 97006,
        "start": 980.18,
        "temperature": 0,
        "text": " but it adds on one layer.",
        "tokens": [
          50870,
          457,
          309,
          10860,
          322,
          472,
          4583,
          13,
          50946
        ]
      },
      {
        "avg_logprob": -0.2567617492675781,
        "compression_ratio": 1.7737226277372262,
        "end": 984.78,
        "id": 287,
        "no_speech_prob": 0.47260022163391113,
        "seek": 97006,
        "start": 981.6999999999999,
        "temperature": 0,
        "text": " The turtle can then read that string and draw according to it.",
        "tokens": [
          50946,
          440,
          22866,
          393,
          550,
          1401,
          300,
          6798,
          293,
          2642,
          4650,
          281,
          309,
          13,
          51100
        ]
      },
      {
        "avg_logprob": -0.2567617492675781,
        "compression_ratio": 1.7737226277372262,
        "end": 987.5799999999999,
        "id": 288,
        "no_speech_prob": 0.47260022163391113,
        "seek": 97006,
        "start": 984.78,
        "temperature": 0,
        "text": " So what is an else system that we might use?",
        "tokens": [
          51100,
          407,
          437,
          307,
          364,
          1646,
          1185,
          300,
          321,
          1062,
          764,
          30,
          51240
        ]
      },
      {
        "avg_logprob": -0.2567617492675781,
        "compression_ratio": 1.7737226277372262,
        "end": 991.76,
        "id": 289,
        "no_speech_prob": 0.47260022163391113,
        "seek": 97006,
        "start": 987.5799999999999,
        "temperature": 0,
        "text": " There's a lot of stuff in the comments here, which I'm going to remove.",
        "tokens": [
          51240,
          821,
          311,
          257,
          688,
          295,
          1507,
          294,
          264,
          3053,
          510,
          11,
          597,
          286,
          478,
          516,
          281,
          4159,
          13,
          51449
        ]
      },
      {
        "avg_logprob": -0.2567617492675781,
        "compression_ratio": 1.7737226277372262,
        "end": 993.4599999999999,
        "id": 290,
        "no_speech_prob": 0.47260022163391113,
        "seek": 97006,
        "start": 991.76,
        "temperature": 0,
        "text": " Let's look at this.",
        "tokens": [
          51449,
          961,
          311,
          574,
          412,
          341,
          13,
          51534
        ]
      },
      {
        "avg_logprob": -0.2567617492675781,
        "compression_ratio": 1.7737226277372262,
        "end": 999.0999999999999,
        "id": 291,
        "no_speech_prob": 0.47260022163391113,
        "seek": 97006,
        "start": 993.4599999999999,
        "temperature": 0,
        "text": " So this, by the way, is how this example defines an else system.",
        "tokens": [
          51534,
          407,
          341,
          11,
          538,
          264,
          636,
          11,
          307,
          577,
          341,
          1365,
          23122,
          364,
          1646,
          1185,
          13,
          51816
        ]
      },
      {
        "avg_logprob": -0.30646623383968247,
        "compression_ratio": 1.6626984126984128,
        "end": 1002.5400000000001,
        "id": 292,
        "no_speech_prob": 0.18008558452129364,
        "seek": 99910,
        "start": 999.14,
        "temperature": 0,
        "text": " We have a rule object, and we have an array of rules.",
        "tokens": [
          50366,
          492,
          362,
          257,
          4978,
          2657,
          11,
          293,
          321,
          362,
          364,
          10225,
          295,
          4474,
          13,
          50536
        ]
      },
      {
        "avg_logprob": -0.30646623383968247,
        "compression_ratio": 1.6626984126984128,
        "end": 1007.5600000000001,
        "id": 293,
        "no_speech_prob": 0.18008558452129364,
        "seek": 99910,
        "start": 1002.5400000000001,
        "temperature": 0,
        "text": " And we have, you can see this rule takes an f and turns it into this crazy string.",
        "tokens": [
          50536,
          400,
          321,
          362,
          11,
          291,
          393,
          536,
          341,
          4978,
          2516,
          364,
          283,
          293,
          4523,
          309,
          666,
          341,
          3219,
          6798,
          13,
          50787
        ]
      },
      {
        "avg_logprob": -0.30646623383968247,
        "compression_ratio": 1.6626984126984128,
        "end": 1009.86,
        "id": 294,
        "no_speech_prob": 0.18008558452129364,
        "seek": 99910,
        "start": 1007.5600000000001,
        "temperature": 0,
        "text": " So how did I come up with that crazy string?",
        "tokens": [
          50787,
          407,
          577,
          630,
          286,
          808,
          493,
          365,
          300,
          3219,
          6798,
          30,
          50902
        ]
      },
      {
        "avg_logprob": -0.30646623383968247,
        "compression_ratio": 1.6626984126984128,
        "end": 1013.38,
        "id": 295,
        "no_speech_prob": 0.18008558452129364,
        "seek": 99910,
        "start": 1009.86,
        "temperature": 0,
        "text": " I found it in that book, or I think actually I found a lot of these from the Computational",
        "tokens": [
          50902,
          286,
          1352,
          309,
          294,
          300,
          1446,
          11,
          420,
          286,
          519,
          767,
          286,
          1352,
          257,
          688,
          295,
          613,
          490,
          264,
          37804,
          1478,
          51078
        ]
      },
      {
        "avg_logprob": -0.30646623383968247,
        "compression_ratio": 1.6626984126984128,
        "end": 1020.3000000000001,
        "id": 296,
        "no_speech_prob": 0.18008558452129364,
        "seek": 99910,
        "start": 1013.38,
        "temperature": 0,
        "text": " Beauty of Nature book, chapter, over the correct chapter number, which has a nice section about",
        "tokens": [
          51078,
          21450,
          295,
          20159,
          1446,
          11,
          7187,
          11,
          670,
          264,
          3006,
          7187,
          1230,
          11,
          597,
          575,
          257,
          1481,
          3541,
          466,
          51424
        ]
      },
      {
        "avg_logprob": -0.30646623383968247,
        "compression_ratio": 1.6626984126984128,
        "end": 1022.7,
        "id": 297,
        "no_speech_prob": 0.18008558452129364,
        "seek": 99910,
        "start": 1020.3000000000001,
        "temperature": 0,
        "text": " else systems and a whole lot of example scenarios.",
        "tokens": [
          51424,
          1646,
          3652,
          293,
          257,
          1379,
          688,
          295,
          1365,
          15077,
          13,
          51544
        ]
      },
      {
        "avg_logprob": -0.2609745838023998,
        "compression_ratio": 1.537037037037037,
        "end": 1030.02,
        "id": 298,
        "no_speech_prob": 0.06371166557073593,
        "seek": 102270,
        "start": 1022.7,
        "temperature": 0,
        "text": " OK, so this else system, if we run it, we can see, OK, there is f, right?",
        "tokens": [
          50364,
          2264,
          11,
          370,
          341,
          1646,
          1185,
          11,
          498,
          321,
          1190,
          309,
          11,
          321,
          393,
          536,
          11,
          2264,
          11,
          456,
          307,
          283,
          11,
          558,
          30,
          50730
        ]
      },
      {
        "avg_logprob": -0.2609745838023998,
        "compression_ratio": 1.537037037037037,
        "end": 1031.1000000000001,
        "id": 299,
        "no_speech_prob": 0.06371166557073593,
        "seek": 102270,
        "start": 1030.02,
        "temperature": 0,
        "text": " That's just an f.",
        "tokens": [
          50730,
          663,
          311,
          445,
          364,
          283,
          13,
          50784
        ]
      },
      {
        "avg_logprob": -0.2609745838023998,
        "compression_ratio": 1.537037037037037,
        "end": 1033.7,
        "id": 300,
        "no_speech_prob": 0.06371166557073593,
        "seek": 102270,
        "start": 1031.1000000000001,
        "temperature": 0,
        "text": " Draw a line straight from the bottom up.",
        "tokens": [
          50784,
          20386,
          257,
          1622,
          2997,
          490,
          264,
          2767,
          493,
          13,
          50914
        ]
      },
      {
        "avg_logprob": -0.2609745838023998,
        "compression_ratio": 1.537037037037037,
        "end": 1034.78,
        "id": 301,
        "no_speech_prob": 0.06371166557073593,
        "seek": 102270,
        "start": 1033.7,
        "temperature": 0,
        "text": " And you know what I would like to do?",
        "tokens": [
          50914,
          400,
          291,
          458,
          437,
          286,
          576,
          411,
          281,
          360,
          30,
          50968
        ]
      },
      {
        "avg_logprob": -0.2609745838023998,
        "compression_ratio": 1.537037037037037,
        "end": 1037.3,
        "id": 302,
        "no_speech_prob": 0.06371166557073593,
        "seek": 102270,
        "start": 1034.78,
        "temperature": 0,
        "text": " I apologize.",
        "tokens": [
          50968,
          286,
          12328,
          13,
          51094
        ]
      },
      {
        "avg_logprob": -0.2609745838023998,
        "compression_ratio": 1.537037037037037,
        "end": 1042.9,
        "id": 303,
        "no_speech_prob": 0.06371166557073593,
        "seek": 102270,
        "start": 1037.3,
        "temperature": 0,
        "text": " I would like to set the stroke weight to 2, just to make it a little bit thicker.",
        "tokens": [
          51094,
          286,
          576,
          411,
          281,
          992,
          264,
          12403,
          3364,
          281,
          568,
          11,
          445,
          281,
          652,
          309,
          257,
          707,
          857,
          18142,
          13,
          51374
        ]
      },
      {
        "avg_logprob": -0.2609745838023998,
        "compression_ratio": 1.537037037037037,
        "end": 1044.74,
        "id": 304,
        "no_speech_prob": 0.06371166557073593,
        "seek": 102270,
        "start": 1042.9,
        "temperature": 0,
        "text": " I think you'll be able to see it better.",
        "tokens": [
          51374,
          286,
          519,
          291,
          603,
          312,
          1075,
          281,
          536,
          309,
          1101,
          13,
          51466
        ]
      },
      {
        "avg_logprob": -0.2609745838023998,
        "compression_ratio": 1.537037037037037,
        "end": 1049.3400000000001,
        "id": 305,
        "no_speech_prob": 0.06371166557073593,
        "seek": 102270,
        "start": 1044.74,
        "temperature": 0,
        "text": " This is just plain old f.",
        "tokens": [
          51466,
          639,
          307,
          445,
          11121,
          1331,
          283,
          13,
          51696
        ]
      },
      {
        "avg_logprob": -0.22663340414724042,
        "compression_ratio": 2.025089605734767,
        "end": 1054.3,
        "id": 306,
        "no_speech_prob": 0.15608136355876923,
        "seek": 104934,
        "start": 1049.34,
        "temperature": 0,
        "text": " Now look, that's the first generation, which you can imagine as f, maybe rotate, draw a",
        "tokens": [
          50364,
          823,
          574,
          11,
          300,
          311,
          264,
          700,
          5125,
          11,
          597,
          291,
          393,
          3811,
          382,
          283,
          11,
          1310,
          13121,
          11,
          2642,
          257,
          50612
        ]
      },
      {
        "avg_logprob": -0.22663340414724042,
        "compression_ratio": 2.025089605734767,
        "end": 1058.22,
        "id": 307,
        "no_speech_prob": 0.15608136355876923,
        "seek": 104934,
        "start": 1054.3,
        "temperature": 0,
        "text": " line, rotate the other way, draw a line, rotate the other way, draw a line, pop back, then",
        "tokens": [
          50612,
          1622,
          11,
          13121,
          264,
          661,
          636,
          11,
          2642,
          257,
          1622,
          11,
          13121,
          264,
          661,
          636,
          11,
          2642,
          257,
          1622,
          11,
          1665,
          646,
          11,
          550,
          50808
        ]
      },
      {
        "avg_logprob": -0.22663340414724042,
        "compression_ratio": 2.025089605734767,
        "end": 1061.62,
        "id": 308,
        "no_speech_prob": 0.15608136355876923,
        "seek": 104934,
        "start": 1058.22,
        "temperature": 0,
        "text": " rotate the left, draw a line, rotate up, draw a line, rotate to the right, draw a line,",
        "tokens": [
          50808,
          13121,
          264,
          1411,
          11,
          2642,
          257,
          1622,
          11,
          13121,
          493,
          11,
          2642,
          257,
          1622,
          11,
          13121,
          281,
          264,
          558,
          11,
          2642,
          257,
          1622,
          11,
          50978
        ]
      },
      {
        "avg_logprob": -0.22663340414724042,
        "compression_ratio": 2.025089605734767,
        "end": 1062.62,
        "id": 309,
        "no_speech_prob": 0.15608136355876923,
        "seek": 104934,
        "start": 1061.62,
        "temperature": 0,
        "text": " right?",
        "tokens": [
          50978,
          558,
          30,
          51028
        ]
      },
      {
        "avg_logprob": -0.22663340414724042,
        "compression_ratio": 2.025089605734767,
        "end": 1063.62,
        "id": 310,
        "no_speech_prob": 0.15608136355876923,
        "seek": 104934,
        "start": 1062.62,
        "temperature": 0,
        "text": " Now let's look at another generation.",
        "tokens": [
          51028,
          823,
          718,
          311,
          574,
          412,
          1071,
          5125,
          13,
          51078
        ]
      },
      {
        "avg_logprob": -0.22663340414724042,
        "compression_ratio": 2.025089605734767,
        "end": 1066.1399999999999,
        "id": 311,
        "no_speech_prob": 0.15608136355876923,
        "seek": 104934,
        "start": 1063.62,
        "temperature": 0,
        "text": " Oh, we can see how this is being applied over and over again.",
        "tokens": [
          51078,
          876,
          11,
          321,
          393,
          536,
          577,
          341,
          307,
          885,
          6456,
          670,
          293,
          670,
          797,
          13,
          51204
        ]
      },
      {
        "avg_logprob": -0.22663340414724042,
        "compression_ratio": 2.025089605734767,
        "end": 1068.1399999999999,
        "id": 312,
        "no_speech_prob": 0.15608136355876923,
        "seek": 104934,
        "start": 1066.1399999999999,
        "temperature": 0,
        "text": " As I click the mouse, I go from generation to generation.",
        "tokens": [
          51204,
          1018,
          286,
          2052,
          264,
          9719,
          11,
          286,
          352,
          490,
          5125,
          281,
          5125,
          13,
          51304
        ]
      },
      {
        "avg_logprob": -0.22663340414724042,
        "compression_ratio": 2.025089605734767,
        "end": 1074.34,
        "id": 313,
        "no_speech_prob": 0.15608136355876923,
        "seek": 104934,
        "start": 1068.1399999999999,
        "temperature": 0,
        "text": " And we can see we have a fairly sophisticated tree-like pattern, which is much more complex",
        "tokens": [
          51304,
          400,
          321,
          393,
          536,
          321,
          362,
          257,
          6457,
          16950,
          4230,
          12,
          4092,
          5102,
          11,
          597,
          307,
          709,
          544,
          3997,
          51614
        ]
      },
      {
        "avg_logprob": -0.22663340414724042,
        "compression_ratio": 2.025089605734767,
        "end": 1076.26,
        "id": 314,
        "no_speech_prob": 0.15608136355876923,
        "seek": 104934,
        "start": 1074.34,
        "temperature": 0,
        "text": " than what we did without the else system.",
        "tokens": [
          51614,
          813,
          437,
          321,
          630,
          1553,
          264,
          1646,
          1185,
          13,
          51710
        ]
      },
      {
        "avg_logprob": -0.22589827613007252,
        "compression_ratio": 1.8056426332288402,
        "end": 1081.18,
        "id": 315,
        "no_speech_prob": 0.09533195942640305,
        "seek": 107626,
        "start": 1076.26,
        "temperature": 0,
        "text": " So even though all of these examples we could do with just a recursive function or we could",
        "tokens": [
          50364,
          407,
          754,
          1673,
          439,
          295,
          613,
          5110,
          321,
          727,
          360,
          365,
          445,
          257,
          20560,
          488,
          2445,
          420,
          321,
          727,
          50610
        ]
      },
      {
        "avg_logprob": -0.22589827613007252,
        "compression_ratio": 1.8056426332288402,
        "end": 1085.58,
        "id": 316,
        "no_speech_prob": 0.09533195942640305,
        "seek": 107626,
        "start": 1081.18,
        "temperature": 0,
        "text": " do with an else system, sometimes the kind of mechanics of the else system allow us to",
        "tokens": [
          50610,
          360,
          365,
          364,
          1646,
          1185,
          11,
          2171,
          264,
          733,
          295,
          12939,
          295,
          264,
          1646,
          1185,
          2089,
          505,
          281,
          50830
        ]
      },
      {
        "avg_logprob": -0.22589827613007252,
        "compression_ratio": 1.8056426332288402,
        "end": 1087.86,
        "id": 317,
        "no_speech_prob": 0.09533195942640305,
        "seek": 107626,
        "start": 1085.58,
        "temperature": 0,
        "text": " more easily generate this pattern.",
        "tokens": [
          50830,
          544,
          3612,
          8460,
          341,
          5102,
          13,
          50944
        ]
      },
      {
        "avg_logprob": -0.22589827613007252,
        "compression_ratio": 1.8056426332288402,
        "end": 1092.26,
        "id": 318,
        "no_speech_prob": 0.09533195942640305,
        "seek": 107626,
        "start": 1087.86,
        "temperature": 0,
        "text": " The great thing about the else system, too, is we have the entire instructions for drawing",
        "tokens": [
          50944,
          440,
          869,
          551,
          466,
          264,
          1646,
          1185,
          11,
          886,
          11,
          307,
          321,
          362,
          264,
          2302,
          9415,
          337,
          6316,
          51164
        ]
      },
      {
        "avg_logprob": -0.22589827613007252,
        "compression_ratio": 1.8056426332288402,
        "end": 1093.94,
        "id": 319,
        "no_speech_prob": 0.09533195942640305,
        "seek": 107626,
        "start": 1092.26,
        "temperature": 0,
        "text": " this encoded into a string.",
        "tokens": [
          51164,
          341,
          2058,
          12340,
          666,
          257,
          6798,
          13,
          51248
        ]
      },
      {
        "avg_logprob": -0.22589827613007252,
        "compression_ratio": 1.8056426332288402,
        "end": 1098.1,
        "id": 320,
        "no_speech_prob": 0.09533195942640305,
        "seek": 107626,
        "start": 1093.94,
        "temperature": 0,
        "text": " So I'm drawing the whole thing at once, but there's no reason why I couldn't draw it character",
        "tokens": [
          51248,
          407,
          286,
          478,
          6316,
          264,
          1379,
          551,
          412,
          1564,
          11,
          457,
          456,
          311,
          572,
          1778,
          983,
          286,
          2809,
          380,
          2642,
          309,
          2517,
          51456
        ]
      },
      {
        "avg_logprob": -0.22589827613007252,
        "compression_ratio": 1.8056426332288402,
        "end": 1102.94,
        "id": 321,
        "no_speech_prob": 0.09533195942640305,
        "seek": 107626,
        "start": 1098.1,
        "temperature": 0,
        "text": " by character and animate that for you to show how this tree grows, which would be also a",
        "tokens": [
          51456,
          538,
          2517,
          293,
          36439,
          300,
          337,
          291,
          281,
          855,
          577,
          341,
          4230,
          13156,
          11,
          597,
          576,
          312,
          611,
          257,
          51698
        ]
      },
      {
        "avg_logprob": -0.22589827613007252,
        "compression_ratio": 1.8056426332288402,
        "end": 1105.86,
        "id": 322,
        "no_speech_prob": 0.09533195942640305,
        "seek": 107626,
        "start": 1102.94,
        "temperature": 0,
        "text": " great exercise to do or another example that I should make.",
        "tokens": [
          51698,
          869,
          5380,
          281,
          360,
          420,
          1071,
          1365,
          300,
          286,
          820,
          652,
          13,
          51844
        ]
      },
      {
        "avg_logprob": -0.2700871850690271,
        "compression_ratio": 1.7366255144032923,
        "end": 1111.1799999999998,
        "id": 323,
        "no_speech_prob": 0.00008750007691560313,
        "seek": 110586,
        "start": 1106.4599999999998,
        "temperature": 0,
        "text": " So now that we've seen this, this is just one scenario.",
        "tokens": [
          50394,
          407,
          586,
          300,
          321,
          600,
          1612,
          341,
          11,
          341,
          307,
          445,
          472,
          9005,
          13,
          50630
        ]
      },
      {
        "avg_logprob": -0.2700871850690271,
        "compression_ratio": 1.7366255144032923,
        "end": 1115.6999999999998,
        "id": 324,
        "no_speech_prob": 0.00008750007691560313,
        "seek": 110586,
        "start": 1111.1799999999998,
        "temperature": 0,
        "text": " And I guess I should mention, what is an else system object?",
        "tokens": [
          50630,
          400,
          286,
          2041,
          286,
          820,
          2152,
          11,
          437,
          307,
          364,
          1646,
          1185,
          2657,
          30,
          50856
        ]
      },
      {
        "avg_logprob": -0.2700871850690271,
        "compression_ratio": 1.7366255144032923,
        "end": 1117.4599999999998,
        "id": 325,
        "no_speech_prob": 0.00008750007691560313,
        "seek": 110586,
        "start": 1115.6999999999998,
        "temperature": 0,
        "text": " It has a string, which is its current sentence.",
        "tokens": [
          50856,
          467,
          575,
          257,
          6798,
          11,
          597,
          307,
          1080,
          2190,
          8174,
          13,
          50944
        ]
      },
      {
        "avg_logprob": -0.2700871850690271,
        "compression_ratio": 1.7366255144032923,
        "end": 1121.1399999999999,
        "id": 326,
        "no_speech_prob": 0.00008750007691560313,
        "seek": 110586,
        "start": 1117.4599999999998,
        "temperature": 0,
        "text": " It has an array of possible rules, which say what characters become what.",
        "tokens": [
          50944,
          467,
          575,
          364,
          10225,
          295,
          1944,
          4474,
          11,
          597,
          584,
          437,
          4342,
          1813,
          437,
          13,
          51128
        ]
      },
      {
        "avg_logprob": -0.2700871850690271,
        "compression_ratio": 1.7366255144032923,
        "end": 1123.1799999999998,
        "id": 327,
        "no_speech_prob": 0.00008750007691560313,
        "seek": 110586,
        "start": 1121.1399999999999,
        "temperature": 0,
        "text": " And it has a generation that's keeping track of the count.",
        "tokens": [
          51128,
          400,
          309,
          575,
          257,
          5125,
          300,
          311,
          5145,
          2837,
          295,
          264,
          1207,
          13,
          51230
        ]
      },
      {
        "avg_logprob": -0.2700871850690271,
        "compression_ratio": 1.7366255144032923,
        "end": 1125.6999999999998,
        "id": 328,
        "no_speech_prob": 0.00008750007691560313,
        "seek": 110586,
        "start": 1123.1799999999998,
        "temperature": 0,
        "text": " And a rule is really, really simple.",
        "tokens": [
          51230,
          400,
          257,
          4978,
          307,
          534,
          11,
          534,
          2199,
          13,
          51356
        ]
      },
      {
        "avg_logprob": -0.2700871850690271,
        "compression_ratio": 1.7366255144032923,
        "end": 1128.9799999999998,
        "id": 329,
        "no_speech_prob": 0.00008750007691560313,
        "seek": 110586,
        "start": 1125.6999999999998,
        "temperature": 0,
        "text": " A rule is just a character that becomes a string.",
        "tokens": [
          51356,
          316,
          4978,
          307,
          445,
          257,
          2517,
          300,
          3643,
          257,
          6798,
          13,
          51520
        ]
      },
      {
        "avg_logprob": -0.2700871850690271,
        "compression_ratio": 1.7366255144032923,
        "end": 1132.62,
        "id": 330,
        "no_speech_prob": 0.00008750007691560313,
        "seek": 110586,
        "start": 1128.9799999999998,
        "temperature": 0,
        "text": " This is A becomes ABA, B becomes BBB.",
        "tokens": [
          51520,
          639,
          307,
          316,
          3643,
          316,
          9295,
          11,
          363,
          3643,
          19168,
          33,
          13,
          51702
        ]
      },
      {
        "avg_logprob": -0.2529764662693887,
        "compression_ratio": 1.7116104868913857,
        "end": 1136.9799999999998,
        "id": 331,
        "no_speech_prob": 0.2336350381374359,
        "seek": 113262,
        "start": 1132.62,
        "temperature": 0,
        "text": " So these are some simple classes to manage the elements of the else system.",
        "tokens": [
          50364,
          407,
          613,
          366,
          512,
          2199,
          5359,
          281,
          3067,
          264,
          4959,
          295,
          264,
          1646,
          1185,
          13,
          50582
        ]
      },
      {
        "avg_logprob": -0.2529764662693887,
        "compression_ratio": 1.7116104868913857,
        "end": 1141.54,
        "id": 332,
        "no_speech_prob": 0.2336350381374359,
        "seek": 113262,
        "start": 1136.9799999999998,
        "temperature": 0,
        "text": " I'm going to open up a couple other ones just so you can see.",
        "tokens": [
          50582,
          286,
          478,
          516,
          281,
          1269,
          493,
          257,
          1916,
          661,
          2306,
          445,
          370,
          291,
          393,
          536,
          13,
          50810
        ]
      },
      {
        "avg_logprob": -0.2529764662693887,
        "compression_ratio": 1.7116104868913857,
        "end": 1144.3799999999999,
        "id": 333,
        "no_speech_prob": 0.2336350381374359,
        "seek": 113262,
        "start": 1141.54,
        "temperature": 0,
        "text": " Here is another else system.",
        "tokens": [
          50810,
          1692,
          307,
          1071,
          1646,
          1185,
          13,
          50952
        ]
      },
      {
        "avg_logprob": -0.2529764662693887,
        "compression_ratio": 1.7116104868913857,
        "end": 1146.2199999999998,
        "id": 334,
        "no_speech_prob": 0.2336350381374359,
        "seek": 113262,
        "start": 1144.3799999999999,
        "temperature": 0,
        "text": " Maybe this looks kind of similar to you.",
        "tokens": [
          50952,
          2704,
          341,
          1542,
          733,
          295,
          2531,
          281,
          291,
          13,
          51044
        ]
      },
      {
        "avg_logprob": -0.2529764662693887,
        "compression_ratio": 1.7116104868913857,
        "end": 1147.2199999999998,
        "id": 335,
        "no_speech_prob": 0.2336350381374359,
        "seek": 113262,
        "start": 1146.2199999999998,
        "temperature": 0,
        "text": " It's pretty different.",
        "tokens": [
          51044,
          467,
          311,
          1238,
          819,
          13,
          51094
        ]
      },
      {
        "avg_logprob": -0.2529764662693887,
        "compression_ratio": 1.7116104868913857,
        "end": 1150.4599999999998,
        "id": 336,
        "no_speech_prob": 0.2336350381374359,
        "seek": 113262,
        "start": 1147.2199999999998,
        "temperature": 0,
        "text": " You can see also the axiom is F minus F minus F minus F.",
        "tokens": [
          51094,
          509,
          393,
          536,
          611,
          264,
          6360,
          72,
          298,
          307,
          479,
          3175,
          479,
          3175,
          479,
          3175,
          479,
          13,
          51256
        ]
      },
      {
        "avg_logprob": -0.2529764662693887,
        "compression_ratio": 1.7116104868913857,
        "end": 1154.54,
        "id": 337,
        "no_speech_prob": 0.2336350381374359,
        "seek": 113262,
        "start": 1150.4599999999998,
        "temperature": 0,
        "text": " So when I run this one, we actually can't see it, but there is an axiom, which is drawing",
        "tokens": [
          51256,
          407,
          562,
          286,
          1190,
          341,
          472,
          11,
          321,
          767,
          393,
          380,
          536,
          309,
          11,
          457,
          456,
          307,
          364,
          6360,
          72,
          298,
          11,
          597,
          307,
          6316,
          51460
        ]
      },
      {
        "avg_logprob": -0.2529764662693887,
        "compression_ratio": 1.7116104868913857,
        "end": 1155.54,
        "id": 338,
        "no_speech_prob": 0.2336350381374359,
        "seek": 113262,
        "start": 1154.54,
        "temperature": 0,
        "text": " a big square.",
        "tokens": [
          51460,
          257,
          955,
          3732,
          13,
          51510
        ]
      },
      {
        "avg_logprob": -0.2529764662693887,
        "compression_ratio": 1.7116104868913857,
        "end": 1159.34,
        "id": 339,
        "no_speech_prob": 0.2336350381374359,
        "seek": 113262,
        "start": 1155.54,
        "temperature": 0,
        "text": " If we say move forward, turn left, move forward.",
        "tokens": [
          51510,
          759,
          321,
          584,
          1286,
          2128,
          11,
          1261,
          1411,
          11,
          1286,
          2128,
          13,
          51700
        ]
      },
      {
        "avg_logprob": -0.2529764662693887,
        "compression_ratio": 1.7116104868913857,
        "end": 1160.34,
        "id": 340,
        "no_speech_prob": 0.2336350381374359,
        "seek": 113262,
        "start": 1159.34,
        "temperature": 0,
        "text": " I can't do this.",
        "tokens": [
          51700,
          286,
          393,
          380,
          360,
          341,
          13,
          51750
        ]
      },
      {
        "avg_logprob": -0.2922240686780624,
        "compression_ratio": 1.7193675889328064,
        "end": 1165.54,
        "id": 341,
        "no_speech_prob": 0.01262440625578165,
        "seek": 116034,
        "start": 1161.06,
        "temperature": 0,
        "text": " If I do this, move forward, move left, move forward, turn left, move forward, turn left.",
        "tokens": [
          50400,
          759,
          286,
          360,
          341,
          11,
          1286,
          2128,
          11,
          1286,
          1411,
          11,
          1286,
          2128,
          11,
          1261,
          1411,
          11,
          1286,
          2128,
          11,
          1261,
          1411,
          13,
          50624
        ]
      },
      {
        "avg_logprob": -0.2922240686780624,
        "compression_ratio": 1.7193675889328064,
        "end": 1167.86,
        "id": 342,
        "no_speech_prob": 0.01262440625578165,
        "seek": 116034,
        "start": 1165.54,
        "temperature": 0,
        "text": " Making a big box, that's what that axiom does.",
        "tokens": [
          50624,
          14595,
          257,
          955,
          2424,
          11,
          300,
          311,
          437,
          300,
          6360,
          72,
          298,
          775,
          13,
          50740
        ]
      },
      {
        "avg_logprob": -0.2922240686780624,
        "compression_ratio": 1.7193675889328064,
        "end": 1170.6799999999998,
        "id": 343,
        "no_speech_prob": 0.01262440625578165,
        "seek": 116034,
        "start": 1167.86,
        "temperature": 0,
        "text": " But as I click, we can see what are we getting.",
        "tokens": [
          50740,
          583,
          382,
          286,
          2052,
          11,
          321,
          393,
          536,
          437,
          366,
          321,
          1242,
          13,
          50881
        ]
      },
      {
        "avg_logprob": -0.2922240686780624,
        "compression_ratio": 1.7193675889328064,
        "end": 1173.1399999999999,
        "id": 344,
        "no_speech_prob": 0.01262440625578165,
        "seek": 116034,
        "start": 1170.6799999999998,
        "temperature": 0,
        "text": " Take a look at this.",
        "tokens": [
          50881,
          3664,
          257,
          574,
          412,
          341,
          13,
          51004
        ]
      },
      {
        "avg_logprob": -0.2922240686780624,
        "compression_ratio": 1.7193675889328064,
        "end": 1176.1799999999998,
        "id": 345,
        "no_speech_prob": 0.01262440625578165,
        "seek": 116034,
        "start": 1173.1399999999999,
        "temperature": 0,
        "text": " Try to make this fractal pattern without an else system.",
        "tokens": [
          51004,
          6526,
          281,
          652,
          341,
          17948,
          304,
          5102,
          1553,
          364,
          1646,
          1185,
          13,
          51156
        ]
      },
      {
        "avg_logprob": -0.2922240686780624,
        "compression_ratio": 1.7193675889328064,
        "end": 1178.6599999999999,
        "id": 346,
        "no_speech_prob": 0.01262440625578165,
        "seek": 116034,
        "start": 1176.1799999999998,
        "temperature": 0,
        "text": " You could do it, but the else system is a nice way of doing it.",
        "tokens": [
          51156,
          509,
          727,
          360,
          309,
          11,
          457,
          264,
          1646,
          1185,
          307,
          257,
          1481,
          636,
          295,
          884,
          309,
          13,
          51280
        ]
      },
      {
        "avg_logprob": -0.2922240686780624,
        "compression_ratio": 1.7193675889328064,
        "end": 1180.02,
        "id": 347,
        "no_speech_prob": 0.01262440625578165,
        "seek": 116034,
        "start": 1178.6599999999999,
        "temperature": 0,
        "text": " So I forget what this is called.",
        "tokens": [
          51280,
          407,
          286,
          2870,
          437,
          341,
          307,
          1219,
          13,
          51348
        ]
      },
      {
        "avg_logprob": -0.2922240686780624,
        "compression_ratio": 1.7193675889328064,
        "end": 1184.1799999999998,
        "id": 348,
        "no_speech_prob": 0.01262440625578165,
        "seek": 116034,
        "start": 1180.02,
        "temperature": 0,
        "text": " Maybe it has sponge, some sort of sponge, Mercer sponge.",
        "tokens": [
          51348,
          2704,
          309,
          575,
          23134,
          11,
          512,
          1333,
          295,
          23134,
          11,
          6124,
          1776,
          23134,
          13,
          51556
        ]
      },
      {
        "avg_logprob": -0.2922240686780624,
        "compression_ratio": 1.7193675889328064,
        "end": 1186.26,
        "id": 349,
        "no_speech_prob": 0.01262440625578165,
        "seek": 116034,
        "start": 1184.1799999999998,
        "temperature": 0,
        "text": " Someone correct me.",
        "tokens": [
          51556,
          8734,
          3006,
          385,
          13,
          51660
        ]
      },
      {
        "avg_logprob": -0.22875498997346136,
        "compression_ratio": 1.7870722433460076,
        "end": 1190.5,
        "id": 350,
        "no_speech_prob": 0.1846911907196045,
        "seek": 118626,
        "start": 1186.26,
        "temperature": 0,
        "text": " And the last one I'll show you is just the Sierpinski triangle.",
        "tokens": [
          50364,
          400,
          264,
          1036,
          472,
          286,
          603,
          855,
          291,
          307,
          445,
          264,
          318,
          811,
          79,
          38984,
          13369,
          13,
          50576
        ]
      },
      {
        "avg_logprob": -0.22875498997346136,
        "compression_ratio": 1.7870722433460076,
        "end": 1196.42,
        "id": 351,
        "no_speech_prob": 0.1846911907196045,
        "seek": 118626,
        "start": 1190.5,
        "temperature": 0,
        "text": " Here are the rules for making the Sierpinski triangle, where we have F and G.",
        "tokens": [
          50576,
          1692,
          366,
          264,
          4474,
          337,
          1455,
          264,
          318,
          811,
          79,
          38984,
          13369,
          11,
          689,
          321,
          362,
          479,
          293,
          460,
          13,
          50872
        ]
      },
      {
        "avg_logprob": -0.22875498997346136,
        "compression_ratio": 1.7870722433460076,
        "end": 1200.3799999999999,
        "id": 352,
        "no_speech_prob": 0.1846911907196045,
        "seek": 118626,
        "start": 1196.42,
        "temperature": 0,
        "text": " And we can see what we get.",
        "tokens": [
          50872,
          400,
          321,
          393,
          536,
          437,
          321,
          483,
          13,
          51070
        ]
      },
      {
        "avg_logprob": -0.22875498997346136,
        "compression_ratio": 1.7870722433460076,
        "end": 1203.56,
        "id": 353,
        "no_speech_prob": 0.1846911907196045,
        "seek": 118626,
        "start": 1200.3799999999999,
        "temperature": 0,
        "text": " And there's our Sierpinski triangle, which we have now done a zillion different ways.",
        "tokens": [
          51070,
          400,
          456,
          311,
          527,
          318,
          811,
          79,
          38984,
          13369,
          11,
          597,
          321,
          362,
          586,
          1096,
          257,
          710,
          11836,
          819,
          2098,
          13,
          51229
        ]
      },
      {
        "avg_logprob": -0.22875498997346136,
        "compression_ratio": 1.7870722433460076,
        "end": 1205.5,
        "id": 354,
        "no_speech_prob": 0.1846911907196045,
        "seek": 118626,
        "start": 1203.56,
        "temperature": 0,
        "text": " We did this with Cider Automata.",
        "tokens": [
          51229,
          492,
          630,
          341,
          365,
          383,
          1438,
          24619,
          3274,
          13,
          51326
        ]
      },
      {
        "avg_logprob": -0.22875498997346136,
        "compression_ratio": 1.7870722433460076,
        "end": 1209.6,
        "id": 355,
        "no_speech_prob": 0.1846911907196045,
        "seek": 118626,
        "start": 1205.5,
        "temperature": 0,
        "text": " We did it with this crazy recursive circles that actually made that pattern.",
        "tokens": [
          51326,
          492,
          630,
          309,
          365,
          341,
          3219,
          20560,
          488,
          13040,
          300,
          767,
          1027,
          300,
          5102,
          13,
          51531
        ]
      },
      {
        "avg_logprob": -0.22875498997346136,
        "compression_ratio": 1.7870722433460076,
        "end": 1211.18,
        "id": 356,
        "no_speech_prob": 0.1846911907196045,
        "seek": 118626,
        "start": 1209.6,
        "temperature": 0,
        "text": " Now we're doing it with an else system.",
        "tokens": [
          51531,
          823,
          321,
          434,
          884,
          309,
          365,
          364,
          1646,
          1185,
          13,
          51610
        ]
      },
      {
        "avg_logprob": -0.22875498997346136,
        "compression_ratio": 1.7870722433460076,
        "end": 1214.62,
        "id": 357,
        "no_speech_prob": 0.1846911907196045,
        "seek": 118626,
        "start": 1211.18,
        "temperature": 0,
        "text": " So you can see all of these systems can generate these patterns.",
        "tokens": [
          51610,
          407,
          291,
          393,
          536,
          439,
          295,
          613,
          3652,
          393,
          8460,
          613,
          8294,
          13,
          51782
        ]
      },
      {
        "avg_logprob": -0.20661752364214728,
        "compression_ratio": 1.7105263157894737,
        "end": 1219.02,
        "id": 358,
        "no_speech_prob": 0.012240678071975708,
        "seek": 121462,
        "start": 1214.62,
        "temperature": 0,
        "text": " And it's less about, again, I guess I should finish with this.",
        "tokens": [
          50364,
          400,
          309,
          311,
          1570,
          466,
          11,
          797,
          11,
          286,
          2041,
          286,
          820,
          2413,
          365,
          341,
          13,
          50584
        ]
      },
      {
        "avg_logprob": -0.20661752364214728,
        "compression_ratio": 1.7105263157894737,
        "end": 1223.4599999999998,
        "id": 359,
        "no_speech_prob": 0.012240678071975708,
        "seek": 121462,
        "start": 1219.02,
        "temperature": 0,
        "text": " What's important here is not, hey, you can use the Sierpinski triangle as a design element",
        "tokens": [
          50584,
          708,
          311,
          1021,
          510,
          307,
          406,
          11,
          4177,
          11,
          291,
          393,
          764,
          264,
          318,
          811,
          79,
          38984,
          13369,
          382,
          257,
          1715,
          4478,
          50806
        ]
      },
      {
        "avg_logprob": -0.20661752364214728,
        "compression_ratio": 1.7105263157894737,
        "end": 1225.1799999999998,
        "id": 360,
        "no_speech_prob": 0.012240678071975708,
        "seek": 121462,
        "start": 1223.4599999999998,
        "temperature": 0,
        "text": " in everything you make.",
        "tokens": [
          50806,
          294,
          1203,
          291,
          652,
          13,
          50892
        ]
      },
      {
        "avg_logprob": -0.20661752364214728,
        "compression_ratio": 1.7105263157894737,
        "end": 1229.9799999999998,
        "id": 361,
        "no_speech_prob": 0.012240678071975708,
        "seek": 121462,
        "start": 1225.1799999999998,
        "temperature": 0,
        "text": " It's more about, here are a bunch of strategies and techniques for using recursive functions",
        "tokens": [
          50892,
          467,
          311,
          544,
          466,
          11,
          510,
          366,
          257,
          3840,
          295,
          9029,
          293,
          7512,
          337,
          1228,
          20560,
          488,
          6828,
          51132
        ]
      },
      {
        "avg_logprob": -0.20661752364214728,
        "compression_ratio": 1.7105263157894737,
        "end": 1231.54,
        "id": 362,
        "no_speech_prob": 0.012240678071975708,
        "seek": 121462,
        "start": 1229.9799999999998,
        "temperature": 0,
        "text": " to create designs.",
        "tokens": [
          51132,
          281,
          1884,
          11347,
          13,
          51210
        ]
      },
      {
        "avg_logprob": -0.20661752364214728,
        "compression_ratio": 1.7105263157894737,
        "end": 1235.1399999999999,
        "id": 363,
        "no_speech_prob": 0.012240678071975708,
        "seek": 121462,
        "start": 1231.54,
        "temperature": 0,
        "text": " It's up to you now to figure out what design do you want to make.",
        "tokens": [
          51210,
          467,
          311,
          493,
          281,
          291,
          586,
          281,
          2573,
          484,
          437,
          1715,
          360,
          291,
          528,
          281,
          652,
          13,
          51390
        ]
      },
      {
        "avg_logprob": -0.20661752364214728,
        "compression_ratio": 1.7105263157894737,
        "end": 1238.1799999999998,
        "id": 364,
        "no_speech_prob": 0.012240678071975708,
        "seek": 121462,
        "start": 1235.1399999999999,
        "temperature": 0,
        "text": " Could you actually create your own rules for an else system?",
        "tokens": [
          51390,
          7497,
          291,
          767,
          1884,
          428,
          1065,
          4474,
          337,
          364,
          1646,
          1185,
          30,
          51542
        ]
      },
      {
        "avg_logprob": -0.20661752364214728,
        "compression_ratio": 1.7105263157894737,
        "end": 1241.8999999999999,
        "id": 365,
        "no_speech_prob": 0.012240678071975708,
        "seek": 121462,
        "start": 1238.1799999999998,
        "temperature": 0,
        "text": " An interesting idea is actually to generate random else systems, right?",
        "tokens": [
          51542,
          1107,
          1880,
          1558,
          307,
          767,
          281,
          8460,
          4974,
          1646,
          3652,
          11,
          558,
          30,
          51728
        ]
      },
      {
        "avg_logprob": -0.20661752364214728,
        "compression_ratio": 1.7105263157894737,
        "end": 1243.9799999999998,
        "id": 366,
        "no_speech_prob": 0.012240678071975708,
        "seek": 121462,
        "start": 1241.8999999999999,
        "temperature": 0,
        "text": " Random alphabets, random rules.",
        "tokens": [
          51728,
          37603,
          419,
          950,
          455,
          1385,
          11,
          4974,
          4474,
          13,
          51832
        ]
      },
      {
        "avg_logprob": -0.2730015170189642,
        "compression_ratio": 1.6725352112676057,
        "end": 1246.66,
        "id": 367,
        "no_speech_prob": 0.00298081012442708,
        "seek": 124398,
        "start": 1244.34,
        "temperature": 0,
        "text": " So you'll see you mostly get a lot of noise and junk.",
        "tokens": [
          50382,
          407,
          291,
          603,
          536,
          291,
          5240,
          483,
          257,
          688,
          295,
          5658,
          293,
          19109,
          13,
          50498
        ]
      },
      {
        "avg_logprob": -0.2730015170189642,
        "compression_ratio": 1.6725352112676057,
        "end": 1248.54,
        "id": 368,
        "no_speech_prob": 0.00298081012442708,
        "seek": 124398,
        "start": 1246.66,
        "temperature": 0,
        "text": " But in there, there might be some gems.",
        "tokens": [
          50498,
          583,
          294,
          456,
          11,
          456,
          1062,
          312,
          512,
          29296,
          13,
          50592
        ]
      },
      {
        "avg_logprob": -0.2730015170189642,
        "compression_ratio": 1.6725352112676057,
        "end": 1250.32,
        "id": 369,
        "no_speech_prob": 0.00298081012442708,
        "seek": 124398,
        "start": 1248.54,
        "temperature": 0,
        "text": " Is there a way you could find those gems?",
        "tokens": [
          50592,
          1119,
          456,
          257,
          636,
          291,
          727,
          915,
          729,
          29296,
          30,
          50681
        ]
      },
      {
        "avg_logprob": -0.2730015170189642,
        "compression_ratio": 1.6725352112676057,
        "end": 1254.22,
        "id": 370,
        "no_speech_prob": 0.00298081012442708,
        "seek": 124398,
        "start": 1250.32,
        "temperature": 0,
        "text": " Maybe you could evolve else systems, which is kind of a little foreshadowing to the next",
        "tokens": [
          50681,
          2704,
          291,
          727,
          16693,
          1646,
          3652,
          11,
          597,
          307,
          733,
          295,
          257,
          707,
          2091,
          2716,
          345,
          9637,
          281,
          264,
          958,
          50876
        ]
      },
      {
        "avg_logprob": -0.2730015170189642,
        "compression_ratio": 1.6725352112676057,
        "end": 1257.6200000000001,
        "id": 371,
        "no_speech_prob": 0.00298081012442708,
        "seek": 124398,
        "start": 1254.22,
        "temperature": 0,
        "text": " chapter we're going to look at genetic algorithms and evolutionary systems.",
        "tokens": [
          50876,
          7187,
          321,
          434,
          516,
          281,
          574,
          412,
          12462,
          14642,
          293,
          27567,
          3652,
          13,
          51046
        ]
      },
      {
        "avg_logprob": -0.2730015170189642,
        "compression_ratio": 1.6725352112676057,
        "end": 1260.9,
        "id": 372,
        "no_speech_prob": 0.00298081012442708,
        "seek": 124398,
        "start": 1257.6200000000001,
        "temperature": 0,
        "text": " OK, so hopefully you found this helpful.",
        "tokens": [
          51046,
          2264,
          11,
          370,
          4696,
          291,
          1352,
          341,
          4961,
          13,
          51210
        ]
      },
      {
        "avg_logprob": -0.2730015170189642,
        "compression_ratio": 1.6725352112676057,
        "end": 1265.26,
        "id": 373,
        "no_speech_prob": 0.00298081012442708,
        "seek": 124398,
        "start": 1260.9,
        "temperature": 0,
        "text": " And I will provide a lot of links below and things to stuff that I talked about that will",
        "tokens": [
          51210,
          400,
          286,
          486,
          2893,
          257,
          688,
          295,
          6123,
          2507,
          293,
          721,
          281,
          1507,
          300,
          286,
          2825,
          466,
          300,
          486,
          51428
        ]
      },
      {
        "avg_logprob": -0.2730015170189642,
        "compression_ratio": 1.6725352112676057,
        "end": 1266.94,
        "id": 374,
        "no_speech_prob": 0.00298081012442708,
        "seek": 124398,
        "start": 1265.26,
        "temperature": 0,
        "text": " hopefully also be helpful.",
        "tokens": [
          51428,
          4696,
          611,
          312,
          4961,
          13,
          51512
        ]
      },
      {
        "avg_logprob": -0.2730015170189642,
        "compression_ratio": 1.6725352112676057,
        "end": 1267.82,
        "id": 375,
        "no_speech_prob": 0.00298081012442708,
        "seek": 124398,
        "start": 1266.94,
        "temperature": 0,
        "text": " And there we go.",
        "tokens": [
          51512,
          400,
          456,
          321,
          352,
          13,
          51556
        ]
      }
    ],
    "transcription": " Welcome, this is the last video in chapter 8 about fractals. And in this video we're going to kind of cap everything off by looking at another way to generate fractal patterns. And this, we're going to use something called an L-system. Now, what is an L-system? L-system is named for the elf or aristid Lindenmayr, a Hungarian botanist who I think in around 1968 introduced this idea of an L-system while he was studying plant growth, algae, fungi, how do these sort of cellular systems, how do all that stuff grow and get attached to itself. So there's a wonderful book, I believe it's out of print, but I will show it to you right here called The Algorithmic Beauty of Plants. If you're interested in this stuff, you must get this. But you don't even need to buy it. I should point out that this book in its entirety is available online for free. So I will include a link to that below. But we're going to, so this is a very rich topic in the sense that there are tons of different L-systems that you can make. But we're going to just look at the core elements of an L-system, what is it, how does it work, and a couple examples in processing. And from there, that might launch you into all sorts of different possibilities. So one of the things that's super interesting about L-systems in terms of what we're doing is they in many ways have nothing to do with computer graphics whatsoever. We're going to use them to generate instructions for drawing, but at their core, an L-system is really a grammar. It's a rewriting system. It's a way of looking at strings of characters and rewriting those strings of characters over and over again in a, wait for it, recursive way. We're going to apply recursion to text, which by the way, if you're interested in things other than computer graphics and algorithmic text, this is an interesting thing for you to look at as well. So an L-system has an alphabet. So we're going to start with a simple one. An alphabet is what are the characters that are allowed in this particular L-system. And we'll start with a very simple one with just A and B. It also has an axiom, which is what is the original, what is the generation zero sentence that we're going to start with? We're going to recursively make sentence after sentence from generation to generation, just like we've done with all these drawing things. We're going to do it with text. So what do we start with? We're going to start with A. And then it has a rule set. Just like when we did the cantor set, the tree, the Koch curve, we had these production rules. A line has two lines attached to the end. Those lines have two lines attached to the end. We're going to have the same production rules, but for text. So what are some rules? We're going to say, hey, the character A should turn into ABA. And we can have one or more rules. I'm going to do a slightly complicated one for dramatic effect, as you're going to see in a moment. We could say the character B should become BBB. So let's look at what happens when we start with A. So A is generation zero. Now we're going to do this once. Generation one. A becomes, that doesn't look like a one. A becomes ABA. Are you, are you, are we on? We're on, okay. A becomes ABA. ABA. Now, we're going to do generation two. Okay. B, A becomes ABA. Right? This, this is that. B becomes BBB. And A becomes ABA. Oh, come on. Let's do it one more time. Generation three. Let's start over here. A becomes ABA. B becomes BBB. A becomes ABA. Oh my goodness. B becomes BB. I can do this. I can do this. Right? I've got nine B's and then ABA. BBB. I probably, I ran out of space. You can't see me anymore. But look, we can see what we're doing. And this is not, I mean, sometimes it can be fun. Like, for me, this is fun to do with a marker. But you can see here how a computer program that's going to work with strings and make new strings from generation to generation is going to be much more effective. But I just want to say for a moment. Remember, we're, you know, as much as there are tons of applications of this, we are looking at this in particular for drawing patterns in our processing window. So what, how are we going to get a pattern from all of this text? The thing we need to think about is what if these characters were instructions for drawing? For example, what if I said to you A means draw a line. And what if I said B means move forward without drawing. So let's look at what this is. A translates to this. ABA translates to this. ABA BBBBB ABA translates to, I really didn't need to go to the third generation. Line, move forward, line, move forward, move forward, move forward, line, move forward, move forward. Line, line, line, line, line, line, line, line, line. Does this look familiar to you? This is generation three, this is generation two, this is generation one, right? Does this look familiar to you? It should. What we are doing is making the canter set. So we can actually, I'm sorry if that was kind of roundabout, but what we did is we just defined the canter set in terms of strings of characters, right? You can see these strings of characters exhibit the pattern that the canter set exhibit whenever A is a line and B is a blank space. And I didn't necessarily draw this to scale perfectly. One of the things in L-Systems that we're going to see is if we're using these instructions for drawing, from generation to generation, each line segment needs to get a little bit shorter, right? So we have this. You can see how the line segments are getting shorter from generation to generation. If this is really, if I were to kind of have done this slightly better, so if I, this is where I think to myself, I'll just start this video over and I'll make it more perfectly aligned on the board. But I think you get the idea, right? So what, this is pretty exciting. We now have an L-System, which is these strings of characters, which we can translate these characters into instructions for drawing and generate these patterns. Now this isn't accidental. This, you know, this was designed to generate the canter set. You can come up with all sorts of random alphabets and random axioms and random rule sets and see what results you get. But what I'm going to show you are some particularly, some known L-Systems that will give you fractal patterns. So let's briefly talk about how the code implementation for this needs to work. I don't know if you remember, if you watched a couple videos ago, we talked about this ArrayList technique, where we kind of put an object in the ArrayList and then we iterate through any objects that are in the ArrayList and create new objects that go in that same ArrayList or go into a new ArrayList and then it gets replaced, right? This idea of recursively iterating through a list of things that make more things into the same list. Okay? So, that's what we did before. We're going to do the same thing with strings, right? We have some ArrayList essentially that has one character in it and now the next generation we need to say, hey, there's one character in it, let's put these three characters in it. Oh, then what we need to do is say for this one we're going to put those three characters in it, for this one we're going to put those three characters in it, and for this one we're going to put these three characters in it. So the couple, the things that I should note is the order of the characters actually matters, right? Because these are ultimately going to be instructions for drawing. But it's just, we're using the same exact technique. This list with information and each piece of information kind of gives birth to new pieces of information and the ArrayList grows and grows and grows. But instead of using an ArrayList, we're going to actually use something called a string buffer. Now in truth, you know, this probably merits me pointing towards a video and there's a tutorial on the Processing website that I'll try to link to about how to work with strings in processing. You don't really need a string buffer, you could just use a regular string. A string is an object to describe an array of characters. But this is a moment in time where using a string buffer could, makes good sense because even though as we do this on the board, our string might only have like 50 characters in it, as soon as we go and run the processing sketch, you're going to see the string could have thousands and thousands, up to hundreds of thousands of characters in it potentially if it's a very elaborate drawing, instead of drawing instructions. A string buffer is very, very efficient for manipulating strings and what it has in it is it has a method called append, which is kind of going to be like adding to an ArrayList. So we'll start, we have a string, we create a new string buffer for every string, for every character in our original string, we start appending to that string buffer new strings of characters. So let's take a look at how this actually works in code. So here I have that method, by the way, which is that we start with, we start with a current string, right? We have a current string A. This is exactly, if you look at all of our previous examples, we had an ArrayList current for all of the cotch lines and then we made an ArrayList next for the next generation of cotch lines. We're doing the same thing here. The difference is, the thing that's next is a string buffer. So as we go through the current string, we say, hey, did we find an A? Give us an AB. Did we find a B? Give us an A. And you know, I should probably make this the same thing we just did on the board, right? If we find an A, give us an AB. If we find a B, give us a BBB, right? And then at the very, very end when we're done, current becomes that next string buffer. So the string buffer, to convert it back to a regular old go-to-fashion string, we just say the string buffer dot to string and we set that as current and increase the count of generations. So if I run this, I'm going to scroll down. This only does stuff in the console, but we can see here, let me zoom way more in on this so you can see it. You can see here generation 0 is A. I'm going to stand over here and I'm going to click. Generation 1 is ABA. Then we have that and we can see very quickly, you know, these are massively huge, long strings. So the point of this isn't necessarily what we're doing is to use the text, although you could really imagine, are you constructing some type of kind of poetic-like text or some algorithmic text through some sort of logic? Are the characters, is the L system a series of words instead of characters? Could you use iconography in some type of way? There's so much you could do with L systems. But again, we want these to be instructions for drawing. So I haven't taken this further. An exercise you might take upon yourself is actually render the Cantor set from these L systems if the character is A, draw a line. If it's B, move forward without drawing a line. But we have to ask ourselves a question. What do we mean by draw a line or move forward without drawing a line? Turns out that a lot of the L systems have this type of language. Draw a line, move forward, turn. The turtle graphics, the language of turtle graphics. So let's take a moment to talk about that and see how that works in an L system. So OK, so let's not use A and B anymore. So let's remember back to a time, which I don't know that I ever actually did this. I remember learning like basic. I did a lot of basic programming when I was a kid. But you or somebody in the world definitely used the logo programming language and moved turtles around the screen. What were some things that turtles could do? Turtles could draw a line. So if this is the window, what that means is here's my, I can't draw a turtle, here's my turtle. It might move forward and draw this line while it's moving forward. And now it's here. Turtles could also just move forward, which means they move forward but don't actually draw a line. So you can imagine that as just moving forward. And now the turtle's here. So the line was drawn here. Now move forward. So one of the things they can do is they can turn right or they could turn left. So turning right would mean go this way, turn left would mean go this way. That turn right could be at an angle, a 90 degree angle, 45 degree angle, et cetera. So these are the basic elements of turtle graphics. An L system could have as its alphabet an F, which means draw a line, a G, which means move forward without drawing a line, a plus, which means turn right, a minus, which means turn left. We could use these as the characters in our L system. And we could create rules that generate various patterns that a turtle could draw that are fractal. But this is like a basic turtle graphics engine, but it would be nice to be able to, if you imagine for a second, a turtle taking this path, to be able to maybe remember various points along the path. And if it's over here, it could then pop back to here and start going in this direction. So a turtle as it's going could save where it was, draw a little bit further, then come back and draw a little bit further the other way. After all, if we're going to draw some type of fractal pattern, we might need to branch off one way, come back, branch the other way. This is exactly what we did with our tree example previously. So we might like to introduce this character, which means push matrix. Or really, I kind of like changed the language here, which means save where you are, save state, which means where you are and what direction are you pointing. And this character could mean restore state. So now, if these are the characters in our L system, if these are the members of the alphabet of our L system, we need to write a turtle object that can parse a string and call the right processing functionality to do each one of these things. This would call line and translate. This would also just call translate. This would call rotate, rotate, push matrix, pop matrix. Let's take a look at that. So I'm back over here. And now, this, by the way, was example 8.8. And now I'm going to example 8.9, which is already open. And I'm just going to go to the turtle class. And what I want to look at is this set of code. There is a string called to do dot length. Let's look at every character in the string. And I guess I didn't do this correctly now. I'm going to have to fix this example. If that character is an F, in my scenario, if it's an F or a G, it's drawing a line and moving forward. So technically speaking, if I want it to be accurate according to what I just did on the board over there, else if C equals G, move without drawing the line. And that needs to go there. So F means draw a line and move to the end of the line. G means just move that length. C is rotate minus. Sorry, plus is rotate. Minus is rotate the other direction. And open square bracket, push matrix, close square bracket is pop matrix. So you can see this. And you could probably make the argument that this should be a switch statement, which is another type of syntax for a conditional statement. But just to kind of keep these examples very basic, I'm just using if else if. So this is parsing that string. I'm just taking a look at all of the characters and calling the correct piece of drawing functionality. So this example is essentially the previous example, which makes those else system strings, but it adds on one layer. The turtle can then read that string and draw according to it. So what is an else system that we might use? There's a lot of stuff in the comments here, which I'm going to remove. Let's look at this. So this, by the way, is how this example defines an else system. We have a rule object, and we have an array of rules. And we have, you can see this rule takes an f and turns it into this crazy string. So how did I come up with that crazy string? I found it in that book, or I think actually I found a lot of these from the Computational Beauty of Nature book, chapter, over the correct chapter number, which has a nice section about else systems and a whole lot of example scenarios. OK, so this else system, if we run it, we can see, OK, there is f, right? That's just an f. Draw a line straight from the bottom up. And you know what I would like to do? I apologize. I would like to set the stroke weight to 2, just to make it a little bit thicker. I think you'll be able to see it better. This is just plain old f. Now look, that's the first generation, which you can imagine as f, maybe rotate, draw a line, rotate the other way, draw a line, rotate the other way, draw a line, pop back, then rotate the left, draw a line, rotate up, draw a line, rotate to the right, draw a line, right? Now let's look at another generation. Oh, we can see how this is being applied over and over again. As I click the mouse, I go from generation to generation. And we can see we have a fairly sophisticated tree-like pattern, which is much more complex than what we did without the else system. So even though all of these examples we could do with just a recursive function or we could do with an else system, sometimes the kind of mechanics of the else system allow us to more easily generate this pattern. The great thing about the else system, too, is we have the entire instructions for drawing this encoded into a string. So I'm drawing the whole thing at once, but there's no reason why I couldn't draw it character by character and animate that for you to show how this tree grows, which would be also a great exercise to do or another example that I should make. So now that we've seen this, this is just one scenario. And I guess I should mention, what is an else system object? It has a string, which is its current sentence. It has an array of possible rules, which say what characters become what. And it has a generation that's keeping track of the count. And a rule is really, really simple. A rule is just a character that becomes a string. This is A becomes ABA, B becomes BBB. So these are some simple classes to manage the elements of the else system. I'm going to open up a couple other ones just so you can see. Here is another else system. Maybe this looks kind of similar to you. It's pretty different. You can see also the axiom is F minus F minus F minus F. So when I run this one, we actually can't see it, but there is an axiom, which is drawing a big square. If we say move forward, turn left, move forward. I can't do this. If I do this, move forward, move left, move forward, turn left, move forward, turn left. Making a big box, that's what that axiom does. But as I click, we can see what are we getting. Take a look at this. Try to make this fractal pattern without an else system. You could do it, but the else system is a nice way of doing it. So I forget what this is called. Maybe it has sponge, some sort of sponge, Mercer sponge. Someone correct me. And the last one I'll show you is just the Sierpinski triangle. Here are the rules for making the Sierpinski triangle, where we have F and G. And we can see what we get. And there's our Sierpinski triangle, which we have now done a zillion different ways. We did this with Cider Automata. We did it with this crazy recursive circles that actually made that pattern. Now we're doing it with an else system. So you can see all of these systems can generate these patterns. And it's less about, again, I guess I should finish with this. What's important here is not, hey, you can use the Sierpinski triangle as a design element in everything you make. It's more about, here are a bunch of strategies and techniques for using recursive functions to create designs. It's up to you now to figure out what design do you want to make. Could you actually create your own rules for an else system? An interesting idea is actually to generate random else systems, right? Random alphabets, random rules. So you'll see you mostly get a lot of noise and junk. But in there, there might be some gems. Is there a way you could find those gems? Maybe you could evolve else systems, which is kind of a little foreshadowing to the next chapter we're going to look at genetic algorithms and evolutionary systems. OK, so hopefully you found this helpful. And I will provide a lot of links below and things to stuff that I talked about that will hopefully also be helpful. And there we go.",
    "translation": null
  },
  "error": null,
  "status": "succeeded",
  "created_at": "2023-09-26T21:03:34.372837Z",
  "started_at": "2023-09-26T21:15:20.490658Z",
  "completed_at": "2023-09-26T21:20:43.207465Z",
  "webhook": "https://83ceaa0b612c.ngrok.app/?video_id=f6ra024-ASY",
  "webhook_events_filter": [
    "completed"
  ],
  "metrics": {
    "predict_time": 322.716807
  },
  "urls": {
    "cancel": "https://api.replicate.com/v1/predictions/hr7disjbx7ux4fefklivtb446a/cancel",
    "get": "https://api.replicate.com/v1/predictions/hr7disjbx7ux4fefklivtb446a"
  }
}