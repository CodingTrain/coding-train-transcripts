{
  "id": "4ypzvsrbuoptejtz4mwc6s3p2i",
  "version": "91ee9c0c3df30478510ff8c8a3a545add1ad0259ad3a9f78fba57fbc05ee64f7",
  "input": {
    "audio": "https://upcdn.io/FW25b4F/raw/coding-train/puWqNBFDMMk.m4a"
  },
  "logs": "Transcribe with large-v2 model\nDetected language: English\n  0%|          | 0/41213 [00:00<?, ?frames/s]\n  6%|▌         | 2404/41213 [00:05<01:33, 414.30frames/s]\n 12%|█▏        | 4812/41213 [00:11<01:23, 435.36frames/s]\n 18%|█▊        | 7456/41213 [00:17<01:21, 413.16frames/s]\n 24%|██▍       | 10052/41213 [00:22<01:08, 451.72frames/s]\n 32%|███▏      | 13052/41213 [00:28<00:59, 473.62frames/s]\n 38%|███▊      | 15724/41213 [00:34<00:55, 459.04frames/s]\n 45%|████▌     | 18584/41213 [00:39<00:45, 493.16frames/s]\n 51%|█████     | 21064/41213 [00:46<00:44, 457.17frames/s]\n 58%|█████▊    | 23784/41213 [00:53<00:40, 429.27frames/s]\n 65%|██████▍   | 26600/41213 [00:59<00:33, 432.56frames/s]\n 71%|███████▏  | 29404/41213 [01:06<00:27, 429.00frames/s]\n 78%|███████▊  | 32296/41213 [01:13<00:21, 418.54frames/s]\n 85%|████████▍ | 34920/41213 [01:19<00:15, 419.20frames/s]\n 91%|█████████ | 37452/41213 [01:26<00:09, 415.82frames/s]\n 98%|█████████▊| 40452/41213 [01:31<00:01, 451.45frames/s]\n100%|██████████| 41213/41213 [01:32<00:00, 484.89frames/s]\n100%|██████████| 41213/41213 [01:32<00:00, 446.91frames/s]\n",
  "output": {
    "detected_language": "english",
    "segments": [
      {
        "avg_logprob": -0.3803243637084961,
        "compression_ratio": 1.6255707762557077,
        "end": 6.640000000000001,
        "id": 0,
        "no_speech_prob": 0.04467255249619484,
        "seek": 0,
        "start": 0,
        "temperature": 0,
        "text": " Hello, I'm back. I'm finally getting to that neural network playlist which left off in",
        "tokens": [
          50364,
          2425,
          11,
          286,
          478,
          646,
          13,
          286,
          478,
          2721,
          1242,
          281,
          300,
          18161,
          3209,
          16788,
          597,
          1411,
          766,
          294,
          50696
        ]
      },
      {
        "avg_logprob": -0.3803243637084961,
        "compression_ratio": 1.6255707762557077,
        "end": 10.46,
        "id": 1,
        "no_speech_prob": 0.04467255249619484,
        "seek": 0,
        "start": 7.72,
        "temperature": 0,
        "text": " May and I'm continuing it now you might be watching again",
        "tokens": [
          50750,
          1891,
          293,
          286,
          478,
          9289,
          309,
          586,
          291,
          1062,
          312,
          1976,
          797,
          50887
        ]
      },
      {
        "avg_logprob": -0.3803243637084961,
        "compression_ratio": 1.6255707762557077,
        "end": 16.68,
        "id": 2,
        "no_speech_prob": 0.04467255249619484,
        "seek": 0,
        "start": 10.46,
        "temperature": 0,
        "text": " You might be watching to the future when it's all been completed, but you could see some time passed and here I am again now",
        "tokens": [
          50887,
          509,
          1062,
          312,
          1976,
          281,
          264,
          2027,
          562,
          309,
          311,
          439,
          668,
          7365,
          11,
          457,
          291,
          727,
          536,
          512,
          565,
          4678,
          293,
          510,
          286,
          669,
          797,
          586,
          51198
        ]
      },
      {
        "avg_logprob": -0.3803243637084961,
        "compression_ratio": 1.6255707762557077,
        "end": 21.34,
        "id": 3,
        "no_speech_prob": 0.04467255249619484,
        "seek": 0,
        "start": 17.88,
        "temperature": 0,
        "text": " the last video in this playlist looked at",
        "tokens": [
          51258,
          264,
          1036,
          960,
          294,
          341,
          16788,
          2956,
          412,
          51431
        ]
      },
      {
        "avg_logprob": -0.3803243637084961,
        "compression_ratio": 1.6255707762557077,
        "end": 24.04,
        "id": 4,
        "no_speech_prob": 0.04467255249619484,
        "seek": 0,
        "start": 22.04,
        "temperature": 0,
        "text": " Vector math and I believe I looked at adding",
        "tokens": [
          51466,
          691,
          20814,
          5221,
          293,
          286,
          1697,
          286,
          2956,
          412,
          5127,
          51566
        ]
      },
      {
        "avg_logprob": -0.38521962226191653,
        "compression_ratio": 1.6009389671361502,
        "end": 30.56,
        "id": 5,
        "no_speech_prob": 0.0007793521508574486,
        "seek": 2404,
        "start": 24.68,
        "temperature": 0,
        "text": " I can actually look it up here. The last thing I did was this function multiply, which was simply",
        "tokens": [
          50396,
          286,
          393,
          767,
          574,
          309,
          493,
          510,
          13,
          440,
          1036,
          551,
          286,
          630,
          390,
          341,
          2445,
          12972,
          11,
          597,
          390,
          2935,
          50690
        ]
      },
      {
        "avg_logprob": -0.38521962226191653,
        "compression_ratio": 1.6009389671361502,
        "end": 32.72,
        "id": 6,
        "no_speech_prob": 0.0007793521508574486,
        "seek": 2404,
        "start": 31.439999999999998,
        "temperature": 0,
        "text": " multiplying a",
        "tokens": [
          50734,
          30955,
          257,
          50798
        ]
      },
      {
        "avg_logprob": -0.38521962226191653,
        "compression_ratio": 1.6009389671361502,
        "end": 38.5,
        "id": 7,
        "no_speech_prob": 0.0007793521508574486,
        "seek": 2404,
        "start": 32.72,
        "temperature": 0,
        "text": " Matrix by a scalar so taking each element of a matrix and multiplying it by a single number now",
        "tokens": [
          50798,
          36274,
          538,
          257,
          39684,
          370,
          1940,
          1184,
          4478,
          295,
          257,
          8141,
          293,
          30955,
          309,
          538,
          257,
          2167,
          1230,
          586,
          51087
        ]
      },
      {
        "avg_logprob": -0.38521962226191653,
        "compression_ratio": 1.6009389671361502,
        "end": 42.480000000000004,
        "id": 8,
        "no_speech_prob": 0.0007793521508574486,
        "seek": 2404,
        "start": 38.519999999999996,
        "temperature": 0,
        "text": " You also might notice here matrix dot prototype dot multiply",
        "tokens": [
          51088,
          509,
          611,
          1062,
          3449,
          510,
          8141,
          5893,
          19475,
          5893,
          12972,
          51286
        ]
      },
      {
        "avg_logprob": -0.38521962226191653,
        "compression_ratio": 1.6009389671361502,
        "end": 48.120000000000005,
        "id": 9,
        "no_speech_prob": 0.0007793521508574486,
        "seek": 2404,
        "start": 43.239999999999995,
        "temperature": 0,
        "text": " What is that? Well since I last did these videos I have started adopting",
        "tokens": [
          51324,
          708,
          307,
          300,
          30,
          1042,
          1670,
          286,
          1036,
          630,
          613,
          2145,
          286,
          362,
          1409,
          32328,
          51568
        ]
      },
      {
        "avg_logprob": -0.30451234181722003,
        "compression_ratio": 1.6115384615384616,
        "end": 53.959999999999994,
        "id": 10,
        "no_speech_prob": 0.015423635020852089,
        "seek": 4812,
        "start": 48.879999999999995,
        "temperature": 0,
        "text": " ES6 classes class is a template for creating an object that's part of",
        "tokens": [
          50402,
          12564,
          21,
          5359,
          1508,
          307,
          257,
          12379,
          337,
          4084,
          364,
          2657,
          300,
          311,
          644,
          295,
          50656
        ]
      },
      {
        "avg_logprob": -0.30451234181722003,
        "compression_ratio": 1.6115384615384616,
        "end": 58.28,
        "id": 11,
        "no_speech_prob": 0.015423635020852089,
        "seek": 4812,
        "start": 55.04,
        "temperature": 0,
        "text": " ECMA scripts version 6 yada yada yada",
        "tokens": [
          50710,
          19081,
          9998,
          23294,
          3037,
          1386,
          288,
          1538,
          288,
          1538,
          288,
          1538,
          50872
        ]
      },
      {
        "avg_logprob": -0.30451234181722003,
        "compression_ratio": 1.6115384615384616,
        "end": 63.16,
        "id": 12,
        "no_speech_prob": 0.015423635020852089,
        "seek": 4812,
        "start": 58.28,
        "temperature": 0,
        "text": " I have a whole playlist about that stuff if you don't know about classes you can go and look at those tutorials",
        "tokens": [
          50872,
          286,
          362,
          257,
          1379,
          16788,
          466,
          300,
          1507,
          498,
          291,
          500,
          380,
          458,
          466,
          5359,
          291,
          393,
          352,
          293,
          574,
          412,
          729,
          17616,
          51116
        ]
      },
      {
        "avg_logprob": -0.30451234181722003,
        "compression_ratio": 1.6115384615384616,
        "end": 69.4,
        "id": 13,
        "no_speech_prob": 0.015423635020852089,
        "seek": 4812,
        "start": 63.16,
        "temperature": 0,
        "text": " But before I move on and finish the vector the matrix math that we need to build this neural network",
        "tokens": [
          51116,
          583,
          949,
          286,
          1286,
          322,
          293,
          2413,
          264,
          8062,
          264,
          8141,
          5221,
          300,
          321,
          643,
          281,
          1322,
          341,
          18161,
          3209,
          51428
        ]
      },
      {
        "avg_logprob": -0.30451234181722003,
        "compression_ratio": 1.6115384615384616,
        "end": 74.56,
        "id": 14,
        "no_speech_prob": 0.015423635020852089,
        "seek": 4812,
        "start": 69.4,
        "temperature": 0,
        "text": " I want to rewrite all of the what I have so far with ES6. So that's all I'm gonna do in this video",
        "tokens": [
          51428,
          286,
          528,
          281,
          28132,
          439,
          295,
          264,
          437,
          286,
          362,
          370,
          1400,
          365,
          12564,
          21,
          13,
          407,
          300,
          311,
          439,
          286,
          478,
          799,
          360,
          294,
          341,
          960,
          51686
        ]
      },
      {
        "avg_logprob": -0.3385990440071403,
        "compression_ratio": 1.7340425531914894,
        "end": 78.60000000000001,
        "id": 15,
        "no_speech_prob": 0.0004512077139224857,
        "seek": 7456,
        "start": 75.12,
        "temperature": 0,
        "text": " Okay, so let's actually do that first let's wander over",
        "tokens": [
          50392,
          1033,
          11,
          370,
          718,
          311,
          767,
          360,
          300,
          700,
          718,
          311,
          27541,
          670,
          50566
        ]
      },
      {
        "avg_logprob": -0.3385990440071403,
        "compression_ratio": 1.7340425531914894,
        "end": 84.48,
        "id": 16,
        "no_speech_prob": 0.0004512077139224857,
        "seek": 7456,
        "start": 78.60000000000001,
        "temperature": 0,
        "text": " I was first building a neural network object the idea of a neural network is having input nodes a",
        "tokens": [
          50566,
          286,
          390,
          700,
          2390,
          257,
          18161,
          3209,
          2657,
          264,
          1558,
          295,
          257,
          18161,
          3209,
          307,
          1419,
          4846,
          13891,
          257,
          50860
        ]
      },
      {
        "avg_logprob": -0.3385990440071403,
        "compression_ratio": 1.7340425531914894,
        "end": 92.76,
        "id": 17,
        "no_speech_prob": 0.0004512077139224857,
        "seek": 7456,
        "start": 84.8,
        "temperature": 0,
        "text": " Hidden layer and output nodes, so let me first change this to be a class class neural",
        "tokens": [
          50876,
          41156,
          4583,
          293,
          5598,
          13891,
          11,
          370,
          718,
          385,
          700,
          1319,
          341,
          281,
          312,
          257,
          1508,
          1508,
          18161,
          51274
        ]
      },
      {
        "avg_logprob": -0.3385990440071403,
        "compression_ratio": 1.7340425531914894,
        "end": 95.16,
        "id": 18,
        "no_speech_prob": 0.0004512077139224857,
        "seek": 7456,
        "start": 93.88,
        "temperature": 0,
        "text": " network",
        "tokens": [
          51330,
          3209,
          51394
        ]
      },
      {
        "avg_logprob": -0.3385990440071403,
        "compression_ratio": 1.7340425531914894,
        "end": 100.52000000000001,
        "id": 19,
        "no_speech_prob": 0.0004512077139224857,
        "seek": 7456,
        "start": 95.16,
        "temperature": 0,
        "text": " And then once I have a class this constructor function actually can now become",
        "tokens": [
          51394,
          400,
          550,
          1564,
          286,
          362,
          257,
          1508,
          341,
          47479,
          2445,
          767,
          393,
          586,
          1813,
          51662
        ]
      },
      {
        "avg_logprob": -0.3174144390017487,
        "compression_ratio": 1.6651162790697673,
        "end": 103.36,
        "id": 20,
        "no_speech_prob": 0.000013419964489003178,
        "seek": 10052,
        "start": 101.52,
        "temperature": 0,
        "text": " Constructor",
        "tokens": [
          50414,
          8574,
          14535,
          50506
        ]
      },
      {
        "avg_logprob": -0.3174144390017487,
        "compression_ratio": 1.6651162790697673,
        "end": 109.24,
        "id": 21,
        "no_speech_prob": 0.000013419964489003178,
        "seek": 10052,
        "start": 103.36,
        "temperature": 0,
        "text": " Call constructor, and you know what what the method that I'm kind of adopting is when I pass arguments in I",
        "tokens": [
          50506,
          7807,
          47479,
          11,
          293,
          291,
          458,
          437,
          437,
          264,
          3170,
          300,
          286,
          478,
          733,
          295,
          32328,
          307,
          562,
          286,
          1320,
          12869,
          294,
          286,
          50800
        ]
      },
      {
        "avg_logprob": -0.3174144390017487,
        "compression_ratio": 1.6651162790697673,
        "end": 111.88,
        "id": 22,
        "no_speech_prob": 0.000013419964489003178,
        "seek": 10052,
        "start": 109.88,
        "temperature": 0,
        "text": " Actually give those arguments",
        "tokens": [
          50832,
          5135,
          976,
          729,
          12869,
          50932
        ]
      },
      {
        "avg_logprob": -0.3174144390017487,
        "compression_ratio": 1.6651162790697673,
        "end": 115.72,
        "id": 23,
        "no_speech_prob": 0.000013419964489003178,
        "seek": 10052,
        "start": 113.32,
        "temperature": 0,
        "text": " Parameters I guess in this case in the constructor definition",
        "tokens": [
          51004,
          34882,
          6202,
          286,
          2041,
          294,
          341,
          1389,
          294,
          264,
          47479,
          7123,
          51124
        ]
      },
      {
        "avg_logprob": -0.3174144390017487,
        "compression_ratio": 1.6651162790697673,
        "end": 122.92,
        "id": 24,
        "no_speech_prob": 0.000013419964489003178,
        "seek": 10052,
        "start": 115.72,
        "temperature": 0,
        "text": " I give those parameters the same name as the properties attached to the object and they are differentiated by",
        "tokens": [
          51124,
          286,
          976,
          729,
          9834,
          264,
          912,
          1315,
          382,
          264,
          7221,
          8570,
          281,
          264,
          2657,
          293,
          436,
          366,
          27372,
          770,
          538,
          51484
        ]
      },
      {
        "avg_logprob": -0.3174144390017487,
        "compression_ratio": 1.6651162790697673,
        "end": 125.72,
        "id": 25,
        "no_speech_prob": 0.000013419964489003178,
        "seek": 10052,
        "start": 123.72,
        "temperature": 0,
        "text": " Say it with me",
        "tokens": [
          51524,
          6463,
          309,
          365,
          385,
          51624
        ]
      },
      {
        "avg_logprob": -0.3174144390017487,
        "compression_ratio": 1.6651162790697673,
        "end": 127.75999999999999,
        "id": 26,
        "no_speech_prob": 0.000013419964489003178,
        "seek": 10052,
        "start": 125.75999999999999,
        "temperature": 0,
        "text": " this dot",
        "tokens": [
          51626,
          341,
          5893,
          51726
        ]
      },
      {
        "avg_logprob": -0.3174144390017487,
        "compression_ratio": 1.6651162790697673,
        "end": 130.04,
        "id": 27,
        "no_speech_prob": 0.000013419964489003178,
        "seek": 10052,
        "start": 128.04,
        "temperature": 0,
        "text": " That's right",
        "tokens": [
          51740,
          663,
          311,
          558,
          51840
        ]
      },
      {
        "avg_logprob": -0.3380688137478299,
        "compression_ratio": 1.708133971291866,
        "end": 132.52,
        "id": 28,
        "no_speech_prob": 0.000025867293516057543,
        "seek": 13052,
        "start": 130.52,
        "temperature": 0,
        "text": " this dot",
        "tokens": [
          50364,
          341,
          5893,
          50464
        ]
      },
      {
        "avg_logprob": -0.3380688137478299,
        "compression_ratio": 1.708133971291866,
        "end": 136.92000000000002,
        "id": 29,
        "no_speech_prob": 0.000025867293516057543,
        "seek": 13052,
        "start": 134.92000000000002,
        "temperature": 0,
        "text": " Okay, so",
        "tokens": [
          50584,
          1033,
          11,
          370,
          50684
        ]
      },
      {
        "avg_logprob": -0.3380688137478299,
        "compression_ratio": 1.708133971291866,
        "end": 140.68,
        "id": 30,
        "no_speech_prob": 0.000025867293516057543,
        "seek": 13052,
        "start": 138.24,
        "temperature": 0,
        "text": " So there we go so now I've converted the neural network",
        "tokens": [
          50750,
          407,
          456,
          321,
          352,
          370,
          586,
          286,
          600,
          16424,
          264,
          18161,
          3209,
          50872
        ]
      },
      {
        "avg_logprob": -0.3380688137478299,
        "compression_ratio": 1.708133971291866,
        "end": 147.8,
        "id": 31,
        "no_speech_prob": 0.000025867293516057543,
        "seek": 13052,
        "start": 141.44,
        "temperature": 0,
        "text": " Class it wasn't a class before but the constructor function into an ES6 class now. I've got to do the same thing with the matrix",
        "tokens": [
          50910,
          9471,
          309,
          2067,
          380,
          257,
          1508,
          949,
          457,
          264,
          47479,
          2445,
          666,
          364,
          12564,
          21,
          1508,
          586,
          13,
          286,
          600,
          658,
          281,
          360,
          264,
          912,
          551,
          365,
          264,
          8141,
          51228
        ]
      },
      {
        "avg_logprob": -0.3380688137478299,
        "compression_ratio": 1.708133971291866,
        "end": 154.48000000000002,
        "id": 32,
        "no_speech_prob": 0.000025867293516057543,
        "seek": 13052,
        "start": 148.52,
        "temperature": 0,
        "text": " Constructor function so this was the matrix constructor function, and I now want this to be a class called matrix",
        "tokens": [
          51264,
          8574,
          14535,
          2445,
          370,
          341,
          390,
          264,
          8141,
          47479,
          2445,
          11,
          293,
          286,
          586,
          528,
          341,
          281,
          312,
          257,
          1508,
          1219,
          8141,
          51562
        ]
      },
      {
        "avg_logprob": -0.3380688137478299,
        "compression_ratio": 1.708133971291866,
        "end": 157.24,
        "id": 33,
        "no_speech_prob": 0.000025867293516057543,
        "seek": 13052,
        "start": 154.48000000000002,
        "temperature": 0,
        "text": " And I'm gonna put this around everything",
        "tokens": [
          51562,
          400,
          286,
          478,
          799,
          829,
          341,
          926,
          1203,
          51700
        ]
      },
      {
        "avg_logprob": -0.34732311650326375,
        "compression_ratio": 1.675392670157068,
        "end": 160.24,
        "id": 34,
        "no_speech_prob": 0.00010071341239381582,
        "seek": 15724,
        "start": 158.24,
        "temperature": 0,
        "text": " And I",
        "tokens": [
          50414,
          400,
          286,
          50514
        ]
      },
      {
        "avg_logprob": -0.34732311650326375,
        "compression_ratio": 1.675392670157068,
        "end": 167.84,
        "id": 35,
        "no_speech_prob": 0.00010071341239381582,
        "seek": 15724,
        "start": 161.60000000000002,
        "temperature": 0,
        "text": " Don't know what Adam wants me to do, but okay, and then this constructor function is now called",
        "tokens": [
          50582,
          1468,
          380,
          458,
          437,
          7938,
          2738,
          385,
          281,
          360,
          11,
          457,
          1392,
          11,
          293,
          550,
          341,
          47479,
          2445,
          307,
          586,
          1219,
          50894
        ]
      },
      {
        "avg_logprob": -0.34732311650326375,
        "compression_ratio": 1.675392670157068,
        "end": 176.36,
        "id": 36,
        "no_speech_prob": 0.00010071341239381582,
        "seek": 15724,
        "start": 169.76000000000002,
        "temperature": 0,
        "text": " Constructor this is what happens in the constructor, and this is just the randomized function",
        "tokens": [
          50990,
          8574,
          14535,
          341,
          307,
          437,
          2314,
          294,
          264,
          47479,
          11,
          293,
          341,
          307,
          445,
          264,
          38513,
          2445,
          51320
        ]
      },
      {
        "avg_logprob": -0.34732311650326375,
        "compression_ratio": 1.675392670157068,
        "end": 182.4,
        "id": 37,
        "no_speech_prob": 0.00010071341239381582,
        "seek": 15724,
        "start": 177.44,
        "temperature": 0,
        "text": " All these functions that are attached to the prototype can just be written by their name",
        "tokens": [
          51374,
          1057,
          613,
          6828,
          300,
          366,
          8570,
          281,
          264,
          19475,
          393,
          445,
          312,
          3720,
          538,
          641,
          1315,
          51622
        ]
      },
      {
        "avg_logprob": -0.34732311650326375,
        "compression_ratio": 1.675392670157068,
        "end": 185.84,
        "id": 38,
        "no_speech_prob": 0.00010071341239381582,
        "seek": 15724,
        "start": 183.36,
        "temperature": 0,
        "text": " inside of the class this is add and",
        "tokens": [
          51670,
          1854,
          295,
          264,
          1508,
          341,
          307,
          909,
          293,
          51794
        ]
      },
      {
        "avg_logprob": -0.3412191290604441,
        "compression_ratio": 1.6490384615384615,
        "end": 188.84,
        "id": 39,
        "no_speech_prob": 0.00013135088374838233,
        "seek": 18584,
        "start": 186.84,
        "temperature": 0,
        "text": " This is",
        "tokens": [
          50414,
          639,
          307,
          50514
        ]
      },
      {
        "avg_logprob": -0.3412191290604441,
        "compression_ratio": 1.6490384615384615,
        "end": 192.72,
        "id": 40,
        "no_speech_prob": 0.00013135088374838233,
        "seek": 18584,
        "start": 189.16,
        "temperature": 0,
        "text": " Multiply that's what we're gonna be working on the next video alright, so",
        "tokens": [
          50530,
          31150,
          356,
          300,
          311,
          437,
          321,
          434,
          799,
          312,
          1364,
          322,
          264,
          958,
          960,
          5845,
          11,
          370,
          50708
        ]
      },
      {
        "avg_logprob": -0.3412191290604441,
        "compression_ratio": 1.6490384615384615,
        "end": 198.04,
        "id": 41,
        "no_speech_prob": 0.00013135088374838233,
        "seek": 18584,
        "start": 193.64000000000001,
        "temperature": 0,
        "text": " So in a moment. I want to check let me let me check to make sure this is like still working",
        "tokens": [
          50754,
          407,
          294,
          257,
          1623,
          13,
          286,
          528,
          281,
          1520,
          718,
          385,
          718,
          385,
          1520,
          281,
          652,
          988,
          341,
          307,
          411,
          920,
          1364,
          50974
        ]
      },
      {
        "avg_logprob": -0.3412191290604441,
        "compression_ratio": 1.6490384615384615,
        "end": 200.28,
        "id": 42,
        "no_speech_prob": 0.00013135088374838233,
        "seek": 18584,
        "start": 198.28,
        "temperature": 0,
        "text": " So if I go to the browser",
        "tokens": [
          50986,
          407,
          498,
          286,
          352,
          281,
          264,
          11185,
          51086
        ]
      },
      {
        "avg_logprob": -0.3412191290604441,
        "compression_ratio": 1.6490384615384615,
        "end": 205.6,
        "id": 43,
        "no_speech_prob": 0.00013135088374838233,
        "seek": 18584,
        "start": 200.84,
        "temperature": 0,
        "text": " Refresh the page. I should be able to say things like let M equal a new matrix",
        "tokens": [
          51114,
          16957,
          3644,
          264,
          3028,
          13,
          286,
          820,
          312,
          1075,
          281,
          584,
          721,
          411,
          718,
          376,
          2681,
          257,
          777,
          8141,
          51352
        ]
      },
      {
        "avg_logprob": -0.3412191290604441,
        "compression_ratio": 1.6490384615384615,
        "end": 210.64000000000001,
        "id": 44,
        "no_speech_prob": 0.00013135088374838233,
        "seek": 18584,
        "start": 205.92000000000002,
        "temperature": 0,
        "text": " Three three by three I should be able to say console dot table M",
        "tokens": [
          51368,
          6244,
          1045,
          538,
          1045,
          286,
          820,
          312,
          1075,
          281,
          584,
          11076,
          5893,
          3199,
          376,
          51604
        ]
      },
      {
        "avg_logprob": -0.34069852739851053,
        "compression_ratio": 1.6781115879828326,
        "end": 217.04,
        "id": 45,
        "no_speech_prob": 0.00022693214123137295,
        "seek": 21064,
        "start": 210.79999999999998,
        "temperature": 0,
        "text": " And I can see oops nope I did this mistake in my previous is console dot table",
        "tokens": [
          50372,
          400,
          286,
          393,
          536,
          34166,
          23444,
          286,
          630,
          341,
          6146,
          294,
          452,
          3894,
          307,
          11076,
          5893,
          3199,
          50684
        ]
      },
      {
        "avg_logprob": -0.34069852739851053,
        "compression_ratio": 1.6781115879828326,
        "end": 224.51999999999998,
        "id": 46,
        "no_speech_prob": 0.00022693214123137295,
        "seek": 21064,
        "start": 217.32,
        "temperature": 0,
        "text": " M dot matrix and you can see there it is so this seems to be and I could say M dot add the number five",
        "tokens": [
          50698,
          376,
          5893,
          8141,
          293,
          291,
          393,
          536,
          456,
          309,
          307,
          370,
          341,
          2544,
          281,
          312,
          293,
          286,
          727,
          584,
          376,
          5893,
          909,
          264,
          1230,
          1732,
          51058
        ]
      },
      {
        "avg_logprob": -0.34069852739851053,
        "compression_ratio": 1.6781115879828326,
        "end": 228.72,
        "id": 47,
        "no_speech_prob": 0.00022693214123137295,
        "seek": 21064,
        "start": 224.51999999999998,
        "temperature": 0,
        "text": " And then I could look at it, so it still seems to be working. I have a matrix",
        "tokens": [
          51058,
          400,
          550,
          286,
          727,
          574,
          412,
          309,
          11,
          370,
          309,
          920,
          2544,
          281,
          312,
          1364,
          13,
          286,
          362,
          257,
          8141,
          51268
        ]
      },
      {
        "avg_logprob": -0.34069852739851053,
        "compression_ratio": 1.6781115879828326,
        "end": 232.95999999999998,
        "id": 48,
        "no_speech_prob": 0.00022693214123137295,
        "seek": 21064,
        "start": 229.04,
        "temperature": 0,
        "text": " That's three by three it gets it by default. It's filled with zeros",
        "tokens": [
          51284,
          663,
          311,
          1045,
          538,
          1045,
          309,
          2170,
          309,
          538,
          7576,
          13,
          467,
          311,
          6412,
          365,
          35193,
          51480
        ]
      },
      {
        "avg_logprob": -0.34069852739851053,
        "compression_ratio": 1.6781115879828326,
        "end": 237.83999999999997,
        "id": 49,
        "no_speech_prob": 0.00022693214123137295,
        "seek": 21064,
        "start": 233.83999999999997,
        "temperature": 0,
        "text": " If I add five to it it looks like five if I say M dot randomize",
        "tokens": [
          51524,
          759,
          286,
          909,
          1732,
          281,
          309,
          309,
          1542,
          411,
          1732,
          498,
          286,
          584,
          376,
          5893,
          4974,
          1125,
          51724
        ]
      },
      {
        "avg_logprob": -0.3176930493647509,
        "compression_ratio": 1.548936170212766,
        "end": 239.88,
        "id": 50,
        "no_speech_prob": 0.00004539773362921551,
        "seek": 23784,
        "start": 237.88,
        "temperature": 0,
        "text": " Now",
        "tokens": [
          50366,
          823,
          50466
        ]
      },
      {
        "avg_logprob": -0.3176930493647509,
        "compression_ratio": 1.548936170212766,
        "end": 244.12,
        "id": 51,
        "no_speech_prob": 0.00004539773362921551,
        "seek": 23784,
        "start": 239.92000000000002,
        "temperature": 0,
        "text": " I can look at it again. It has random numbers, so it's still working. That's good",
        "tokens": [
          50468,
          286,
          393,
          574,
          412,
          309,
          797,
          13,
          467,
          575,
          4974,
          3547,
          11,
          370,
          309,
          311,
          920,
          1364,
          13,
          663,
          311,
          665,
          50678
        ]
      },
      {
        "avg_logprob": -0.3176930493647509,
        "compression_ratio": 1.548936170212766,
        "end": 247.4,
        "id": 52,
        "no_speech_prob": 0.00004539773362921551,
        "seek": 23784,
        "start": 245.4,
        "temperature": 0,
        "text": " Now here's the other aspect of this",
        "tokens": [
          50742,
          823,
          510,
          311,
          264,
          661,
          4171,
          295,
          341,
          50842
        ]
      },
      {
        "avg_logprob": -0.3176930493647509,
        "compression_ratio": 1.548936170212766,
        "end": 250.16,
        "id": 53,
        "no_speech_prob": 0.00004539773362921551,
        "seek": 23784,
        "start": 248.16,
        "temperature": 0,
        "text": " one thing you might notice is",
        "tokens": [
          50880,
          472,
          551,
          291,
          1062,
          3449,
          307,
          50980
        ]
      },
      {
        "avg_logprob": -0.3176930493647509,
        "compression_ratio": 1.548936170212766,
        "end": 252.84,
        "id": 54,
        "no_speech_prob": 0.00004539773362921551,
        "seek": 23784,
        "start": 250.84,
        "temperature": 0,
        "text": " that I'm doing a lot of",
        "tokens": [
          51014,
          300,
          286,
          478,
          884,
          257,
          688,
          295,
          51114
        ]
      },
      {
        "avg_logprob": -0.3176930493647509,
        "compression_ratio": 1.548936170212766,
        "end": 257.36,
        "id": 55,
        "no_speech_prob": 0.00004539773362921551,
        "seek": 23784,
        "start": 253.04,
        "temperature": 0,
        "text": " loops and array operations like I'm saying hey for",
        "tokens": [
          51124,
          16121,
          293,
          10225,
          7705,
          411,
          286,
          478,
          1566,
          4177,
          337,
          51340
        ]
      },
      {
        "avg_logprob": -0.3176930493647509,
        "compression_ratio": 1.548936170212766,
        "end": 262.76,
        "id": 56,
        "no_speech_prob": 0.00004539773362921551,
        "seek": 23784,
        "start": 257.52,
        "temperature": 0,
        "text": " Every element of this array at index I at index J. Do this thing except there are actually",
        "tokens": [
          51348,
          2048,
          4478,
          295,
          341,
          10225,
          412,
          8186,
          286,
          412,
          8186,
          508,
          13,
          1144,
          341,
          551,
          3993,
          456,
          366,
          767,
          51610
        ]
      },
      {
        "avg_logprob": -0.3176930493647509,
        "compression_ratio": 1.548936170212766,
        "end": 266,
        "id": 57,
        "no_speech_prob": 0.00004539773362921551,
        "seek": 23784,
        "start": 263.32,
        "temperature": 0,
        "text": " You probably know this already. I'm a bit slow",
        "tokens": [
          51638,
          509,
          1391,
          458,
          341,
          1217,
          13,
          286,
          478,
          257,
          857,
          2964,
          51772
        ]
      },
      {
        "avg_logprob": -0.28444053649902346,
        "compression_ratio": 1.7041666666666666,
        "end": 271.12,
        "id": 58,
        "no_speech_prob": 0.000025466357328696176,
        "seek": 26600,
        "start": 266.6,
        "temperature": 0,
        "text": " To catch up with these things there are a bunch of useful array functions",
        "tokens": [
          50394,
          1407,
          3745,
          493,
          365,
          613,
          721,
          456,
          366,
          257,
          3840,
          295,
          4420,
          10225,
          6828,
          50620
        ]
      },
      {
        "avg_logprob": -0.28444053649902346,
        "compression_ratio": 1.7041666666666666,
        "end": 274.88,
        "id": 59,
        "no_speech_prob": 0.000025466357328696176,
        "seek": 26600,
        "start": 271.12,
        "temperature": 0,
        "text": " I often think of them as es6 like this video is about converting it to es6",
        "tokens": [
          50620,
          286,
          2049,
          519,
          295,
          552,
          382,
          785,
          21,
          411,
          341,
          960,
          307,
          466,
          29942,
          309,
          281,
          785,
          21,
          50808
        ]
      },
      {
        "avg_logprob": -0.28444053649902346,
        "compression_ratio": 1.7041666666666666,
        "end": 280.24,
        "id": 60,
        "no_speech_prob": 0.000025466357328696176,
        "seek": 26600,
        "start": 274.88,
        "temperature": 0,
        "text": " But really they've been around before es6 and these are those these functions called like map",
        "tokens": [
          50808,
          583,
          534,
          436,
          600,
          668,
          926,
          949,
          785,
          21,
          293,
          613,
          366,
          729,
          613,
          6828,
          1219,
          411,
          4471,
          51076
        ]
      },
      {
        "avg_logprob": -0.28444053649902346,
        "compression_ratio": 1.7041666666666666,
        "end": 284,
        "id": 61,
        "no_speech_prob": 0.000025466357328696176,
        "seek": 26600,
        "start": 282,
        "temperature": 0,
        "text": " Reduces one",
        "tokens": [
          51164,
          4477,
          84,
          887,
          472,
          51264
        ]
      },
      {
        "avg_logprob": -0.28444053649902346,
        "compression_ratio": 1.7041666666666666,
        "end": 288.98,
        "id": 62,
        "no_speech_prob": 0.000025466357328696176,
        "seek": 26600,
        "start": 284.2,
        "temperature": 0,
        "text": " Fill is one and a filter. I actually don't remember what filter does",
        "tokens": [
          51274,
          25315,
          307,
          472,
          293,
          257,
          6608,
          13,
          286,
          767,
          500,
          380,
          1604,
          437,
          6608,
          775,
          51513
        ]
      },
      {
        "avg_logprob": -0.28444053649902346,
        "compression_ratio": 1.7041666666666666,
        "end": 294.04,
        "id": 63,
        "no_speech_prob": 0.000025466357328696176,
        "seek": 26600,
        "start": 288.98,
        "temperature": 0,
        "text": " I know what these do and I think having access to using some of these array functions",
        "tokens": [
          51513,
          286,
          458,
          437,
          613,
          360,
          293,
          286,
          519,
          1419,
          2105,
          281,
          1228,
          512,
          295,
          613,
          10225,
          6828,
          51766
        ]
      },
      {
        "avg_logprob": -0.2927810351053874,
        "compression_ratio": 1.6719367588932805,
        "end": 300.20000000000005,
        "id": 64,
        "no_speech_prob": 0.00004539774454315193,
        "seek": 29404,
        "start": 294.16,
        "temperature": 0,
        "text": " Will make this matrix lot will be useful in the development of this matrix library however",
        "tokens": [
          50370,
          3099,
          652,
          341,
          8141,
          688,
          486,
          312,
          4420,
          294,
          264,
          3250,
          295,
          341,
          8141,
          6405,
          4461,
          50672
        ]
      },
      {
        "avg_logprob": -0.2927810351053874,
        "compression_ratio": 1.6719367588932805,
        "end": 306.24,
        "id": 65,
        "no_speech_prob": 0.00004539774454315193,
        "seek": 29404,
        "start": 300.64000000000004,
        "temperature": 0,
        "text": " For simplicity's sake as I go on into the next video. I am still going to do all of the",
        "tokens": [
          50694,
          1171,
          25632,
          311,
          9717,
          382,
          286,
          352,
          322,
          666,
          264,
          958,
          960,
          13,
          286,
          669,
          920,
          516,
          281,
          360,
          439,
          295,
          264,
          50974
        ]
      },
      {
        "avg_logprob": -0.2927810351053874,
        "compression_ratio": 1.6719367588932805,
        "end": 314.20000000000005,
        "id": 66,
        "no_speech_prob": 0.00004539774454315193,
        "seek": 29404,
        "start": 307.44,
        "temperature": 0,
        "text": " Matrix math operations in the sort of longest long windedest way, but actually a word, but in a very long winded way",
        "tokens": [
          51034,
          36274,
          5221,
          7705,
          294,
          264,
          1333,
          295,
          15438,
          938,
          2468,
          292,
          377,
          636,
          11,
          457,
          767,
          257,
          1349,
          11,
          457,
          294,
          257,
          588,
          938,
          2468,
          292,
          636,
          51372
        ]
      },
      {
        "avg_logprob": -0.2927810351053874,
        "compression_ratio": 1.6719367588932805,
        "end": 320.76,
        "id": 67,
        "no_speech_prob": 0.00004539774454315193,
        "seek": 29404,
        "start": 315.16,
        "temperature": 0,
        "text": " Then at the end I'll try to come back and and and use some of these and I and I should mention that",
        "tokens": [
          51420,
          1396,
          412,
          264,
          917,
          286,
          603,
          853,
          281,
          808,
          646,
          293,
          293,
          293,
          764,
          512,
          295,
          613,
          293,
          286,
          293,
          286,
          820,
          2152,
          300,
          51700
        ]
      },
      {
        "avg_logprob": -0.2927810351053874,
        "compression_ratio": 1.6719367588932805,
        "end": 322.96000000000004,
        "id": 68,
        "no_speech_prob": 0.00004539774454315193,
        "seek": 29404,
        "start": 320.96000000000004,
        "temperature": 0,
        "text": " Where am I going with this?",
        "tokens": [
          51710,
          2305,
          669,
          286,
          516,
          365,
          341,
          30,
          51810
        ]
      },
      {
        "avg_logprob": -0.3454136481651893,
        "compression_ratio": 1.6844444444444444,
        "end": 330.2,
        "id": 69,
        "no_speech_prob": 0.0000217825872823596,
        "seek": 32296,
        "start": 323.12,
        "temperature": 0,
        "text": " Eventually this I want to learn and understand all of these matrix operations and write the code for them to kind of get my hands",
        "tokens": [
          50372,
          17586,
          341,
          286,
          528,
          281,
          1466,
          293,
          1223,
          439,
          295,
          613,
          8141,
          7705,
          293,
          2464,
          264,
          3089,
          337,
          552,
          281,
          733,
          295,
          483,
          452,
          2377,
          50726
        ]
      },
      {
        "avg_logprob": -0.3454136481651893,
        "compression_ratio": 1.6844444444444444,
        "end": 335.79999999999995,
        "id": 70,
        "no_speech_prob": 0.0000217825872823596,
        "seek": 32296,
        "start": 330.2,
        "temperature": 0,
        "text": " In there and figure it out, but in the end. I'm gonna actually take out all of this stuff and",
        "tokens": [
          50726,
          682,
          456,
          293,
          2573,
          309,
          484,
          11,
          457,
          294,
          264,
          917,
          13,
          286,
          478,
          799,
          767,
          747,
          484,
          439,
          295,
          341,
          1507,
          293,
          51006
        ]
      },
      {
        "avg_logprob": -0.3454136481651893,
        "compression_ratio": 1.6844444444444444,
        "end": 338.84,
        "id": 71,
        "no_speech_prob": 0.0000217825872823596,
        "seek": 32296,
        "start": 336.35999999999996,
        "temperature": 0,
        "text": " replace all of the",
        "tokens": [
          51034,
          7406,
          439,
          295,
          264,
          51158
        ]
      },
      {
        "avg_logprob": -0.3454136481651893,
        "compression_ratio": 1.6844444444444444,
        "end": 344.74,
        "id": 72,
        "no_speech_prob": 0.0000217825872823596,
        "seek": 32296,
        "start": 339.2,
        "temperature": 0,
        "text": " Matrix operations with a library from Google called deep learn dot JS",
        "tokens": [
          51176,
          36274,
          7705,
          365,
          257,
          6405,
          490,
          3329,
          1219,
          2452,
          1466,
          5893,
          33063,
          51453
        ]
      },
      {
        "avg_logprob": -0.3454136481651893,
        "compression_ratio": 1.6844444444444444,
        "end": 349.2,
        "id": 73,
        "no_speech_prob": 0.0000217825872823596,
        "seek": 32296,
        "start": 344.79999999999995,
        "temperature": 0,
        "text": " so stay tuned there's gonna be a lot more about this library and a",
        "tokens": [
          51456,
          370,
          1754,
          10870,
          456,
          311,
          799,
          312,
          257,
          688,
          544,
          466,
          341,
          6405,
          293,
          257,
          51676
        ]
      },
      {
        "avg_logprob": -0.2529557684193487,
        "compression_ratio": 1.6101694915254237,
        "end": 356.59999999999997,
        "id": 74,
        "no_speech_prob": 0.00003944234049413353,
        "seek": 34920,
        "start": 349.76,
        "temperature": 0,
        "text": " Helper library where deep learn can use with p5 in future videos alright, so I think that's pretty much it for this video",
        "tokens": [
          50392,
          6128,
          610,
          6405,
          689,
          2452,
          1466,
          393,
          764,
          365,
          280,
          20,
          294,
          2027,
          2145,
          5845,
          11,
          370,
          286,
          519,
          300,
          311,
          1238,
          709,
          309,
          337,
          341,
          960,
          50734
        ]
      },
      {
        "avg_logprob": -0.2529557684193487,
        "compression_ratio": 1.6101694915254237,
        "end": 363.36,
        "id": 75,
        "no_speech_prob": 0.00003944234049413353,
        "seek": 34920,
        "start": 356.59999999999997,
        "temperature": 0,
        "text": " I'm now ready to kind of like get back up to speed and the things that I need to do are finish this",
        "tokens": [
          50734,
          286,
          478,
          586,
          1919,
          281,
          733,
          295,
          411,
          483,
          646,
          493,
          281,
          3073,
          293,
          264,
          721,
          300,
          286,
          643,
          281,
          360,
          366,
          2413,
          341,
          51072
        ]
      },
      {
        "avg_logprob": -0.2529557684193487,
        "compression_ratio": 1.6101694915254237,
        "end": 367.76,
        "id": 76,
        "no_speech_prob": 0.00003944234049413353,
        "seek": 34920,
        "start": 363.96,
        "temperature": 0,
        "text": " Matrix class with more useful matrix math operations",
        "tokens": [
          51102,
          36274,
          1508,
          365,
          544,
          4420,
          8141,
          5221,
          7705,
          51292
        ]
      },
      {
        "avg_logprob": -0.2529557684193487,
        "compression_ratio": 1.6101694915254237,
        "end": 371.91999999999996,
        "id": 77,
        "no_speech_prob": 0.00003944234049413353,
        "seek": 34920,
        "start": 367.76,
        "temperature": 0,
        "text": " I need to be able to multiply two matrices together and understand what it means to do that",
        "tokens": [
          51292,
          286,
          643,
          281,
          312,
          1075,
          281,
          12972,
          732,
          32284,
          1214,
          293,
          1223,
          437,
          309,
          1355,
          281,
          360,
          300,
          51500
        ]
      },
      {
        "avg_logprob": -0.2529557684193487,
        "compression_ratio": 1.6101694915254237,
        "end": 374.52,
        "id": 78,
        "no_speech_prob": 0.00003944234049413353,
        "seek": 34920,
        "start": 372.52,
        "temperature": 0,
        "text": " and then also",
        "tokens": [
          51530,
          293,
          550,
          611,
          51630
        ]
      },
      {
        "avg_logprob": -0.57049844323135,
        "compression_ratio": 1.7044334975369457,
        "end": 381.52,
        "id": 79,
        "no_speech_prob": 0.00036829180316999555,
        "seek": 37452,
        "start": 374.52,
        "temperature": 0,
        "text": " And then finish this to add the rest of the functionality for the neural network that uses that stores all the pieces of the neural network in these matrices and",
        "tokens": [
          50364,
          400,
          550,
          2413,
          341,
          281,
          909,
          264,
          1472,
          295,
          264,
          14980,
          337,
          264,
          18161,
          3209,
          300,
          4960,
          300,
          9512,
          439,
          264,
          3755,
          295,
          264,
          18161,
          3209,
          294,
          613,
          32284,
          293,
          50714
        ]
      },
      {
        "avg_logprob": -0.57049844323135,
        "compression_ratio": 1.7044334975369457,
        "end": 388.52,
        "id": 80,
        "no_speech_prob": 0.00036829180316999555,
        "seek": 37452,
        "start": 381.52,
        "temperature": 0,
        "text": " implement the algorithm, so I'll be getting to all that stuff, so see you in the next video wait this video is not over yet",
        "tokens": [
          50714,
          4445,
          264,
          9284,
          11,
          370,
          286,
          603,
          312,
          1242,
          281,
          439,
          300,
          1507,
          11,
          370,
          536,
          291,
          294,
          264,
          958,
          960,
          1699,
          341,
          960,
          307,
          406,
          670,
          1939,
          51064
        ]
      },
      {
        "avg_logprob": -0.57049844323135,
        "compression_ratio": 1.7044334975369457,
        "end": 392.35999999999996,
        "id": 81,
        "no_speech_prob": 0.00036829180316999555,
        "seek": 37452,
        "start": 388.52,
        "temperature": 0,
        "text": " I forgot that I should also replace var",
        "tokens": [
          51064,
          286,
          5298,
          300,
          286,
          820,
          611,
          7406,
          1374,
          51256
        ]
      },
      {
        "avg_logprob": -0.57049844323135,
        "compression_ratio": 1.7044334975369457,
        "end": 394.35999999999996,
        "id": 82,
        "no_speech_prob": 0.00036829180316999555,
        "seek": 37452,
        "start": 392.35999999999996,
        "temperature": 0,
        "text": " with let",
        "tokens": [
          51256,
          365,
          718,
          51356
        ]
      },
      {
        "avg_logprob": -0.57049844323135,
        "compression_ratio": 1.7044334975369457,
        "end": 398.35999999999996,
        "id": 83,
        "no_speech_prob": 0.00036829180316999555,
        "seek": 37452,
        "start": 396.35999999999996,
        "temperature": 0,
        "text": " Replace all",
        "tokens": [
          51456,
          1300,
          6742,
          439,
          51556
        ]
      },
      {
        "avg_logprob": -0.7860838770866394,
        "compression_ratio": 0.2727272727272727,
        "end": 406.52,
        "id": 84,
        "no_speech_prob": 0.36926209926605225,
        "seek": 40452,
        "start": 404.52,
        "temperature": 0,
        "text": " You",
        "tokens": [
          50364,
          509,
          50464
        ]
      }
    ],
    "transcription": " Hello, I'm back. I'm finally getting to that neural network playlist which left off in May and I'm continuing it now you might be watching again You might be watching to the future when it's all been completed, but you could see some time passed and here I am again now the last video in this playlist looked at Vector math and I believe I looked at adding I can actually look it up here. The last thing I did was this function multiply, which was simply multiplying a Matrix by a scalar so taking each element of a matrix and multiplying it by a single number now You also might notice here matrix dot prototype dot multiply What is that? Well since I last did these videos I have started adopting ES6 classes class is a template for creating an object that's part of ECMA scripts version 6 yada yada yada I have a whole playlist about that stuff if you don't know about classes you can go and look at those tutorials But before I move on and finish the vector the matrix math that we need to build this neural network I want to rewrite all of the what I have so far with ES6. So that's all I'm gonna do in this video Okay, so let's actually do that first let's wander over I was first building a neural network object the idea of a neural network is having input nodes a Hidden layer and output nodes, so let me first change this to be a class class neural network And then once I have a class this constructor function actually can now become Constructor Call constructor, and you know what what the method that I'm kind of adopting is when I pass arguments in I Actually give those arguments Parameters I guess in this case in the constructor definition I give those parameters the same name as the properties attached to the object and they are differentiated by Say it with me this dot That's right this dot Okay, so So there we go so now I've converted the neural network Class it wasn't a class before but the constructor function into an ES6 class now. I've got to do the same thing with the matrix Constructor function so this was the matrix constructor function, and I now want this to be a class called matrix And I'm gonna put this around everything And I Don't know what Adam wants me to do, but okay, and then this constructor function is now called Constructor this is what happens in the constructor, and this is just the randomized function All these functions that are attached to the prototype can just be written by their name inside of the class this is add and This is Multiply that's what we're gonna be working on the next video alright, so So in a moment. I want to check let me let me check to make sure this is like still working So if I go to the browser Refresh the page. I should be able to say things like let M equal a new matrix Three three by three I should be able to say console dot table M And I can see oops nope I did this mistake in my previous is console dot table M dot matrix and you can see there it is so this seems to be and I could say M dot add the number five And then I could look at it, so it still seems to be working. I have a matrix That's three by three it gets it by default. It's filled with zeros If I add five to it it looks like five if I say M dot randomize Now I can look at it again. It has random numbers, so it's still working. That's good Now here's the other aspect of this one thing you might notice is that I'm doing a lot of loops and array operations like I'm saying hey for Every element of this array at index I at index J. Do this thing except there are actually You probably know this already. I'm a bit slow To catch up with these things there are a bunch of useful array functions I often think of them as es6 like this video is about converting it to es6 But really they've been around before es6 and these are those these functions called like map Reduces one Fill is one and a filter. I actually don't remember what filter does I know what these do and I think having access to using some of these array functions Will make this matrix lot will be useful in the development of this matrix library however For simplicity's sake as I go on into the next video. I am still going to do all of the Matrix math operations in the sort of longest long windedest way, but actually a word, but in a very long winded way Then at the end I'll try to come back and and and use some of these and I and I should mention that Where am I going with this? Eventually this I want to learn and understand all of these matrix operations and write the code for them to kind of get my hands In there and figure it out, but in the end. I'm gonna actually take out all of this stuff and replace all of the Matrix operations with a library from Google called deep learn dot JS so stay tuned there's gonna be a lot more about this library and a Helper library where deep learn can use with p5 in future videos alright, so I think that's pretty much it for this video I'm now ready to kind of like get back up to speed and the things that I need to do are finish this Matrix class with more useful matrix math operations I need to be able to multiply two matrices together and understand what it means to do that and then also And then finish this to add the rest of the functionality for the neural network that uses that stores all the pieces of the neural network in these matrices and implement the algorithm, so I'll be getting to all that stuff, so see you in the next video wait this video is not over yet I forgot that I should also replace var with let Replace all You",
    "translation": null
  },
  "error": null,
  "status": "succeeded",
  "created_at": "2023-09-26T21:03:57.42381Z",
  "started_at": "2023-09-26T21:24:18.101097Z",
  "completed_at": "2023-09-26T21:25:54.981968Z",
  "webhook": "https://83ceaa0b612c.ngrok.app/?video_id=puWqNBFDMMk",
  "webhook_events_filter": [
    "completed"
  ],
  "metrics": {
    "predict_time": 96.880871
  },
  "urls": {
    "cancel": "https://api.replicate.com/v1/predictions/4ypzvsrbuoptejtz4mwc6s3p2i/cancel",
    "get": "https://api.replicate.com/v1/predictions/4ypzvsrbuoptejtz4mwc6s3p2i"
  }
}